
display.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006074  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000ebc  08006184  08006184  00016184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007040  08007040  00020074  2**0
                  CONTENTS
  4 .ARM          00000000  08007040  08007040  00020074  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007040  08007040  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007040  08007040  00017040  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007044  08007044  00017044  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  08007048  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001608  20000074  080070bc  00020074  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000167c  080070bc  0002167c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002009d  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001445d  00000000  00000000  000200e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000323d  00000000  00000000  0003453d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001448  00000000  00000000  00037780  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000fe3  00000000  00000000  00038bc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001b0cc  00000000  00000000  00039bab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00018555  00000000  00000000  00054c77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000977fc  00000000  00000000  0006d1cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00005cd0  00000000  00000000  001049c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004a  00000000  00000000  0010a698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000074 	.word	0x20000074
 800012c:	00000000 	.word	0x00000000
 8000130:	0800616c 	.word	0x0800616c

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000078 	.word	0x20000078
 800014c:	0800616c 	.word	0x0800616c

08000150 <vApplicationStackOverflowHook>:
void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);
void vApplicationMallocFailedHook(void);

/* USER CODE BEGIN 4 */
__weak void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
{
 8000150:	b480      	push	{r7}
 8000152:	b083      	sub	sp, #12
 8000154:	af00      	add	r7, sp, #0
 8000156:	6078      	str	r0, [r7, #4]
 8000158:	6039      	str	r1, [r7, #0]
   /* Run time stack overflow checking is performed if
   configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
   called if a stack overflow is detected. */
}
 800015a:	bf00      	nop
 800015c:	370c      	adds	r7, #12
 800015e:	46bd      	mov	sp, r7
 8000160:	bc80      	pop	{r7}
 8000162:	4770      	bx	lr

08000164 <vApplicationMallocFailedHook>:
/* USER CODE END 4 */

/* USER CODE BEGIN 5 */
__weak void vApplicationMallocFailedHook(void)
{
 8000164:	b480      	push	{r7}
 8000166:	af00      	add	r7, sp, #0
   demo application. If heap_1.c or heap_2.c are used, then the size of the
   heap available to pvPortMalloc() is defined by configTOTAL_HEAP_SIZE in
   FreeRTOSConfig.h, and the xPortGetFreeHeapSize() API function can be used
   to query the size of free heap space that remains (although it does not
   provide information on how the remaining heap might be fragmented). */
}
 8000168:	bf00      	nop
 800016a:	46bd      	mov	sp, r7
 800016c:	bc80      	pop	{r7}
 800016e:	4770      	bx	lr

08000170 <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	60f8      	str	r0, [r7, #12]
 8000178:	60b9      	str	r1, [r7, #8]
 800017a:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 800017c:	68fb      	ldr	r3, [r7, #12]
 800017e:	4a06      	ldr	r2, [pc, #24]	; (8000198 <vApplicationGetIdleTaskMemory+0x28>)
 8000180:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 8000182:	68bb      	ldr	r3, [r7, #8]
 8000184:	4a05      	ldr	r2, [pc, #20]	; (800019c <vApplicationGetIdleTaskMemory+0x2c>)
 8000186:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 8000188:	687b      	ldr	r3, [r7, #4]
 800018a:	2280      	movs	r2, #128	; 0x80
 800018c:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 800018e:	bf00      	nop
 8000190:	3714      	adds	r7, #20
 8000192:	46bd      	mov	sp, r7
 8000194:	bc80      	pop	{r7}
 8000196:	4770      	bx	lr
 8000198:	20000090 	.word	0x20000090
 800019c:	200000e8 	.word	0x200000e8

080001a0 <_write>:
#include "../display/ssd1306.h"

I2C_HandleTypeDef hi2c2;
UART_HandleTypeDef huart1;

int _write(int file, char *data, int len){
 80001a0:	b580      	push	{r7, lr}
 80001a2:	b086      	sub	sp, #24
 80001a4:	af00      	add	r7, sp, #0
 80001a6:	60f8      	str	r0, [r7, #12]
 80001a8:	60b9      	str	r1, [r7, #8]
 80001aa:	607a      	str	r2, [r7, #4]
		 if ((file != STDOUT_FILENO) && (file != STDERR_FILENO)){
 80001ac:	68fb      	ldr	r3, [r7, #12]
 80001ae:	2b01      	cmp	r3, #1
 80001b0:	d00a      	beq.n	80001c8 <_write+0x28>
 80001b2:	68fb      	ldr	r3, [r7, #12]
 80001b4:	2b02      	cmp	r3, #2
 80001b6:	d007      	beq.n	80001c8 <_write+0x28>
						errno = EBADF;
 80001b8:	f005 fa86 	bl	80056c8 <__errno>
 80001bc:	4603      	mov	r3, r0
 80001be:	2209      	movs	r2, #9
 80001c0:	601a      	str	r2, [r3, #0]
						return -1;
 80001c2:	f04f 33ff 	mov.w	r3, #4294967295
 80001c6:	e00f      	b.n	80001e8 <_write+0x48>
		 }
		 HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, (uint8_t*)data, len, 1000);
 80001c8:	687b      	ldr	r3, [r7, #4]
 80001ca:	b29a      	uxth	r2, r3
 80001cc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80001d0:	68b9      	ldr	r1, [r7, #8]
 80001d2:	4807      	ldr	r0, [pc, #28]	; (80001f0 <_write+0x50>)
 80001d4:	f002 ff1e 	bl	8003014 <HAL_UART_Transmit>
 80001d8:	4603      	mov	r3, r0
 80001da:	75fb      	strb	r3, [r7, #23]

		 return (status == HAL_OK ? len : 0);
 80001dc:	7dfb      	ldrb	r3, [r7, #23]
 80001de:	2b00      	cmp	r3, #0
 80001e0:	d101      	bne.n	80001e6 <_write+0x46>
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	e000      	b.n	80001e8 <_write+0x48>
 80001e6:	2300      	movs	r3, #0
}
 80001e8:	4618      	mov	r0, r3
 80001ea:	3718      	adds	r7, #24
 80001ec:	46bd      	mov	sp, r7
 80001ee:	bd80      	pop	{r7, pc}
 80001f0:	2000033c 	.word	0x2000033c

080001f4 <main>:
QueueHandle_t button_queue;

bool block = true;

int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b082      	sub	sp, #8
 80001f8:	af02      	add	r7, sp, #8

	HAL_Init();
 80001fa:	f000 ff89 	bl	8001110 <HAL_Init>
	SystemClock_Config();
 80001fe:	f000 f95f 	bl	80004c0 <SystemClock_Config>

	MX_GPIO_Init();
 8000202:	f000 f9fb 	bl	80005fc <MX_GPIO_Init>
	MX_I2C2_Init();
 8000206:	f000 f9a1 	bl	800054c <MX_I2C2_Init>
	MX_USART1_UART_Init();
 800020a:	f000 f9cd 	bl	80005a8 <MX_USART1_UART_Init>

	printf("\r\n\r\nDisplay Test\r\n");
 800020e:	4811      	ldr	r0, [pc, #68]	; (8000254 <main+0x60>)
 8000210:	f005 f92c 	bl	800546c <puts>

	button_queue = xQueueCreate(10, sizeof(uint8_t));
 8000214:	2200      	movs	r2, #0
 8000216:	2101      	movs	r1, #1
 8000218:	200a      	movs	r0, #10
 800021a:	f003 f993 	bl	8003544 <xQueueGenericCreate>
 800021e:	4603      	mov	r3, r0
 8000220:	4a0d      	ldr	r2, [pc, #52]	; (8000258 <main+0x64>)
 8000222:	6013      	str	r3, [r2, #0]

	xTaskCreate(display_task, "display_task", 128, NULL, tskIDLE_PRIORITY+2, NULL);
 8000224:	2300      	movs	r3, #0
 8000226:	9301      	str	r3, [sp, #4]
 8000228:	2302      	movs	r3, #2
 800022a:	9300      	str	r3, [sp, #0]
 800022c:	2300      	movs	r3, #0
 800022e:	2280      	movs	r2, #128	; 0x80
 8000230:	490a      	ldr	r1, [pc, #40]	; (800025c <main+0x68>)
 8000232:	480b      	ldr	r0, [pc, #44]	; (8000260 <main+0x6c>)
 8000234:	f003 fd2e 	bl	8003c94 <xTaskCreate>
	xTaskCreate(button_task, "button_task", 128, NULL, tskIDLE_PRIORITY+1, NULL);
 8000238:	2300      	movs	r3, #0
 800023a:	9301      	str	r3, [sp, #4]
 800023c:	2301      	movs	r3, #1
 800023e:	9300      	str	r3, [sp, #0]
 8000240:	2300      	movs	r3, #0
 8000242:	2280      	movs	r2, #128	; 0x80
 8000244:	4907      	ldr	r1, [pc, #28]	; (8000264 <main+0x70>)
 8000246:	4808      	ldr	r0, [pc, #32]	; (8000268 <main+0x74>)
 8000248:	f003 fd24 	bl	8003c94 <xTaskCreate>

	vTaskStartScheduler();
 800024c:	f003 ff0e 	bl	800406c <vTaskStartScheduler>

	while (1){
 8000250:	e7fe      	b.n	8000250 <main+0x5c>
 8000252:	bf00      	nop
 8000254:	08006184 	.word	0x08006184
 8000258:	20000384 	.word	0x20000384
 800025c:	08006198 	.word	0x08006198
 8000260:	0800026d 	.word	0x0800026d
 8000264:	080061a8 	.word	0x080061a8
 8000268:	08000401 	.word	0x08000401

0800026c <display_task>:
	}
}


void display_task(void *pvParameters){
 800026c:	b580      	push	{r7, lr}
 800026e:	b088      	sub	sp, #32
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
	vTaskSetApplicationTaskTag( NULL, ( void * ) 1 );
 8000274:	2101      	movs	r1, #1
 8000276:	2000      	movs	r0, #0
 8000278:	f004 f8ce 	bl	8004418 <vTaskSetApplicationTaskTag>
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800027c:	f004 f800 	bl	8004280 <xTaskGetTickCount>
 8000280:	4603      	mov	r3, r0
 8000282:	613b      	str	r3, [r7, #16]
	static int connected = 0;
	HAL_StatusTypeDef res;
	int i = 0 ;
 8000284:	2300      	movs	r3, #0
 8000286:	61bb      	str	r3, [r7, #24]
	uint8_t button_res = 0;	
 8000288:	2300      	movs	r3, #0
 800028a:	73fb      	strb	r3, [r7, #15]
	uint8_t position_x = 10;
 800028c:	230a      	movs	r3, #10
 800028e:	77fb      	strb	r3, [r7, #31]
	uint8_t position_y = 10;
 8000290:	230a      	movs	r3, #10
 8000292:	77bb      	strb	r3, [r7, #30]

	while(1){
		if(connected == 0){
 8000294:	4b4c      	ldr	r3, [pc, #304]	; (80003c8 <display_task+0x15c>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	2b00      	cmp	r3, #0
 800029a:	d11e      	bne.n	80002da <display_task+0x6e>
			res = SSD1306_Init(0x78); 
 800029c:	2078      	movs	r0, #120	; 0x78
 800029e:	f000 fc6f 	bl	8000b80 <SSD1306_Init>
 80002a2:	4603      	mov	r3, r0
 80002a4:	75fb      	strb	r3, [r7, #23]
			if( res != HAL_OK){
 80002a6:	7dfb      	ldrb	r3, [r7, #23]
 80002a8:	2b00      	cmp	r3, #0
 80002aa:	d006      	beq.n	80002ba <display_task+0x4e>
				printf("Display connection err: %d, with addr 0x%02X  \r\n", res, i);
 80002ac:	7dfb      	ldrb	r3, [r7, #23]
 80002ae:	69ba      	ldr	r2, [r7, #24]
 80002b0:	4619      	mov	r1, r3
 80002b2:	4846      	ldr	r0, [pc, #280]	; (80003cc <display_task+0x160>)
 80002b4:	f005 f874 	bl	80053a0 <iprintf>
 80002b8:	e07f      	b.n	80003ba <display_task+0x14e>
			}else{
				HAL_GPIO_WritePin(main_led_GPIO_Port, main_led_Pin, SET);
 80002ba:	2201      	movs	r2, #1
 80002bc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80002c0:	4843      	ldr	r0, [pc, #268]	; (80003d0 <display_task+0x164>)
 80002c2:	f001 f9d2 	bl	800166a <HAL_GPIO_WritePin>
				connected = 1;
 80002c6:	4b40      	ldr	r3, [pc, #256]	; (80003c8 <display_task+0x15c>)
 80002c8:	2201      	movs	r2, #1
 80002ca:	601a      	str	r2, [r3, #0]
				printf("Display connected with addr 0x%02X \\r\n", i);
 80002cc:	69b9      	ldr	r1, [r7, #24]
 80002ce:	4841      	ldr	r0, [pc, #260]	; (80003d4 <display_task+0x168>)
 80002d0:	f005 f866 	bl	80053a0 <iprintf>
				// SSD1306_Puts ("HELLO", &Font_11x18, 1); // print Hello 
				// SSD1306_GotoXY (10, 30); 
				// SSD1306_Puts ("WORLD !!", &Font_11x18, 1); 
				// SSD1306_UpdateScreen(); // update screen
				// printf("display done\r\n");
				SSD1306_Clear();
 80002d4:	f000 fe7b 	bl	8000fce <SSD1306_Clear>
 80002d8:	e06f      	b.n	80003ba <display_task+0x14e>
			}
		}else{
			xQueueReceive(button_queue, &button_res, 0);
 80002da:	4b3f      	ldr	r3, [pc, #252]	; (80003d8 <display_task+0x16c>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	f107 010f 	add.w	r1, r7, #15
 80002e2:	2200      	movs	r2, #0
 80002e4:	4618      	mov	r0, r3
 80002e6:	f003 fa89 	bl	80037fc <xQueueReceive>
			while(button_res != 0){
 80002ea:	e063      	b.n	80003b4 <display_task+0x148>
				SSD1306_GotoXY (position_x,position_y); 
 80002ec:	7ffb      	ldrb	r3, [r7, #31]
 80002ee:	b29b      	uxth	r3, r3
 80002f0:	7fba      	ldrb	r2, [r7, #30]
 80002f2:	b292      	uxth	r2, r2
 80002f4:	4611      	mov	r1, r2
 80002f6:	4618      	mov	r0, r3
 80002f8:	f000 fdae 	bl	8000e58 <SSD1306_GotoXY>
				switch(button_res){
 80002fc:	7bfb      	ldrb	r3, [r7, #15]
 80002fe:	3b01      	subs	r3, #1
 8000300:	2b07      	cmp	r3, #7
 8000302:	d837      	bhi.n	8000374 <display_task+0x108>
 8000304:	a201      	add	r2, pc, #4	; (adr r2, 800030c <display_task+0xa0>)
 8000306:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800030a:	bf00      	nop
 800030c:	0800033f 	.word	0x0800033f
 8000310:	08000363 	.word	0x08000363
 8000314:	08000375 	.word	0x08000375
 8000318:	08000351 	.word	0x08000351
 800031c:	08000375 	.word	0x08000375
 8000320:	08000375 	.word	0x08000375
 8000324:	08000375 	.word	0x08000375
 8000328:	0800032d 	.word	0x0800032d
					case(0b00001000):
						printf("Button left pressed \r\n");
 800032c:	482b      	ldr	r0, [pc, #172]	; (80003dc <display_task+0x170>)
 800032e:	f005 f89d 	bl	800546c <puts>
						SSD1306_Puts ("L", &Font_11x18, 1); 
 8000332:	2201      	movs	r2, #1
 8000334:	492a      	ldr	r1, [pc, #168]	; (80003e0 <display_task+0x174>)
 8000336:	482b      	ldr	r0, [pc, #172]	; (80003e4 <display_task+0x178>)
 8000338:	f000 fe24 	bl	8000f84 <SSD1306_Puts>
						break;
 800033c:	e01b      	b.n	8000376 <display_task+0x10a>
					case(0b00000001):
						printf("Button right pressed \r\n");
 800033e:	482a      	ldr	r0, [pc, #168]	; (80003e8 <display_task+0x17c>)
 8000340:	f005 f894 	bl	800546c <puts>
						SSD1306_Puts ("R", &Font_11x18, 1);
 8000344:	2201      	movs	r2, #1
 8000346:	4926      	ldr	r1, [pc, #152]	; (80003e0 <display_task+0x174>)
 8000348:	4828      	ldr	r0, [pc, #160]	; (80003ec <display_task+0x180>)
 800034a:	f000 fe1b 	bl	8000f84 <SSD1306_Puts>
						break;
 800034e:	e012      	b.n	8000376 <display_task+0x10a>
					case(0b00000100):
						printf("Button up pressed \r\n");
 8000350:	4827      	ldr	r0, [pc, #156]	; (80003f0 <display_task+0x184>)
 8000352:	f005 f88b 	bl	800546c <puts>
						SSD1306_Puts ("U", &Font_11x18, 1); 
 8000356:	2201      	movs	r2, #1
 8000358:	4921      	ldr	r1, [pc, #132]	; (80003e0 <display_task+0x174>)
 800035a:	4826      	ldr	r0, [pc, #152]	; (80003f4 <display_task+0x188>)
 800035c:	f000 fe12 	bl	8000f84 <SSD1306_Puts>
						break;
 8000360:	e009      	b.n	8000376 <display_task+0x10a>
					case(0b00000010):
						printf("Button down pressed \r\n");
 8000362:	4825      	ldr	r0, [pc, #148]	; (80003f8 <display_task+0x18c>)
 8000364:	f005 f882 	bl	800546c <puts>
						SSD1306_Puts ("D", &Font_11x18, 1); 
 8000368:	2201      	movs	r2, #1
 800036a:	491d      	ldr	r1, [pc, #116]	; (80003e0 <display_task+0x174>)
 800036c:	4823      	ldr	r0, [pc, #140]	; (80003fc <display_task+0x190>)
 800036e:	f000 fe09 	bl	8000f84 <SSD1306_Puts>
						break;
 8000372:	e000      	b.n	8000376 <display_task+0x10a>
						
					default: break;
 8000374:	bf00      	nop
				}
				SSD1306_UpdateScreen(); 
 8000376:	f000 fccb 	bl	8000d10 <SSD1306_UpdateScreen>
				if(position_x < 100){
 800037a:	7ffb      	ldrb	r3, [r7, #31]
 800037c:	2b63      	cmp	r3, #99	; 0x63
 800037e:	d803      	bhi.n	8000388 <display_task+0x11c>
					position_x += 10;
 8000380:	7ffb      	ldrb	r3, [r7, #31]
 8000382:	330a      	adds	r3, #10
 8000384:	77fb      	strb	r3, [r7, #31]
 8000386:	e00b      	b.n	80003a0 <display_task+0x134>
				}else{
					position_x = 10;
 8000388:	230a      	movs	r3, #10
 800038a:	77fb      	strb	r3, [r7, #31]
					position_y += 15;
 800038c:	7fbb      	ldrb	r3, [r7, #30]
 800038e:	330f      	adds	r3, #15
 8000390:	77bb      	strb	r3, [r7, #30]
					if(position_y > 40){
 8000392:	7fbb      	ldrb	r3, [r7, #30]
 8000394:	2b28      	cmp	r3, #40	; 0x28
 8000396:	d903      	bls.n	80003a0 <display_task+0x134>
						position_y = 10;
 8000398:	230a      	movs	r3, #10
 800039a:	77bb      	strb	r3, [r7, #30]
						SSD1306_Clear();
 800039c:	f000 fe17 	bl	8000fce <SSD1306_Clear>
					}
				}
				button_res = 0;
 80003a0:	2300      	movs	r3, #0
 80003a2:	73fb      	strb	r3, [r7, #15]
				xQueueReceive(button_queue, &button_res, 0);
 80003a4:	4b0c      	ldr	r3, [pc, #48]	; (80003d8 <display_task+0x16c>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	f107 010f 	add.w	r1, r7, #15
 80003ac:	2200      	movs	r2, #0
 80003ae:	4618      	mov	r0, r3
 80003b0:	f003 fa24 	bl	80037fc <xQueueReceive>
			while(button_res != 0){
 80003b4:	7bfb      	ldrb	r3, [r7, #15]
 80003b6:	2b00      	cmp	r3, #0
 80003b8:	d198      	bne.n	80002ec <display_task+0x80>
			}
		}
		vTaskDelayUntil(&xLastWakeTime, pdMS_TO_TICKS(250));
 80003ba:	f107 0310 	add.w	r3, r7, #16
 80003be:	21fa      	movs	r1, #250	; 0xfa
 80003c0:	4618      	mov	r0, r3
 80003c2:	f003 fda1 	bl	8003f08 <vTaskDelayUntil>
		if(connected == 0){
 80003c6:	e765      	b.n	8000294 <display_task+0x28>
 80003c8:	20000388 	.word	0x20000388
 80003cc:	080061b4 	.word	0x080061b4
 80003d0:	40010c00 	.word	0x40010c00
 80003d4:	080061e8 	.word	0x080061e8
 80003d8:	20000384 	.word	0x20000384
 80003dc:	08006210 	.word	0x08006210
 80003e0:	20000004 	.word	0x20000004
 80003e4:	08006228 	.word	0x08006228
 80003e8:	0800622c 	.word	0x0800622c
 80003ec:	08006244 	.word	0x08006244
 80003f0:	08006248 	.word	0x08006248
 80003f4:	0800625c 	.word	0x0800625c
 80003f8:	08006260 	.word	0x08006260
 80003fc:	08006278 	.word	0x08006278

08000400 <button_task>:
	}
	printf("Destroying task 1 \r\n");
	vTaskDelete(NULL);
}

void button_task(void *pvParameters){
 8000400:	b580      	push	{r7, lr}
 8000402:	b084      	sub	sp, #16
 8000404:	af00      	add	r7, sp, #0
 8000406:	6078      	str	r0, [r7, #4]
	vTaskSetApplicationTaskTag( NULL, ( void * ) 2 );
 8000408:	2102      	movs	r1, #2
 800040a:	2000      	movs	r0, #0
 800040c:	f004 f804 	bl	8004418 <vTaskSetApplicationTaskTag>
	uint8_t button_bin = 0;
 8000410:	2300      	movs	r3, #0
 8000412:	73fb      	strb	r3, [r7, #15]
	while(1){
		HAL_GPIO_TogglePin(sec_led_GPIO_Port, sec_led_Pin);
 8000414:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000418:	4826      	ldr	r0, [pc, #152]	; (80004b4 <button_task+0xb4>)
 800041a:	f001 f93e 	bl	800169a <HAL_GPIO_TogglePin>

		if(HAL_GPIO_ReadPin(button_l_GPIO_Port, button_l_Pin) == GPIO_PIN_RESET){
 800041e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000422:	4825      	ldr	r0, [pc, #148]	; (80004b8 <button_task+0xb8>)
 8000424:	f001 f90a 	bl	800163c <HAL_GPIO_ReadPin>
 8000428:	4603      	mov	r3, r0
 800042a:	2b00      	cmp	r3, #0
 800042c:	d109      	bne.n	8000442 <button_task+0x42>
			button_bin = 0b00001000;
 800042e:	2308      	movs	r3, #8
 8000430:	73fb      	strb	r3, [r7, #15]
			xQueueSend(button_queue, &button_bin, 0);
 8000432:	4b22      	ldr	r3, [pc, #136]	; (80004bc <button_task+0xbc>)
 8000434:	6818      	ldr	r0, [r3, #0]
 8000436:	f107 010f 	add.w	r1, r7, #15
 800043a:	2300      	movs	r3, #0
 800043c:	2200      	movs	r2, #0
 800043e:	f003 f8df 	bl	8003600 <xQueueGenericSend>
		}
		if(HAL_GPIO_ReadPin(button_r_GPIO_Port, button_r_Pin) == GPIO_PIN_RESET){
 8000442:	2120      	movs	r1, #32
 8000444:	481b      	ldr	r0, [pc, #108]	; (80004b4 <button_task+0xb4>)
 8000446:	f001 f8f9 	bl	800163c <HAL_GPIO_ReadPin>
 800044a:	4603      	mov	r3, r0
 800044c:	2b00      	cmp	r3, #0
 800044e:	d109      	bne.n	8000464 <button_task+0x64>
			xQueueSend(button_queue, &button_bin, 0);
 8000450:	4b1a      	ldr	r3, [pc, #104]	; (80004bc <button_task+0xbc>)
 8000452:	6818      	ldr	r0, [r3, #0]
 8000454:	f107 010f 	add.w	r1, r7, #15
 8000458:	2300      	movs	r3, #0
 800045a:	2200      	movs	r2, #0
 800045c:	f003 f8d0 	bl	8003600 <xQueueGenericSend>
			button_bin = 0b00000001;
 8000460:	2301      	movs	r3, #1
 8000462:	73fb      	strb	r3, [r7, #15]
		}
		if(HAL_GPIO_ReadPin(button_u_GPIO_Port, button_u_Pin) == GPIO_PIN_RESET){
 8000464:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000468:	4813      	ldr	r0, [pc, #76]	; (80004b8 <button_task+0xb8>)
 800046a:	f001 f8e7 	bl	800163c <HAL_GPIO_ReadPin>
 800046e:	4603      	mov	r3, r0
 8000470:	2b00      	cmp	r3, #0
 8000472:	d109      	bne.n	8000488 <button_task+0x88>
			xQueueSend(button_queue, &button_bin, 0);
 8000474:	4b11      	ldr	r3, [pc, #68]	; (80004bc <button_task+0xbc>)
 8000476:	6818      	ldr	r0, [r3, #0]
 8000478:	f107 010f 	add.w	r1, r7, #15
 800047c:	2300      	movs	r3, #0
 800047e:	2200      	movs	r2, #0
 8000480:	f003 f8be 	bl	8003600 <xQueueGenericSend>
			button_bin = 0b00000100;
 8000484:	2304      	movs	r3, #4
 8000486:	73fb      	strb	r3, [r7, #15]
		}
		if(HAL_GPIO_ReadPin(button_d_GPIO_Port, button_d_Pin) == GPIO_PIN_RESET){
 8000488:	f44f 7180 	mov.w	r1, #256	; 0x100
 800048c:	480a      	ldr	r0, [pc, #40]	; (80004b8 <button_task+0xb8>)
 800048e:	f001 f8d5 	bl	800163c <HAL_GPIO_ReadPin>
 8000492:	4603      	mov	r3, r0
 8000494:	2b00      	cmp	r3, #0
 8000496:	d109      	bne.n	80004ac <button_task+0xac>
			xQueueSend(button_queue, &button_bin, 0);
 8000498:	4b08      	ldr	r3, [pc, #32]	; (80004bc <button_task+0xbc>)
 800049a:	6818      	ldr	r0, [r3, #0]
 800049c:	f107 010f 	add.w	r1, r7, #15
 80004a0:	2300      	movs	r3, #0
 80004a2:	2200      	movs	r2, #0
 80004a4:	f003 f8ac 	bl	8003600 <xQueueGenericSend>
			button_bin = 0b00000010;
 80004a8:	2302      	movs	r3, #2
 80004aa:	73fb      	strb	r3, [r7, #15]
		}
	
		vTaskDelay(100/ portTICK_PERIOD_MS);
 80004ac:	2064      	movs	r0, #100	; 0x64
 80004ae:	f003 fda9 	bl	8004004 <vTaskDelay>
		HAL_GPIO_TogglePin(sec_led_GPIO_Port, sec_led_Pin);
 80004b2:	e7af      	b.n	8000414 <button_task+0x14>
 80004b4:	40010c00 	.word	0x40010c00
 80004b8:	40010800 	.word	0x40010800
 80004bc:	20000384 	.word	0x20000384

080004c0 <SystemClock_Config>:
	}
}

void SystemClock_Config(void)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b090      	sub	sp, #64	; 0x40
 80004c4:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80004c6:	f107 0318 	add.w	r3, r7, #24
 80004ca:	2228      	movs	r2, #40	; 0x28
 80004cc:	2100      	movs	r1, #0
 80004ce:	4618      	mov	r0, r3
 80004d0:	f005 f8ac 	bl	800562c <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80004d4:	1d3b      	adds	r3, r7, #4
 80004d6:	2200      	movs	r2, #0
 80004d8:	601a      	str	r2, [r3, #0]
 80004da:	605a      	str	r2, [r3, #4]
 80004dc:	609a      	str	r2, [r3, #8]
 80004de:	60da      	str	r2, [r3, #12]
 80004e0:	611a      	str	r2, [r3, #16]

	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80004e2:	2301      	movs	r3, #1
 80004e4:	61bb      	str	r3, [r7, #24]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80004e6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80004ea:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80004ec:	2300      	movs	r3, #0
 80004ee:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80004f0:	2301      	movs	r3, #1
 80004f2:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80004f4:	2302      	movs	r3, #2
 80004f6:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80004f8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80004fc:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80004fe:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000502:	63fb      	str	r3, [r7, #60]	; 0x3c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000504:	f107 0318 	add.w	r3, r7, #24
 8000508:	4618      	mov	r0, r3
 800050a:	f001 fea9 	bl	8002260 <HAL_RCC_OscConfig>
 800050e:	4603      	mov	r3, r0
 8000510:	2b00      	cmp	r3, #0
 8000512:	d001      	beq.n	8000518 <SystemClock_Config+0x58>
	{
		Error_Handler();
 8000514:	f000 f91a 	bl	800074c <Error_Handler>
	}

	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000518:	230f      	movs	r3, #15
 800051a:	607b      	str	r3, [r7, #4]
								|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800051c:	2302      	movs	r3, #2
 800051e:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000520:	2300      	movs	r3, #0
 8000522:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000524:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000528:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800052a:	2300      	movs	r3, #0
 800052c:	617b      	str	r3, [r7, #20]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800052e:	1d3b      	adds	r3, r7, #4
 8000530:	2102      	movs	r1, #2
 8000532:	4618      	mov	r0, r3
 8000534:	f002 f916 	bl	8002764 <HAL_RCC_ClockConfig>
 8000538:	4603      	mov	r3, r0
 800053a:	2b00      	cmp	r3, #0
 800053c:	d001      	beq.n	8000542 <SystemClock_Config+0x82>
	{
		Error_Handler();
 800053e:	f000 f905 	bl	800074c <Error_Handler>
	}
}
 8000542:	bf00      	nop
 8000544:	3740      	adds	r7, #64	; 0x40
 8000546:	46bd      	mov	sp, r7
 8000548:	bd80      	pop	{r7, pc}
	...

0800054c <MX_I2C2_Init>:

static void MX_I2C2_Init(void)
{
 800054c:	b580      	push	{r7, lr}
 800054e:	af00      	add	r7, sp, #0
	hi2c2.Instance = I2C2;
 8000550:	4b12      	ldr	r3, [pc, #72]	; (800059c <MX_I2C2_Init+0x50>)
 8000552:	4a13      	ldr	r2, [pc, #76]	; (80005a0 <MX_I2C2_Init+0x54>)
 8000554:	601a      	str	r2, [r3, #0]
	hi2c2.Init.ClockSpeed = 400000;
 8000556:	4b11      	ldr	r3, [pc, #68]	; (800059c <MX_I2C2_Init+0x50>)
 8000558:	4a12      	ldr	r2, [pc, #72]	; (80005a4 <MX_I2C2_Init+0x58>)
 800055a:	605a      	str	r2, [r3, #4]
	hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800055c:	4b0f      	ldr	r3, [pc, #60]	; (800059c <MX_I2C2_Init+0x50>)
 800055e:	2200      	movs	r2, #0
 8000560:	609a      	str	r2, [r3, #8]
	hi2c2.Init.OwnAddress1 = 0;
 8000562:	4b0e      	ldr	r3, [pc, #56]	; (800059c <MX_I2C2_Init+0x50>)
 8000564:	2200      	movs	r2, #0
 8000566:	60da      	str	r2, [r3, #12]
	hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000568:	4b0c      	ldr	r3, [pc, #48]	; (800059c <MX_I2C2_Init+0x50>)
 800056a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800056e:	611a      	str	r2, [r3, #16]
	hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000570:	4b0a      	ldr	r3, [pc, #40]	; (800059c <MX_I2C2_Init+0x50>)
 8000572:	2200      	movs	r2, #0
 8000574:	615a      	str	r2, [r3, #20]
	hi2c2.Init.OwnAddress2 = 0;
 8000576:	4b09      	ldr	r3, [pc, #36]	; (800059c <MX_I2C2_Init+0x50>)
 8000578:	2200      	movs	r2, #0
 800057a:	619a      	str	r2, [r3, #24]
	hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800057c:	4b07      	ldr	r3, [pc, #28]	; (800059c <MX_I2C2_Init+0x50>)
 800057e:	2200      	movs	r2, #0
 8000580:	61da      	str	r2, [r3, #28]
	hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000582:	4b06      	ldr	r3, [pc, #24]	; (800059c <MX_I2C2_Init+0x50>)
 8000584:	2200      	movs	r2, #0
 8000586:	621a      	str	r2, [r3, #32]
	if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000588:	4804      	ldr	r0, [pc, #16]	; (800059c <MX_I2C2_Init+0x50>)
 800058a:	f001 f89f 	bl	80016cc <HAL_I2C_Init>
 800058e:	4603      	mov	r3, r0
 8000590:	2b00      	cmp	r3, #0
 8000592:	d001      	beq.n	8000598 <MX_I2C2_Init+0x4c>
	{
		Error_Handler();
 8000594:	f000 f8da 	bl	800074c <Error_Handler>
	}
}
 8000598:	bf00      	nop
 800059a:	bd80      	pop	{r7, pc}
 800059c:	200002e8 	.word	0x200002e8
 80005a0:	40005800 	.word	0x40005800
 80005a4:	00061a80 	.word	0x00061a80

080005a8 <MX_USART1_UART_Init>:

static void MX_USART1_UART_Init(void)
{
 80005a8:	b580      	push	{r7, lr}
 80005aa:	af00      	add	r7, sp, #0
	huart1.Instance = USART1;
 80005ac:	4b11      	ldr	r3, [pc, #68]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005ae:	4a12      	ldr	r2, [pc, #72]	; (80005f8 <MX_USART1_UART_Init+0x50>)
 80005b0:	601a      	str	r2, [r3, #0]
	huart1.Init.BaudRate = 9600;
 80005b2:	4b10      	ldr	r3, [pc, #64]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005b4:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80005b8:	605a      	str	r2, [r3, #4]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80005ba:	4b0e      	ldr	r3, [pc, #56]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005bc:	2200      	movs	r2, #0
 80005be:	609a      	str	r2, [r3, #8]
	huart1.Init.StopBits = UART_STOPBITS_1;
 80005c0:	4b0c      	ldr	r3, [pc, #48]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005c2:	2200      	movs	r2, #0
 80005c4:	60da      	str	r2, [r3, #12]
	huart1.Init.Parity = UART_PARITY_NONE;
 80005c6:	4b0b      	ldr	r3, [pc, #44]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005c8:	2200      	movs	r2, #0
 80005ca:	611a      	str	r2, [r3, #16]
	huart1.Init.Mode = UART_MODE_TX_RX;
 80005cc:	4b09      	ldr	r3, [pc, #36]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005ce:	220c      	movs	r2, #12
 80005d0:	615a      	str	r2, [r3, #20]
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80005d2:	4b08      	ldr	r3, [pc, #32]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005d4:	2200      	movs	r2, #0
 80005d6:	619a      	str	r2, [r3, #24]
	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80005d8:	4b06      	ldr	r3, [pc, #24]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005da:	2200      	movs	r2, #0
 80005dc:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart1) != HAL_OK){
 80005de:	4805      	ldr	r0, [pc, #20]	; (80005f4 <MX_USART1_UART_Init+0x4c>)
 80005e0:	f002 fcc8 	bl	8002f74 <HAL_UART_Init>
 80005e4:	4603      	mov	r3, r0
 80005e6:	2b00      	cmp	r3, #0
 80005e8:	d001      	beq.n	80005ee <MX_USART1_UART_Init+0x46>
		Error_Handler();
 80005ea:	f000 f8af 	bl	800074c <Error_Handler>
	}

}
 80005ee:	bf00      	nop
 80005f0:	bd80      	pop	{r7, pc}
 80005f2:	bf00      	nop
 80005f4:	2000033c 	.word	0x2000033c
 80005f8:	40013800 	.word	0x40013800

080005fc <MX_GPIO_Init>:

static void MX_GPIO_Init(void)
{
 80005fc:	b580      	push	{r7, lr}
 80005fe:	b088      	sub	sp, #32
 8000600:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000602:	f107 0310 	add.w	r3, r7, #16
 8000606:	2200      	movs	r2, #0
 8000608:	601a      	str	r2, [r3, #0]
 800060a:	605a      	str	r2, [r3, #4]
 800060c:	609a      	str	r2, [r3, #8]
 800060e:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000610:	4b42      	ldr	r3, [pc, #264]	; (800071c <MX_GPIO_Init+0x120>)
 8000612:	699b      	ldr	r3, [r3, #24]
 8000614:	4a41      	ldr	r2, [pc, #260]	; (800071c <MX_GPIO_Init+0x120>)
 8000616:	f043 0320 	orr.w	r3, r3, #32
 800061a:	6193      	str	r3, [r2, #24]
 800061c:	4b3f      	ldr	r3, [pc, #252]	; (800071c <MX_GPIO_Init+0x120>)
 800061e:	699b      	ldr	r3, [r3, #24]
 8000620:	f003 0320 	and.w	r3, r3, #32
 8000624:	60fb      	str	r3, [r7, #12]
 8000626:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000628:	4b3c      	ldr	r3, [pc, #240]	; (800071c <MX_GPIO_Init+0x120>)
 800062a:	699b      	ldr	r3, [r3, #24]
 800062c:	4a3b      	ldr	r2, [pc, #236]	; (800071c <MX_GPIO_Init+0x120>)
 800062e:	f043 0308 	orr.w	r3, r3, #8
 8000632:	6193      	str	r3, [r2, #24]
 8000634:	4b39      	ldr	r3, [pc, #228]	; (800071c <MX_GPIO_Init+0x120>)
 8000636:	699b      	ldr	r3, [r3, #24]
 8000638:	f003 0308 	and.w	r3, r3, #8
 800063c:	60bb      	str	r3, [r7, #8]
 800063e:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000640:	4b36      	ldr	r3, [pc, #216]	; (800071c <MX_GPIO_Init+0x120>)
 8000642:	699b      	ldr	r3, [r3, #24]
 8000644:	4a35      	ldr	r2, [pc, #212]	; (800071c <MX_GPIO_Init+0x120>)
 8000646:	f043 0304 	orr.w	r3, r3, #4
 800064a:	6193      	str	r3, [r2, #24]
 800064c:	4b33      	ldr	r3, [pc, #204]	; (800071c <MX_GPIO_Init+0x120>)
 800064e:	699b      	ldr	r3, [r3, #24]
 8000650:	f003 0304 	and.w	r3, r3, #4
 8000654:	607b      	str	r3, [r7, #4]
 8000656:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, main_led_Pin|sec_led_Pin|trace_3_Pin, GPIO_PIN_RESET);
 8000658:	2200      	movs	r2, #0
 800065a:	f44f 4160 	mov.w	r1, #57344	; 0xe000
 800065e:	4830      	ldr	r0, [pc, #192]	; (8000720 <MX_GPIO_Init+0x124>)
 8000660:	f001 f803 	bl	800166a <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, trace_3_Pin, GPIO_PIN_SET);
 8000664:	2201      	movs	r2, #1
 8000666:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800066a:	482d      	ldr	r0, [pc, #180]	; (8000720 <MX_GPIO_Init+0x124>)
 800066c:	f000 fffd 	bl	800166a <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = main_led_Pin|sec_led_Pin|trace_3_Pin;
 8000670:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8000674:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000676:	2301      	movs	r3, #1
 8000678:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800067a:	2302      	movs	r3, #2
 800067c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800067e:	2302      	movs	r3, #2
 8000680:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000682:	f107 0310 	add.w	r3, r7, #16
 8000686:	4619      	mov	r1, r3
 8000688:	4825      	ldr	r0, [pc, #148]	; (8000720 <MX_GPIO_Init+0x124>)
 800068a:	f000 fe53 	bl	8001334 <HAL_GPIO_Init>

  HAL_GPIO_WritePin(GPIOB, display_reset_Pin, GPIO_PIN_SET);
 800068e:	2201      	movs	r2, #1
 8000690:	2108      	movs	r1, #8
 8000692:	4823      	ldr	r0, [pc, #140]	; (8000720 <MX_GPIO_Init+0x124>)
 8000694:	f000 ffe9 	bl	800166a <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = display_reset_Pin;
 8000698:	2308      	movs	r3, #8
 800069a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800069c:	2301      	movs	r3, #1
 800069e:	617b      	str	r3, [r7, #20]
//   GPIO_InitStruct.Pull = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006a0:	2302      	movs	r3, #2
 80006a2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80006a4:	f107 0310 	add.w	r3, r7, #16
 80006a8:	4619      	mov	r1, r3
 80006aa:	481d      	ldr	r0, [pc, #116]	; (8000720 <MX_GPIO_Init+0x124>)
 80006ac:	f000 fe42 	bl	8001334 <HAL_GPIO_Init>

  HAL_GPIO_WritePin(GPIOA, trace_1_Pin|trace_2_Pin, GPIO_PIN_RESET);
 80006b0:	2200      	movs	r2, #0
 80006b2:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80006b6:	481b      	ldr	r0, [pc, #108]	; (8000724 <MX_GPIO_Init+0x128>)
 80006b8:	f000 ffd7 	bl	800166a <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = trace_1_Pin|trace_2_Pin;
 80006bc:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80006c0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006c2:	2301      	movs	r3, #1
 80006c4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80006c6:	2302      	movs	r3, #2
 80006c8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006ca:	2302      	movs	r3, #2
 80006cc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80006ce:	f107 0310 	add.w	r3, r7, #16
 80006d2:	4619      	mov	r1, r3
 80006d4:	4813      	ldr	r0, [pc, #76]	; (8000724 <MX_GPIO_Init+0x128>)
 80006d6:	f000 fe2d 	bl	8001334 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = button_l_Pin|button_r_Pin|button_u_Pin|button_d_Pin;
 80006da:	f648 1320 	movw	r3, #35104	; 0x8920
 80006de:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80006e0:	2300      	movs	r3, #0
 80006e2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80006e4:	2301      	movs	r3, #1
 80006e6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006e8:	2302      	movs	r3, #2
 80006ea:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80006ec:	f107 0310 	add.w	r3, r7, #16
 80006f0:	4619      	mov	r1, r3
 80006f2:	480c      	ldr	r0, [pc, #48]	; (8000724 <MX_GPIO_Init+0x128>)
 80006f4:	f000 fe1e 	bl	8001334 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = button_r_Pin;
 80006f8:	2320      	movs	r3, #32
 80006fa:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80006fc:	2300      	movs	r3, #0
 80006fe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000700:	2301      	movs	r3, #1
 8000702:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000704:	2302      	movs	r3, #2
 8000706:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000708:	f107 0310 	add.w	r3, r7, #16
 800070c:	4619      	mov	r1, r3
 800070e:	4804      	ldr	r0, [pc, #16]	; (8000720 <MX_GPIO_Init+0x124>)
 8000710:	f000 fe10 	bl	8001334 <HAL_GPIO_Init>
/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000714:	bf00      	nop
 8000716:	3720      	adds	r7, #32
 8000718:	46bd      	mov	sp, r7
 800071a:	bd80      	pop	{r7, pc}
 800071c:	40021000 	.word	0x40021000
 8000720:	40010c00 	.word	0x40010c00
 8000724:	40010800 	.word	0x40010800

08000728 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000728:	b580      	push	{r7, lr}
 800072a:	b082      	sub	sp, #8
 800072c:	af00      	add	r7, sp, #0
 800072e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	4a04      	ldr	r2, [pc, #16]	; (8000748 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000736:	4293      	cmp	r3, r2
 8000738:	d101      	bne.n	800073e <HAL_TIM_PeriodElapsedCallback+0x16>
	HAL_IncTick();
 800073a:	f000 fcff 	bl	800113c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800073e:	bf00      	nop
 8000740:	3708      	adds	r7, #8
 8000742:	46bd      	mov	sp, r7
 8000744:	bd80      	pop	{r7, pc}
 8000746:	bf00      	nop
 8000748:	40012c00 	.word	0x40012c00

0800074c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800074c:	b480      	push	{r7}
 800074e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000750:	b672      	cpsid	i
}
 8000752:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000754:	e7fe      	b.n	8000754 <Error_Handler+0x8>
	...

08000758 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	b084      	sub	sp, #16
 800075c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800075e:	4b18      	ldr	r3, [pc, #96]	; (80007c0 <HAL_MspInit+0x68>)
 8000760:	699b      	ldr	r3, [r3, #24]
 8000762:	4a17      	ldr	r2, [pc, #92]	; (80007c0 <HAL_MspInit+0x68>)
 8000764:	f043 0301 	orr.w	r3, r3, #1
 8000768:	6193      	str	r3, [r2, #24]
 800076a:	4b15      	ldr	r3, [pc, #84]	; (80007c0 <HAL_MspInit+0x68>)
 800076c:	699b      	ldr	r3, [r3, #24]
 800076e:	f003 0301 	and.w	r3, r3, #1
 8000772:	60bb      	str	r3, [r7, #8]
 8000774:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000776:	4b12      	ldr	r3, [pc, #72]	; (80007c0 <HAL_MspInit+0x68>)
 8000778:	69db      	ldr	r3, [r3, #28]
 800077a:	4a11      	ldr	r2, [pc, #68]	; (80007c0 <HAL_MspInit+0x68>)
 800077c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000780:	61d3      	str	r3, [r2, #28]
 8000782:	4b0f      	ldr	r3, [pc, #60]	; (80007c0 <HAL_MspInit+0x68>)
 8000784:	69db      	ldr	r3, [r3, #28]
 8000786:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800078a:	607b      	str	r3, [r7, #4]
 800078c:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800078e:	2200      	movs	r2, #0
 8000790:	210f      	movs	r1, #15
 8000792:	f06f 0001 	mvn.w	r0, #1
 8000796:	f000 fda2 	bl	80012de <HAL_NVIC_SetPriority>

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800079a:	4b0a      	ldr	r3, [pc, #40]	; (80007c4 <HAL_MspInit+0x6c>)
 800079c:	685b      	ldr	r3, [r3, #4]
 800079e:	60fb      	str	r3, [r7, #12]
 80007a0:	68fb      	ldr	r3, [r7, #12]
 80007a2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80007a6:	60fb      	str	r3, [r7, #12]
 80007a8:	68fb      	ldr	r3, [r7, #12]
 80007aa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80007ae:	60fb      	str	r3, [r7, #12]
 80007b0:	4a04      	ldr	r2, [pc, #16]	; (80007c4 <HAL_MspInit+0x6c>)
 80007b2:	68fb      	ldr	r3, [r7, #12]
 80007b4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80007b6:	bf00      	nop
 80007b8:	3710      	adds	r7, #16
 80007ba:	46bd      	mov	sp, r7
 80007bc:	bd80      	pop	{r7, pc}
 80007be:	bf00      	nop
 80007c0:	40021000 	.word	0x40021000
 80007c4:	40010000 	.word	0x40010000

080007c8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80007c8:	b580      	push	{r7, lr}
 80007ca:	b088      	sub	sp, #32
 80007cc:	af00      	add	r7, sp, #0
 80007ce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80007d0:	f107 0310 	add.w	r3, r7, #16
 80007d4:	2200      	movs	r2, #0
 80007d6:	601a      	str	r2, [r3, #0]
 80007d8:	605a      	str	r2, [r3, #4]
 80007da:	609a      	str	r2, [r3, #8]
 80007dc:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C2)
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	681b      	ldr	r3, [r3, #0]
 80007e2:	4a16      	ldr	r2, [pc, #88]	; (800083c <HAL_I2C_MspInit+0x74>)
 80007e4:	4293      	cmp	r3, r2
 80007e6:	d124      	bne.n	8000832 <HAL_I2C_MspInit+0x6a>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80007e8:	4b15      	ldr	r3, [pc, #84]	; (8000840 <HAL_I2C_MspInit+0x78>)
 80007ea:	699b      	ldr	r3, [r3, #24]
 80007ec:	4a14      	ldr	r2, [pc, #80]	; (8000840 <HAL_I2C_MspInit+0x78>)
 80007ee:	f043 0308 	orr.w	r3, r3, #8
 80007f2:	6193      	str	r3, [r2, #24]
 80007f4:	4b12      	ldr	r3, [pc, #72]	; (8000840 <HAL_I2C_MspInit+0x78>)
 80007f6:	699b      	ldr	r3, [r3, #24]
 80007f8:	f003 0308 	and.w	r3, r3, #8
 80007fc:	60fb      	str	r3, [r7, #12]
 80007fe:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8000800:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8000804:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000806:	2312      	movs	r3, #18
 8000808:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800080a:	2303      	movs	r3, #3
 800080c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800080e:	f107 0310 	add.w	r3, r7, #16
 8000812:	4619      	mov	r1, r3
 8000814:	480b      	ldr	r0, [pc, #44]	; (8000844 <HAL_I2C_MspInit+0x7c>)
 8000816:	f000 fd8d 	bl	8001334 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 800081a:	4b09      	ldr	r3, [pc, #36]	; (8000840 <HAL_I2C_MspInit+0x78>)
 800081c:	69db      	ldr	r3, [r3, #28]
 800081e:	4a08      	ldr	r2, [pc, #32]	; (8000840 <HAL_I2C_MspInit+0x78>)
 8000820:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000824:	61d3      	str	r3, [r2, #28]
 8000826:	4b06      	ldr	r3, [pc, #24]	; (8000840 <HAL_I2C_MspInit+0x78>)
 8000828:	69db      	ldr	r3, [r3, #28]
 800082a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800082e:	60bb      	str	r3, [r7, #8]
 8000830:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8000832:	bf00      	nop
 8000834:	3720      	adds	r7, #32
 8000836:	46bd      	mov	sp, r7
 8000838:	bd80      	pop	{r7, pc}
 800083a:	bf00      	nop
 800083c:	40005800 	.word	0x40005800
 8000840:	40021000 	.word	0x40021000
 8000844:	40010c00 	.word	0x40010c00

08000848 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000848:	b580      	push	{r7, lr}
 800084a:	b08a      	sub	sp, #40	; 0x28
 800084c:	af00      	add	r7, sp, #0
 800084e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000850:	f107 0314 	add.w	r3, r7, #20
 8000854:	2200      	movs	r2, #0
 8000856:	601a      	str	r2, [r3, #0]
 8000858:	605a      	str	r2, [r3, #4]
 800085a:	609a      	str	r2, [r3, #8]
 800085c:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	681b      	ldr	r3, [r3, #0]
 8000862:	4a22      	ldr	r2, [pc, #136]	; (80008ec <HAL_UART_MspInit+0xa4>)
 8000864:	4293      	cmp	r3, r2
 8000866:	d13d      	bne.n	80008e4 <HAL_UART_MspInit+0x9c>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8000868:	4b21      	ldr	r3, [pc, #132]	; (80008f0 <HAL_UART_MspInit+0xa8>)
 800086a:	699b      	ldr	r3, [r3, #24]
 800086c:	4a20      	ldr	r2, [pc, #128]	; (80008f0 <HAL_UART_MspInit+0xa8>)
 800086e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000872:	6193      	str	r3, [r2, #24]
 8000874:	4b1e      	ldr	r3, [pc, #120]	; (80008f0 <HAL_UART_MspInit+0xa8>)
 8000876:	699b      	ldr	r3, [r3, #24]
 8000878:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800087c:	613b      	str	r3, [r7, #16]
 800087e:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000880:	4b1b      	ldr	r3, [pc, #108]	; (80008f0 <HAL_UART_MspInit+0xa8>)
 8000882:	699b      	ldr	r3, [r3, #24]
 8000884:	4a1a      	ldr	r2, [pc, #104]	; (80008f0 <HAL_UART_MspInit+0xa8>)
 8000886:	f043 0308 	orr.w	r3, r3, #8
 800088a:	6193      	str	r3, [r2, #24]
 800088c:	4b18      	ldr	r3, [pc, #96]	; (80008f0 <HAL_UART_MspInit+0xa8>)
 800088e:	699b      	ldr	r3, [r3, #24]
 8000890:	f003 0308 	and.w	r3, r3, #8
 8000894:	60fb      	str	r3, [r7, #12]
 8000896:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000898:	2340      	movs	r3, #64	; 0x40
 800089a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800089c:	2302      	movs	r3, #2
 800089e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80008a0:	2303      	movs	r3, #3
 80008a2:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80008a4:	f107 0314 	add.w	r3, r7, #20
 80008a8:	4619      	mov	r1, r3
 80008aa:	4812      	ldr	r0, [pc, #72]	; (80008f4 <HAL_UART_MspInit+0xac>)
 80008ac:	f000 fd42 	bl	8001334 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80008b0:	2380      	movs	r3, #128	; 0x80
 80008b2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80008b4:	2300      	movs	r3, #0
 80008b6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008b8:	2300      	movs	r3, #0
 80008ba:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80008bc:	f107 0314 	add.w	r3, r7, #20
 80008c0:	4619      	mov	r1, r3
 80008c2:	480c      	ldr	r0, [pc, #48]	; (80008f4 <HAL_UART_MspInit+0xac>)
 80008c4:	f000 fd36 	bl	8001334 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_USART1_ENABLE();
 80008c8:	4b0b      	ldr	r3, [pc, #44]	; (80008f8 <HAL_UART_MspInit+0xb0>)
 80008ca:	685b      	ldr	r3, [r3, #4]
 80008cc:	627b      	str	r3, [r7, #36]	; 0x24
 80008ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80008d0:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 80008d4:	627b      	str	r3, [r7, #36]	; 0x24
 80008d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80008d8:	f043 0304 	orr.w	r3, r3, #4
 80008dc:	627b      	str	r3, [r7, #36]	; 0x24
 80008de:	4a06      	ldr	r2, [pc, #24]	; (80008f8 <HAL_UART_MspInit+0xb0>)
 80008e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80008e2:	6053      	str	r3, [r2, #4]
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 80008e4:	bf00      	nop
 80008e6:	3728      	adds	r7, #40	; 0x28
 80008e8:	46bd      	mov	sp, r7
 80008ea:	bd80      	pop	{r7, pc}
 80008ec:	40013800 	.word	0x40013800
 80008f0:	40021000 	.word	0x40021000
 80008f4:	40010c00 	.word	0x40010c00
 80008f8:	40010000 	.word	0x40010000

080008fc <HAL_InitTick>:
 80008fc:	b580      	push	{r7, lr}
 80008fe:	b08c      	sub	sp, #48	; 0x30
 8000900:	af00      	add	r7, sp, #0
 8000902:	6078      	str	r0, [r7, #4]
 8000904:	2300      	movs	r3, #0
 8000906:	62bb      	str	r3, [r7, #40]	; 0x28
 8000908:	2300      	movs	r3, #0
 800090a:	627b      	str	r3, [r7, #36]	; 0x24
 800090c:	2300      	movs	r3, #0
 800090e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8000912:	4b2e      	ldr	r3, [pc, #184]	; (80009cc <HAL_InitTick+0xd0>)
 8000914:	699b      	ldr	r3, [r3, #24]
 8000916:	4a2d      	ldr	r2, [pc, #180]	; (80009cc <HAL_InitTick+0xd0>)
 8000918:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800091c:	6193      	str	r3, [r2, #24]
 800091e:	4b2b      	ldr	r3, [pc, #172]	; (80009cc <HAL_InitTick+0xd0>)
 8000920:	699b      	ldr	r3, [r3, #24]
 8000922:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000926:	60bb      	str	r3, [r7, #8]
 8000928:	68bb      	ldr	r3, [r7, #8]
 800092a:	f107 020c 	add.w	r2, r7, #12
 800092e:	f107 0310 	add.w	r3, r7, #16
 8000932:	4611      	mov	r1, r2
 8000934:	4618      	mov	r0, r3
 8000936:	f002 f885 	bl	8002a44 <HAL_RCC_GetClockConfig>
 800093a:	f002 f86f 	bl	8002a1c <HAL_RCC_GetPCLK2Freq>
 800093e:	62b8      	str	r0, [r7, #40]	; 0x28
 8000940:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000942:	4a23      	ldr	r2, [pc, #140]	; (80009d0 <HAL_InitTick+0xd4>)
 8000944:	fba2 2303 	umull	r2, r3, r2, r3
 8000948:	0c9b      	lsrs	r3, r3, #18
 800094a:	3b01      	subs	r3, #1
 800094c:	627b      	str	r3, [r7, #36]	; 0x24
 800094e:	4b21      	ldr	r3, [pc, #132]	; (80009d4 <HAL_InitTick+0xd8>)
 8000950:	4a21      	ldr	r2, [pc, #132]	; (80009d8 <HAL_InitTick+0xdc>)
 8000952:	601a      	str	r2, [r3, #0]
 8000954:	4b1f      	ldr	r3, [pc, #124]	; (80009d4 <HAL_InitTick+0xd8>)
 8000956:	f240 32e7 	movw	r2, #999	; 0x3e7
 800095a:	60da      	str	r2, [r3, #12]
 800095c:	4a1d      	ldr	r2, [pc, #116]	; (80009d4 <HAL_InitTick+0xd8>)
 800095e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000960:	6053      	str	r3, [r2, #4]
 8000962:	4b1c      	ldr	r3, [pc, #112]	; (80009d4 <HAL_InitTick+0xd8>)
 8000964:	2200      	movs	r2, #0
 8000966:	611a      	str	r2, [r3, #16]
 8000968:	4b1a      	ldr	r3, [pc, #104]	; (80009d4 <HAL_InitTick+0xd8>)
 800096a:	2200      	movs	r2, #0
 800096c:	609a      	str	r2, [r3, #8]
 800096e:	4b19      	ldr	r3, [pc, #100]	; (80009d4 <HAL_InitTick+0xd8>)
 8000970:	2200      	movs	r2, #0
 8000972:	619a      	str	r2, [r3, #24]
 8000974:	4817      	ldr	r0, [pc, #92]	; (80009d4 <HAL_InitTick+0xd8>)
 8000976:	f002 f8b3 	bl	8002ae0 <HAL_TIM_Base_Init>
 800097a:	4603      	mov	r3, r0
 800097c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8000980:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8000984:	2b00      	cmp	r3, #0
 8000986:	d11b      	bne.n	80009c0 <HAL_InitTick+0xc4>
 8000988:	4812      	ldr	r0, [pc, #72]	; (80009d4 <HAL_InitTick+0xd8>)
 800098a:	f002 f901 	bl	8002b90 <HAL_TIM_Base_Start_IT>
 800098e:	4603      	mov	r3, r0
 8000990:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8000994:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8000998:	2b00      	cmp	r3, #0
 800099a:	d111      	bne.n	80009c0 <HAL_InitTick+0xc4>
 800099c:	2019      	movs	r0, #25
 800099e:	f000 fcba 	bl	8001316 <HAL_NVIC_EnableIRQ>
 80009a2:	687b      	ldr	r3, [r7, #4]
 80009a4:	2b0f      	cmp	r3, #15
 80009a6:	d808      	bhi.n	80009ba <HAL_InitTick+0xbe>
 80009a8:	2200      	movs	r2, #0
 80009aa:	6879      	ldr	r1, [r7, #4]
 80009ac:	2019      	movs	r0, #25
 80009ae:	f000 fc96 	bl	80012de <HAL_NVIC_SetPriority>
 80009b2:	4a0a      	ldr	r2, [pc, #40]	; (80009dc <HAL_InitTick+0xe0>)
 80009b4:	687b      	ldr	r3, [r7, #4]
 80009b6:	6013      	str	r3, [r2, #0]
 80009b8:	e002      	b.n	80009c0 <HAL_InitTick+0xc4>
 80009ba:	2301      	movs	r3, #1
 80009bc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80009c0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80009c4:	4618      	mov	r0, r3
 80009c6:	3730      	adds	r7, #48	; 0x30
 80009c8:	46bd      	mov	sp, r7
 80009ca:	bd80      	pop	{r7, pc}
 80009cc:	40021000 	.word	0x40021000
 80009d0:	431bde83 	.word	0x431bde83
 80009d4:	2000038c 	.word	0x2000038c
 80009d8:	40012c00 	.word	0x40012c00
 80009dc:	2000000c 	.word	0x2000000c

080009e0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80009e0:	b480      	push	{r7}
 80009e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80009e4:	e7fe      	b.n	80009e4 <NMI_Handler+0x4>

080009e6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80009e6:	b480      	push	{r7}
 80009e8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80009ea:	e7fe      	b.n	80009ea <HardFault_Handler+0x4>

080009ec <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80009ec:	b480      	push	{r7}
 80009ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80009f0:	e7fe      	b.n	80009f0 <MemManage_Handler+0x4>

080009f2 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80009f2:	b480      	push	{r7}
 80009f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80009f6:	e7fe      	b.n	80009f6 <BusFault_Handler+0x4>

080009f8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80009f8:	b480      	push	{r7}
 80009fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80009fc:	e7fe      	b.n	80009fc <UsageFault_Handler+0x4>

080009fe <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80009fe:	b480      	push	{r7}
 8000a00:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000a02:	bf00      	nop
 8000a04:	46bd      	mov	sp, r7
 8000a06:	bc80      	pop	{r7}
 8000a08:	4770      	bx	lr
	...

08000a0c <TIM1_UP_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt.
  */
void TIM1_UP_IRQHandler(void)
{
 8000a0c:	b580      	push	{r7, lr}
 8000a0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_IRQn 0 */

  /* USER CODE END TIM1_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8000a10:	4802      	ldr	r0, [pc, #8]	; (8000a1c <TIM1_UP_IRQHandler+0x10>)
 8000a12:	f002 f90f 	bl	8002c34 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_IRQn 1 */

  /* USER CODE END TIM1_UP_IRQn 1 */
}
 8000a16:	bf00      	nop
 8000a18:	bd80      	pop	{r7, pc}
 8000a1a:	bf00      	nop
 8000a1c:	2000038c 	.word	0x2000038c

08000a20 <_read>:
 8000a20:	b580      	push	{r7, lr}
 8000a22:	b086      	sub	sp, #24
 8000a24:	af00      	add	r7, sp, #0
 8000a26:	60f8      	str	r0, [r7, #12]
 8000a28:	60b9      	str	r1, [r7, #8]
 8000a2a:	607a      	str	r2, [r7, #4]
 8000a2c:	2300      	movs	r3, #0
 8000a2e:	617b      	str	r3, [r7, #20]
 8000a30:	e00a      	b.n	8000a48 <_read+0x28>
 8000a32:	f3af 8000 	nop.w
 8000a36:	4601      	mov	r1, r0
 8000a38:	68bb      	ldr	r3, [r7, #8]
 8000a3a:	1c5a      	adds	r2, r3, #1
 8000a3c:	60ba      	str	r2, [r7, #8]
 8000a3e:	b2ca      	uxtb	r2, r1
 8000a40:	701a      	strb	r2, [r3, #0]
 8000a42:	697b      	ldr	r3, [r7, #20]
 8000a44:	3301      	adds	r3, #1
 8000a46:	617b      	str	r3, [r7, #20]
 8000a48:	697a      	ldr	r2, [r7, #20]
 8000a4a:	687b      	ldr	r3, [r7, #4]
 8000a4c:	429a      	cmp	r2, r3
 8000a4e:	dbf0      	blt.n	8000a32 <_read+0x12>
 8000a50:	687b      	ldr	r3, [r7, #4]
 8000a52:	4618      	mov	r0, r3
 8000a54:	3718      	adds	r7, #24
 8000a56:	46bd      	mov	sp, r7
 8000a58:	bd80      	pop	{r7, pc}

08000a5a <_close>:
 8000a5a:	b480      	push	{r7}
 8000a5c:	b083      	sub	sp, #12
 8000a5e:	af00      	add	r7, sp, #0
 8000a60:	6078      	str	r0, [r7, #4]
 8000a62:	f04f 33ff 	mov.w	r3, #4294967295
 8000a66:	4618      	mov	r0, r3
 8000a68:	370c      	adds	r7, #12
 8000a6a:	46bd      	mov	sp, r7
 8000a6c:	bc80      	pop	{r7}
 8000a6e:	4770      	bx	lr

08000a70 <_fstat>:
 8000a70:	b480      	push	{r7}
 8000a72:	b083      	sub	sp, #12
 8000a74:	af00      	add	r7, sp, #0
 8000a76:	6078      	str	r0, [r7, #4]
 8000a78:	6039      	str	r1, [r7, #0]
 8000a7a:	683b      	ldr	r3, [r7, #0]
 8000a7c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000a80:	605a      	str	r2, [r3, #4]
 8000a82:	2300      	movs	r3, #0
 8000a84:	4618      	mov	r0, r3
 8000a86:	370c      	adds	r7, #12
 8000a88:	46bd      	mov	sp, r7
 8000a8a:	bc80      	pop	{r7}
 8000a8c:	4770      	bx	lr

08000a8e <_isatty>:
 8000a8e:	b480      	push	{r7}
 8000a90:	b083      	sub	sp, #12
 8000a92:	af00      	add	r7, sp, #0
 8000a94:	6078      	str	r0, [r7, #4]
 8000a96:	2301      	movs	r3, #1
 8000a98:	4618      	mov	r0, r3
 8000a9a:	370c      	adds	r7, #12
 8000a9c:	46bd      	mov	sp, r7
 8000a9e:	bc80      	pop	{r7}
 8000aa0:	4770      	bx	lr

08000aa2 <_lseek>:
 8000aa2:	b480      	push	{r7}
 8000aa4:	b085      	sub	sp, #20
 8000aa6:	af00      	add	r7, sp, #0
 8000aa8:	60f8      	str	r0, [r7, #12]
 8000aaa:	60b9      	str	r1, [r7, #8]
 8000aac:	607a      	str	r2, [r7, #4]
 8000aae:	2300      	movs	r3, #0
 8000ab0:	4618      	mov	r0, r3
 8000ab2:	3714      	adds	r7, #20
 8000ab4:	46bd      	mov	sp, r7
 8000ab6:	bc80      	pop	{r7}
 8000ab8:	4770      	bx	lr
	...

08000abc <_sbrk>:
 8000abc:	b580      	push	{r7, lr}
 8000abe:	b086      	sub	sp, #24
 8000ac0:	af00      	add	r7, sp, #0
 8000ac2:	6078      	str	r0, [r7, #4]
 8000ac4:	4a14      	ldr	r2, [pc, #80]	; (8000b18 <_sbrk+0x5c>)
 8000ac6:	4b15      	ldr	r3, [pc, #84]	; (8000b1c <_sbrk+0x60>)
 8000ac8:	1ad3      	subs	r3, r2, r3
 8000aca:	617b      	str	r3, [r7, #20]
 8000acc:	697b      	ldr	r3, [r7, #20]
 8000ace:	613b      	str	r3, [r7, #16]
 8000ad0:	4b13      	ldr	r3, [pc, #76]	; (8000b20 <_sbrk+0x64>)
 8000ad2:	681b      	ldr	r3, [r3, #0]
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d102      	bne.n	8000ade <_sbrk+0x22>
 8000ad8:	4b11      	ldr	r3, [pc, #68]	; (8000b20 <_sbrk+0x64>)
 8000ada:	4a12      	ldr	r2, [pc, #72]	; (8000b24 <_sbrk+0x68>)
 8000adc:	601a      	str	r2, [r3, #0]
 8000ade:	4b10      	ldr	r3, [pc, #64]	; (8000b20 <_sbrk+0x64>)
 8000ae0:	681a      	ldr	r2, [r3, #0]
 8000ae2:	687b      	ldr	r3, [r7, #4]
 8000ae4:	4413      	add	r3, r2
 8000ae6:	693a      	ldr	r2, [r7, #16]
 8000ae8:	429a      	cmp	r2, r3
 8000aea:	d207      	bcs.n	8000afc <_sbrk+0x40>
 8000aec:	f004 fdec 	bl	80056c8 <__errno>
 8000af0:	4603      	mov	r3, r0
 8000af2:	220c      	movs	r2, #12
 8000af4:	601a      	str	r2, [r3, #0]
 8000af6:	f04f 33ff 	mov.w	r3, #4294967295
 8000afa:	e009      	b.n	8000b10 <_sbrk+0x54>
 8000afc:	4b08      	ldr	r3, [pc, #32]	; (8000b20 <_sbrk+0x64>)
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	60fb      	str	r3, [r7, #12]
 8000b02:	4b07      	ldr	r3, [pc, #28]	; (8000b20 <_sbrk+0x64>)
 8000b04:	681a      	ldr	r2, [r3, #0]
 8000b06:	687b      	ldr	r3, [r7, #4]
 8000b08:	4413      	add	r3, r2
 8000b0a:	4a05      	ldr	r2, [pc, #20]	; (8000b20 <_sbrk+0x64>)
 8000b0c:	6013      	str	r3, [r2, #0]
 8000b0e:	68fb      	ldr	r3, [r7, #12]
 8000b10:	4618      	mov	r0, r3
 8000b12:	3718      	adds	r7, #24
 8000b14:	46bd      	mov	sp, r7
 8000b16:	bd80      	pop	{r7, pc}
 8000b18:	20005000 	.word	0x20005000
 8000b1c:	00000400 	.word	0x00000400
 8000b20:	200003d4 	.word	0x200003d4
 8000b24:	20001680 	.word	0x20001680

08000b28 <SystemInit>:
 8000b28:	b480      	push	{r7}
 8000b2a:	af00      	add	r7, sp, #0
 8000b2c:	bf00      	nop
 8000b2e:	46bd      	mov	sp, r7
 8000b30:	bc80      	pop	{r7}
 8000b32:	4770      	bx	lr

08000b34 <Reset_Handler>:
 8000b34:	f7ff fff8 	bl	8000b28 <SystemInit>
 8000b38:	480b      	ldr	r0, [pc, #44]	; (8000b68 <LoopFillZerobss+0xe>)
 8000b3a:	490c      	ldr	r1, [pc, #48]	; (8000b6c <LoopFillZerobss+0x12>)
 8000b3c:	4a0c      	ldr	r2, [pc, #48]	; (8000b70 <LoopFillZerobss+0x16>)
 8000b3e:	2300      	movs	r3, #0
 8000b40:	e002      	b.n	8000b48 <LoopCopyDataInit>

08000b42 <CopyDataInit>:
 8000b42:	58d4      	ldr	r4, [r2, r3]
 8000b44:	50c4      	str	r4, [r0, r3]
 8000b46:	3304      	adds	r3, #4

08000b48 <LoopCopyDataInit>:
 8000b48:	18c4      	adds	r4, r0, r3
 8000b4a:	428c      	cmp	r4, r1
 8000b4c:	d3f9      	bcc.n	8000b42 <CopyDataInit>
 8000b4e:	4a09      	ldr	r2, [pc, #36]	; (8000b74 <LoopFillZerobss+0x1a>)
 8000b50:	4c09      	ldr	r4, [pc, #36]	; (8000b78 <LoopFillZerobss+0x1e>)
 8000b52:	2300      	movs	r3, #0
 8000b54:	e001      	b.n	8000b5a <LoopFillZerobss>

08000b56 <FillZerobss>:
 8000b56:	6013      	str	r3, [r2, #0]
 8000b58:	3204      	adds	r2, #4

08000b5a <LoopFillZerobss>:
 8000b5a:	42a2      	cmp	r2, r4
 8000b5c:	d3fb      	bcc.n	8000b56 <FillZerobss>
 8000b5e:	f004 fdb9 	bl	80056d4 <__libc_init_array>
 8000b62:	f7ff fb47 	bl	80001f4 <main>
 8000b66:	4770      	bx	lr
 8000b68:	20000000 	.word	0x20000000
 8000b6c:	20000074 	.word	0x20000074
 8000b70:	08007048 	.word	0x08007048
 8000b74:	20000074 	.word	0x20000074
 8000b78:	2000167c 	.word	0x2000167c

08000b7c <ADC1_2_IRQHandler>:
 8000b7c:	e7fe      	b.n	8000b7c <ADC1_2_IRQHandler>
	...

08000b80 <SSD1306_Init>:
 8000b80:	b580      	push	{r7, lr}
 8000b82:	b084      	sub	sp, #16
 8000b84:	af00      	add	r7, sp, #0
 8000b86:	6078      	str	r0, [r7, #4]
 8000b88:	f000 fa2a 	bl	8000fe0 <ssd1306_I2C_Init>
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	b299      	uxth	r1, r3
 8000b90:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 8000b94:	2201      	movs	r2, #1
 8000b96:	485c      	ldr	r0, [pc, #368]	; (8000d08 <SSD1306_Init+0x188>)
 8000b98:	f000 ffda 	bl	8001b50 <HAL_I2C_IsDeviceReady>
 8000b9c:	4603      	mov	r3, r0
 8000b9e:	72fb      	strb	r3, [r7, #11]
 8000ba0:	7afb      	ldrb	r3, [r7, #11]
 8000ba2:	2b00      	cmp	r3, #0
 8000ba4:	d001      	beq.n	8000baa <SSD1306_Init+0x2a>
 8000ba6:	7afb      	ldrb	r3, [r7, #11]
 8000ba8:	e0a9      	b.n	8000cfe <SSD1306_Init+0x17e>
 8000baa:	f640 13c4 	movw	r3, #2500	; 0x9c4
 8000bae:	60fb      	str	r3, [r7, #12]
 8000bb0:	e002      	b.n	8000bb8 <SSD1306_Init+0x38>
 8000bb2:	68fb      	ldr	r3, [r7, #12]
 8000bb4:	3b01      	subs	r3, #1
 8000bb6:	60fb      	str	r3, [r7, #12]
 8000bb8:	68fb      	ldr	r3, [r7, #12]
 8000bba:	2b00      	cmp	r3, #0
 8000bbc:	d1f9      	bne.n	8000bb2 <SSD1306_Init+0x32>
 8000bbe:	22ae      	movs	r2, #174	; 0xae
 8000bc0:	2100      	movs	r1, #0
 8000bc2:	2078      	movs	r0, #120	; 0x78
 8000bc4:	f000 fa86 	bl	80010d4 <ssd1306_I2C_Write>
 8000bc8:	2220      	movs	r2, #32
 8000bca:	2100      	movs	r1, #0
 8000bcc:	2078      	movs	r0, #120	; 0x78
 8000bce:	f000 fa81 	bl	80010d4 <ssd1306_I2C_Write>
 8000bd2:	2210      	movs	r2, #16
 8000bd4:	2100      	movs	r1, #0
 8000bd6:	2078      	movs	r0, #120	; 0x78
 8000bd8:	f000 fa7c 	bl	80010d4 <ssd1306_I2C_Write>
 8000bdc:	22b0      	movs	r2, #176	; 0xb0
 8000bde:	2100      	movs	r1, #0
 8000be0:	2078      	movs	r0, #120	; 0x78
 8000be2:	f000 fa77 	bl	80010d4 <ssd1306_I2C_Write>
 8000be6:	22c8      	movs	r2, #200	; 0xc8
 8000be8:	2100      	movs	r1, #0
 8000bea:	2078      	movs	r0, #120	; 0x78
 8000bec:	f000 fa72 	bl	80010d4 <ssd1306_I2C_Write>
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	2100      	movs	r1, #0
 8000bf4:	2078      	movs	r0, #120	; 0x78
 8000bf6:	f000 fa6d 	bl	80010d4 <ssd1306_I2C_Write>
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	2100      	movs	r1, #0
 8000bfe:	2078      	movs	r0, #120	; 0x78
 8000c00:	f000 fa68 	bl	80010d4 <ssd1306_I2C_Write>
 8000c04:	2240      	movs	r2, #64	; 0x40
 8000c06:	2100      	movs	r1, #0
 8000c08:	2078      	movs	r0, #120	; 0x78
 8000c0a:	f000 fa63 	bl	80010d4 <ssd1306_I2C_Write>
 8000c0e:	2281      	movs	r2, #129	; 0x81
 8000c10:	2100      	movs	r1, #0
 8000c12:	2078      	movs	r0, #120	; 0x78
 8000c14:	f000 fa5e 	bl	80010d4 <ssd1306_I2C_Write>
 8000c18:	22ff      	movs	r2, #255	; 0xff
 8000c1a:	2100      	movs	r1, #0
 8000c1c:	2078      	movs	r0, #120	; 0x78
 8000c1e:	f000 fa59 	bl	80010d4 <ssd1306_I2C_Write>
 8000c22:	22a1      	movs	r2, #161	; 0xa1
 8000c24:	2100      	movs	r1, #0
 8000c26:	2078      	movs	r0, #120	; 0x78
 8000c28:	f000 fa54 	bl	80010d4 <ssd1306_I2C_Write>
 8000c2c:	22a6      	movs	r2, #166	; 0xa6
 8000c2e:	2100      	movs	r1, #0
 8000c30:	2078      	movs	r0, #120	; 0x78
 8000c32:	f000 fa4f 	bl	80010d4 <ssd1306_I2C_Write>
 8000c36:	22a8      	movs	r2, #168	; 0xa8
 8000c38:	2100      	movs	r1, #0
 8000c3a:	2078      	movs	r0, #120	; 0x78
 8000c3c:	f000 fa4a 	bl	80010d4 <ssd1306_I2C_Write>
 8000c40:	223f      	movs	r2, #63	; 0x3f
 8000c42:	2100      	movs	r1, #0
 8000c44:	2078      	movs	r0, #120	; 0x78
 8000c46:	f000 fa45 	bl	80010d4 <ssd1306_I2C_Write>
 8000c4a:	22a4      	movs	r2, #164	; 0xa4
 8000c4c:	2100      	movs	r1, #0
 8000c4e:	2078      	movs	r0, #120	; 0x78
 8000c50:	f000 fa40 	bl	80010d4 <ssd1306_I2C_Write>
 8000c54:	22d3      	movs	r2, #211	; 0xd3
 8000c56:	2100      	movs	r1, #0
 8000c58:	2078      	movs	r0, #120	; 0x78
 8000c5a:	f000 fa3b 	bl	80010d4 <ssd1306_I2C_Write>
 8000c5e:	2200      	movs	r2, #0
 8000c60:	2100      	movs	r1, #0
 8000c62:	2078      	movs	r0, #120	; 0x78
 8000c64:	f000 fa36 	bl	80010d4 <ssd1306_I2C_Write>
 8000c68:	22d5      	movs	r2, #213	; 0xd5
 8000c6a:	2100      	movs	r1, #0
 8000c6c:	2078      	movs	r0, #120	; 0x78
 8000c6e:	f000 fa31 	bl	80010d4 <ssd1306_I2C_Write>
 8000c72:	22f0      	movs	r2, #240	; 0xf0
 8000c74:	2100      	movs	r1, #0
 8000c76:	2078      	movs	r0, #120	; 0x78
 8000c78:	f000 fa2c 	bl	80010d4 <ssd1306_I2C_Write>
 8000c7c:	22d9      	movs	r2, #217	; 0xd9
 8000c7e:	2100      	movs	r1, #0
 8000c80:	2078      	movs	r0, #120	; 0x78
 8000c82:	f000 fa27 	bl	80010d4 <ssd1306_I2C_Write>
 8000c86:	2222      	movs	r2, #34	; 0x22
 8000c88:	2100      	movs	r1, #0
 8000c8a:	2078      	movs	r0, #120	; 0x78
 8000c8c:	f000 fa22 	bl	80010d4 <ssd1306_I2C_Write>
 8000c90:	22da      	movs	r2, #218	; 0xda
 8000c92:	2100      	movs	r1, #0
 8000c94:	2078      	movs	r0, #120	; 0x78
 8000c96:	f000 fa1d 	bl	80010d4 <ssd1306_I2C_Write>
 8000c9a:	2212      	movs	r2, #18
 8000c9c:	2100      	movs	r1, #0
 8000c9e:	2078      	movs	r0, #120	; 0x78
 8000ca0:	f000 fa18 	bl	80010d4 <ssd1306_I2C_Write>
 8000ca4:	22db      	movs	r2, #219	; 0xdb
 8000ca6:	2100      	movs	r1, #0
 8000ca8:	2078      	movs	r0, #120	; 0x78
 8000caa:	f000 fa13 	bl	80010d4 <ssd1306_I2C_Write>
 8000cae:	2220      	movs	r2, #32
 8000cb0:	2100      	movs	r1, #0
 8000cb2:	2078      	movs	r0, #120	; 0x78
 8000cb4:	f000 fa0e 	bl	80010d4 <ssd1306_I2C_Write>
 8000cb8:	228d      	movs	r2, #141	; 0x8d
 8000cba:	2100      	movs	r1, #0
 8000cbc:	2078      	movs	r0, #120	; 0x78
 8000cbe:	f000 fa09 	bl	80010d4 <ssd1306_I2C_Write>
 8000cc2:	2214      	movs	r2, #20
 8000cc4:	2100      	movs	r1, #0
 8000cc6:	2078      	movs	r0, #120	; 0x78
 8000cc8:	f000 fa04 	bl	80010d4 <ssd1306_I2C_Write>
 8000ccc:	22af      	movs	r2, #175	; 0xaf
 8000cce:	2100      	movs	r1, #0
 8000cd0:	2078      	movs	r0, #120	; 0x78
 8000cd2:	f000 f9ff 	bl	80010d4 <ssd1306_I2C_Write>
 8000cd6:	222e      	movs	r2, #46	; 0x2e
 8000cd8:	2100      	movs	r1, #0
 8000cda:	2078      	movs	r0, #120	; 0x78
 8000cdc:	f000 f9fa 	bl	80010d4 <ssd1306_I2C_Write>
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	f000 f843 	bl	8000d6c <SSD1306_Fill>
 8000ce6:	f000 f813 	bl	8000d10 <SSD1306_UpdateScreen>
 8000cea:	4b08      	ldr	r3, [pc, #32]	; (8000d0c <SSD1306_Init+0x18c>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	801a      	strh	r2, [r3, #0]
 8000cf0:	4b06      	ldr	r3, [pc, #24]	; (8000d0c <SSD1306_Init+0x18c>)
 8000cf2:	2200      	movs	r2, #0
 8000cf4:	805a      	strh	r2, [r3, #2]
 8000cf6:	4b05      	ldr	r3, [pc, #20]	; (8000d0c <SSD1306_Init+0x18c>)
 8000cf8:	2201      	movs	r2, #1
 8000cfa:	715a      	strb	r2, [r3, #5]
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4618      	mov	r0, r3
 8000d00:	3710      	adds	r7, #16
 8000d02:	46bd      	mov	sp, r7
 8000d04:	bd80      	pop	{r7, pc}
 8000d06:	bf00      	nop
 8000d08:	200002e8 	.word	0x200002e8
 8000d0c:	200007d8 	.word	0x200007d8

08000d10 <SSD1306_UpdateScreen>:
 8000d10:	b580      	push	{r7, lr}
 8000d12:	b082      	sub	sp, #8
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	2300      	movs	r3, #0
 8000d18:	71fb      	strb	r3, [r7, #7]
 8000d1a:	e01d      	b.n	8000d58 <SSD1306_UpdateScreen+0x48>
 8000d1c:	79fb      	ldrb	r3, [r7, #7]
 8000d1e:	3b50      	subs	r3, #80	; 0x50
 8000d20:	b2db      	uxtb	r3, r3
 8000d22:	461a      	mov	r2, r3
 8000d24:	2100      	movs	r1, #0
 8000d26:	2078      	movs	r0, #120	; 0x78
 8000d28:	f000 f9d4 	bl	80010d4 <ssd1306_I2C_Write>
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	2100      	movs	r1, #0
 8000d30:	2078      	movs	r0, #120	; 0x78
 8000d32:	f000 f9cf 	bl	80010d4 <ssd1306_I2C_Write>
 8000d36:	2210      	movs	r2, #16
 8000d38:	2100      	movs	r1, #0
 8000d3a:	2078      	movs	r0, #120	; 0x78
 8000d3c:	f000 f9ca 	bl	80010d4 <ssd1306_I2C_Write>
 8000d40:	79fb      	ldrb	r3, [r7, #7]
 8000d42:	01db      	lsls	r3, r3, #7
 8000d44:	4a08      	ldr	r2, [pc, #32]	; (8000d68 <SSD1306_UpdateScreen+0x58>)
 8000d46:	441a      	add	r2, r3
 8000d48:	2380      	movs	r3, #128	; 0x80
 8000d4a:	2140      	movs	r1, #64	; 0x40
 8000d4c:	2078      	movs	r0, #120	; 0x78
 8000d4e:	f000 f95b 	bl	8001008 <ssd1306_I2C_WriteMulti>
 8000d52:	79fb      	ldrb	r3, [r7, #7]
 8000d54:	3301      	adds	r3, #1
 8000d56:	71fb      	strb	r3, [r7, #7]
 8000d58:	79fb      	ldrb	r3, [r7, #7]
 8000d5a:	2b07      	cmp	r3, #7
 8000d5c:	d9de      	bls.n	8000d1c <SSD1306_UpdateScreen+0xc>
 8000d5e:	bf00      	nop
 8000d60:	bf00      	nop
 8000d62:	3708      	adds	r7, #8
 8000d64:	46bd      	mov	sp, r7
 8000d66:	bd80      	pop	{r7, pc}
 8000d68:	200003d8 	.word	0x200003d8

08000d6c <SSD1306_Fill>:
 8000d6c:	b580      	push	{r7, lr}
 8000d6e:	b082      	sub	sp, #8
 8000d70:	af00      	add	r7, sp, #0
 8000d72:	4603      	mov	r3, r0
 8000d74:	71fb      	strb	r3, [r7, #7]
 8000d76:	79fb      	ldrb	r3, [r7, #7]
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	d101      	bne.n	8000d80 <SSD1306_Fill+0x14>
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	e000      	b.n	8000d82 <SSD1306_Fill+0x16>
 8000d80:	23ff      	movs	r3, #255	; 0xff
 8000d82:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000d86:	4619      	mov	r1, r3
 8000d88:	4803      	ldr	r0, [pc, #12]	; (8000d98 <SSD1306_Fill+0x2c>)
 8000d8a:	f004 fc4f 	bl	800562c <memset>
 8000d8e:	bf00      	nop
 8000d90:	3708      	adds	r7, #8
 8000d92:	46bd      	mov	sp, r7
 8000d94:	bd80      	pop	{r7, pc}
 8000d96:	bf00      	nop
 8000d98:	200003d8 	.word	0x200003d8

08000d9c <SSD1306_DrawPixel>:
 8000d9c:	b480      	push	{r7}
 8000d9e:	b083      	sub	sp, #12
 8000da0:	af00      	add	r7, sp, #0
 8000da2:	4603      	mov	r3, r0
 8000da4:	80fb      	strh	r3, [r7, #6]
 8000da6:	460b      	mov	r3, r1
 8000da8:	80bb      	strh	r3, [r7, #4]
 8000daa:	4613      	mov	r3, r2
 8000dac:	70fb      	strb	r3, [r7, #3]
 8000dae:	88fb      	ldrh	r3, [r7, #6]
 8000db0:	2b7f      	cmp	r3, #127	; 0x7f
 8000db2:	d848      	bhi.n	8000e46 <SSD1306_DrawPixel+0xaa>
 8000db4:	88bb      	ldrh	r3, [r7, #4]
 8000db6:	2b3f      	cmp	r3, #63	; 0x3f
 8000db8:	d845      	bhi.n	8000e46 <SSD1306_DrawPixel+0xaa>
 8000dba:	4b25      	ldr	r3, [pc, #148]	; (8000e50 <SSD1306_DrawPixel+0xb4>)
 8000dbc:	791b      	ldrb	r3, [r3, #4]
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d006      	beq.n	8000dd0 <SSD1306_DrawPixel+0x34>
 8000dc2:	78fb      	ldrb	r3, [r7, #3]
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	bf0c      	ite	eq
 8000dc8:	2301      	moveq	r3, #1
 8000dca:	2300      	movne	r3, #0
 8000dcc:	b2db      	uxtb	r3, r3
 8000dce:	70fb      	strb	r3, [r7, #3]
 8000dd0:	78fb      	ldrb	r3, [r7, #3]
 8000dd2:	2b01      	cmp	r3, #1
 8000dd4:	d11a      	bne.n	8000e0c <SSD1306_DrawPixel+0x70>
 8000dd6:	88fa      	ldrh	r2, [r7, #6]
 8000dd8:	88bb      	ldrh	r3, [r7, #4]
 8000dda:	08db      	lsrs	r3, r3, #3
 8000ddc:	b298      	uxth	r0, r3
 8000dde:	4603      	mov	r3, r0
 8000de0:	01db      	lsls	r3, r3, #7
 8000de2:	4413      	add	r3, r2
 8000de4:	4a1b      	ldr	r2, [pc, #108]	; (8000e54 <SSD1306_DrawPixel+0xb8>)
 8000de6:	5cd3      	ldrb	r3, [r2, r3]
 8000de8:	b25a      	sxtb	r2, r3
 8000dea:	88bb      	ldrh	r3, [r7, #4]
 8000dec:	f003 0307 	and.w	r3, r3, #7
 8000df0:	2101      	movs	r1, #1
 8000df2:	fa01 f303 	lsl.w	r3, r1, r3
 8000df6:	b25b      	sxtb	r3, r3
 8000df8:	4313      	orrs	r3, r2
 8000dfa:	b259      	sxtb	r1, r3
 8000dfc:	88fa      	ldrh	r2, [r7, #6]
 8000dfe:	4603      	mov	r3, r0
 8000e00:	01db      	lsls	r3, r3, #7
 8000e02:	4413      	add	r3, r2
 8000e04:	b2c9      	uxtb	r1, r1
 8000e06:	4a13      	ldr	r2, [pc, #76]	; (8000e54 <SSD1306_DrawPixel+0xb8>)
 8000e08:	54d1      	strb	r1, [r2, r3]
 8000e0a:	e01d      	b.n	8000e48 <SSD1306_DrawPixel+0xac>
 8000e0c:	88fa      	ldrh	r2, [r7, #6]
 8000e0e:	88bb      	ldrh	r3, [r7, #4]
 8000e10:	08db      	lsrs	r3, r3, #3
 8000e12:	b298      	uxth	r0, r3
 8000e14:	4603      	mov	r3, r0
 8000e16:	01db      	lsls	r3, r3, #7
 8000e18:	4413      	add	r3, r2
 8000e1a:	4a0e      	ldr	r2, [pc, #56]	; (8000e54 <SSD1306_DrawPixel+0xb8>)
 8000e1c:	5cd3      	ldrb	r3, [r2, r3]
 8000e1e:	b25a      	sxtb	r2, r3
 8000e20:	88bb      	ldrh	r3, [r7, #4]
 8000e22:	f003 0307 	and.w	r3, r3, #7
 8000e26:	2101      	movs	r1, #1
 8000e28:	fa01 f303 	lsl.w	r3, r1, r3
 8000e2c:	b25b      	sxtb	r3, r3
 8000e2e:	43db      	mvns	r3, r3
 8000e30:	b25b      	sxtb	r3, r3
 8000e32:	4013      	ands	r3, r2
 8000e34:	b259      	sxtb	r1, r3
 8000e36:	88fa      	ldrh	r2, [r7, #6]
 8000e38:	4603      	mov	r3, r0
 8000e3a:	01db      	lsls	r3, r3, #7
 8000e3c:	4413      	add	r3, r2
 8000e3e:	b2c9      	uxtb	r1, r1
 8000e40:	4a04      	ldr	r2, [pc, #16]	; (8000e54 <SSD1306_DrawPixel+0xb8>)
 8000e42:	54d1      	strb	r1, [r2, r3]
 8000e44:	e000      	b.n	8000e48 <SSD1306_DrawPixel+0xac>
 8000e46:	bf00      	nop
 8000e48:	370c      	adds	r7, #12
 8000e4a:	46bd      	mov	sp, r7
 8000e4c:	bc80      	pop	{r7}
 8000e4e:	4770      	bx	lr
 8000e50:	200007d8 	.word	0x200007d8
 8000e54:	200003d8 	.word	0x200003d8

08000e58 <SSD1306_GotoXY>:
 8000e58:	b480      	push	{r7}
 8000e5a:	b083      	sub	sp, #12
 8000e5c:	af00      	add	r7, sp, #0
 8000e5e:	4603      	mov	r3, r0
 8000e60:	460a      	mov	r2, r1
 8000e62:	80fb      	strh	r3, [r7, #6]
 8000e64:	4613      	mov	r3, r2
 8000e66:	80bb      	strh	r3, [r7, #4]
 8000e68:	4a05      	ldr	r2, [pc, #20]	; (8000e80 <SSD1306_GotoXY+0x28>)
 8000e6a:	88fb      	ldrh	r3, [r7, #6]
 8000e6c:	8013      	strh	r3, [r2, #0]
 8000e6e:	4a04      	ldr	r2, [pc, #16]	; (8000e80 <SSD1306_GotoXY+0x28>)
 8000e70:	88bb      	ldrh	r3, [r7, #4]
 8000e72:	8053      	strh	r3, [r2, #2]
 8000e74:	bf00      	nop
 8000e76:	370c      	adds	r7, #12
 8000e78:	46bd      	mov	sp, r7
 8000e7a:	bc80      	pop	{r7}
 8000e7c:	4770      	bx	lr
 8000e7e:	bf00      	nop
 8000e80:	200007d8 	.word	0x200007d8

08000e84 <SSD1306_Putc>:
 8000e84:	b580      	push	{r7, lr}
 8000e86:	b086      	sub	sp, #24
 8000e88:	af00      	add	r7, sp, #0
 8000e8a:	4603      	mov	r3, r0
 8000e8c:	6039      	str	r1, [r7, #0]
 8000e8e:	71fb      	strb	r3, [r7, #7]
 8000e90:	4613      	mov	r3, r2
 8000e92:	71bb      	strb	r3, [r7, #6]
 8000e94:	4b3a      	ldr	r3, [pc, #232]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000e96:	881b      	ldrh	r3, [r3, #0]
 8000e98:	461a      	mov	r2, r3
 8000e9a:	683b      	ldr	r3, [r7, #0]
 8000e9c:	781b      	ldrb	r3, [r3, #0]
 8000e9e:	4413      	add	r3, r2
 8000ea0:	2b7f      	cmp	r3, #127	; 0x7f
 8000ea2:	dc07      	bgt.n	8000eb4 <SSD1306_Putc+0x30>
 8000ea4:	4b36      	ldr	r3, [pc, #216]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000ea6:	885b      	ldrh	r3, [r3, #2]
 8000ea8:	461a      	mov	r2, r3
 8000eaa:	683b      	ldr	r3, [r7, #0]
 8000eac:	785b      	ldrb	r3, [r3, #1]
 8000eae:	4413      	add	r3, r2
 8000eb0:	2b3f      	cmp	r3, #63	; 0x3f
 8000eb2:	dd01      	ble.n	8000eb8 <SSD1306_Putc+0x34>
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	e05e      	b.n	8000f76 <SSD1306_Putc+0xf2>
 8000eb8:	2300      	movs	r3, #0
 8000eba:	617b      	str	r3, [r7, #20]
 8000ebc:	e04b      	b.n	8000f56 <SSD1306_Putc+0xd2>
 8000ebe:	683b      	ldr	r3, [r7, #0]
 8000ec0:	685a      	ldr	r2, [r3, #4]
 8000ec2:	79fb      	ldrb	r3, [r7, #7]
 8000ec4:	3b20      	subs	r3, #32
 8000ec6:	6839      	ldr	r1, [r7, #0]
 8000ec8:	7849      	ldrb	r1, [r1, #1]
 8000eca:	fb01 f303 	mul.w	r3, r1, r3
 8000ece:	4619      	mov	r1, r3
 8000ed0:	697b      	ldr	r3, [r7, #20]
 8000ed2:	440b      	add	r3, r1
 8000ed4:	005b      	lsls	r3, r3, #1
 8000ed6:	4413      	add	r3, r2
 8000ed8:	881b      	ldrh	r3, [r3, #0]
 8000eda:	60fb      	str	r3, [r7, #12]
 8000edc:	2300      	movs	r3, #0
 8000ede:	613b      	str	r3, [r7, #16]
 8000ee0:	e030      	b.n	8000f44 <SSD1306_Putc+0xc0>
 8000ee2:	68fa      	ldr	r2, [r7, #12]
 8000ee4:	693b      	ldr	r3, [r7, #16]
 8000ee6:	fa02 f303 	lsl.w	r3, r2, r3
 8000eea:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	d010      	beq.n	8000f14 <SSD1306_Putc+0x90>
 8000ef2:	4b23      	ldr	r3, [pc, #140]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000ef4:	881a      	ldrh	r2, [r3, #0]
 8000ef6:	693b      	ldr	r3, [r7, #16]
 8000ef8:	b29b      	uxth	r3, r3
 8000efa:	4413      	add	r3, r2
 8000efc:	b298      	uxth	r0, r3
 8000efe:	4b20      	ldr	r3, [pc, #128]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000f00:	885a      	ldrh	r2, [r3, #2]
 8000f02:	697b      	ldr	r3, [r7, #20]
 8000f04:	b29b      	uxth	r3, r3
 8000f06:	4413      	add	r3, r2
 8000f08:	b29b      	uxth	r3, r3
 8000f0a:	79ba      	ldrb	r2, [r7, #6]
 8000f0c:	4619      	mov	r1, r3
 8000f0e:	f7ff ff45 	bl	8000d9c <SSD1306_DrawPixel>
 8000f12:	e014      	b.n	8000f3e <SSD1306_Putc+0xba>
 8000f14:	4b1a      	ldr	r3, [pc, #104]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000f16:	881a      	ldrh	r2, [r3, #0]
 8000f18:	693b      	ldr	r3, [r7, #16]
 8000f1a:	b29b      	uxth	r3, r3
 8000f1c:	4413      	add	r3, r2
 8000f1e:	b298      	uxth	r0, r3
 8000f20:	4b17      	ldr	r3, [pc, #92]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000f22:	885a      	ldrh	r2, [r3, #2]
 8000f24:	697b      	ldr	r3, [r7, #20]
 8000f26:	b29b      	uxth	r3, r3
 8000f28:	4413      	add	r3, r2
 8000f2a:	b299      	uxth	r1, r3
 8000f2c:	79bb      	ldrb	r3, [r7, #6]
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	bf0c      	ite	eq
 8000f32:	2301      	moveq	r3, #1
 8000f34:	2300      	movne	r3, #0
 8000f36:	b2db      	uxtb	r3, r3
 8000f38:	461a      	mov	r2, r3
 8000f3a:	f7ff ff2f 	bl	8000d9c <SSD1306_DrawPixel>
 8000f3e:	693b      	ldr	r3, [r7, #16]
 8000f40:	3301      	adds	r3, #1
 8000f42:	613b      	str	r3, [r7, #16]
 8000f44:	683b      	ldr	r3, [r7, #0]
 8000f46:	781b      	ldrb	r3, [r3, #0]
 8000f48:	461a      	mov	r2, r3
 8000f4a:	693b      	ldr	r3, [r7, #16]
 8000f4c:	4293      	cmp	r3, r2
 8000f4e:	d3c8      	bcc.n	8000ee2 <SSD1306_Putc+0x5e>
 8000f50:	697b      	ldr	r3, [r7, #20]
 8000f52:	3301      	adds	r3, #1
 8000f54:	617b      	str	r3, [r7, #20]
 8000f56:	683b      	ldr	r3, [r7, #0]
 8000f58:	785b      	ldrb	r3, [r3, #1]
 8000f5a:	461a      	mov	r2, r3
 8000f5c:	697b      	ldr	r3, [r7, #20]
 8000f5e:	4293      	cmp	r3, r2
 8000f60:	d3ad      	bcc.n	8000ebe <SSD1306_Putc+0x3a>
 8000f62:	4b07      	ldr	r3, [pc, #28]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000f64:	881a      	ldrh	r2, [r3, #0]
 8000f66:	683b      	ldr	r3, [r7, #0]
 8000f68:	781b      	ldrb	r3, [r3, #0]
 8000f6a:	b29b      	uxth	r3, r3
 8000f6c:	4413      	add	r3, r2
 8000f6e:	b29a      	uxth	r2, r3
 8000f70:	4b03      	ldr	r3, [pc, #12]	; (8000f80 <SSD1306_Putc+0xfc>)
 8000f72:	801a      	strh	r2, [r3, #0]
 8000f74:	79fb      	ldrb	r3, [r7, #7]
 8000f76:	4618      	mov	r0, r3
 8000f78:	3718      	adds	r7, #24
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	bd80      	pop	{r7, pc}
 8000f7e:	bf00      	nop
 8000f80:	200007d8 	.word	0x200007d8

08000f84 <SSD1306_Puts>:
 8000f84:	b580      	push	{r7, lr}
 8000f86:	b084      	sub	sp, #16
 8000f88:	af00      	add	r7, sp, #0
 8000f8a:	60f8      	str	r0, [r7, #12]
 8000f8c:	60b9      	str	r1, [r7, #8]
 8000f8e:	4613      	mov	r3, r2
 8000f90:	71fb      	strb	r3, [r7, #7]
 8000f92:	e012      	b.n	8000fba <SSD1306_Puts+0x36>
 8000f94:	68fb      	ldr	r3, [r7, #12]
 8000f96:	781b      	ldrb	r3, [r3, #0]
 8000f98:	79fa      	ldrb	r2, [r7, #7]
 8000f9a:	68b9      	ldr	r1, [r7, #8]
 8000f9c:	4618      	mov	r0, r3
 8000f9e:	f7ff ff71 	bl	8000e84 <SSD1306_Putc>
 8000fa2:	4603      	mov	r3, r0
 8000fa4:	461a      	mov	r2, r3
 8000fa6:	68fb      	ldr	r3, [r7, #12]
 8000fa8:	781b      	ldrb	r3, [r3, #0]
 8000faa:	429a      	cmp	r2, r3
 8000fac:	d002      	beq.n	8000fb4 <SSD1306_Puts+0x30>
 8000fae:	68fb      	ldr	r3, [r7, #12]
 8000fb0:	781b      	ldrb	r3, [r3, #0]
 8000fb2:	e008      	b.n	8000fc6 <SSD1306_Puts+0x42>
 8000fb4:	68fb      	ldr	r3, [r7, #12]
 8000fb6:	3301      	adds	r3, #1
 8000fb8:	60fb      	str	r3, [r7, #12]
 8000fba:	68fb      	ldr	r3, [r7, #12]
 8000fbc:	781b      	ldrb	r3, [r3, #0]
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	d1e8      	bne.n	8000f94 <SSD1306_Puts+0x10>
 8000fc2:	68fb      	ldr	r3, [r7, #12]
 8000fc4:	781b      	ldrb	r3, [r3, #0]
 8000fc6:	4618      	mov	r0, r3
 8000fc8:	3710      	adds	r7, #16
 8000fca:	46bd      	mov	sp, r7
 8000fcc:	bd80      	pop	{r7, pc}

08000fce <SSD1306_Clear>:
 8000fce:	b580      	push	{r7, lr}
 8000fd0:	af00      	add	r7, sp, #0
 8000fd2:	2000      	movs	r0, #0
 8000fd4:	f7ff feca 	bl	8000d6c <SSD1306_Fill>
 8000fd8:	f7ff fe9a 	bl	8000d10 <SSD1306_UpdateScreen>
 8000fdc:	bf00      	nop
 8000fde:	bd80      	pop	{r7, pc}

08000fe0 <ssd1306_I2C_Init>:
 8000fe0:	b480      	push	{r7}
 8000fe2:	b083      	sub	sp, #12
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	4b07      	ldr	r3, [pc, #28]	; (8001004 <ssd1306_I2C_Init+0x24>)
 8000fe8:	607b      	str	r3, [r7, #4]
 8000fea:	e002      	b.n	8000ff2 <ssd1306_I2C_Init+0x12>
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	3b01      	subs	r3, #1
 8000ff0:	607b      	str	r3, [r7, #4]
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d1f9      	bne.n	8000fec <ssd1306_I2C_Init+0xc>
 8000ff8:	bf00      	nop
 8000ffa:	bf00      	nop
 8000ffc:	370c      	adds	r7, #12
 8000ffe:	46bd      	mov	sp, r7
 8001000:	bc80      	pop	{r7}
 8001002:	4770      	bx	lr
 8001004:	0003d090 	.word	0x0003d090

08001008 <ssd1306_I2C_WriteMulti>:
 8001008:	b590      	push	{r4, r7, lr}
 800100a:	b0c7      	sub	sp, #284	; 0x11c
 800100c:	af02      	add	r7, sp, #8
 800100e:	4604      	mov	r4, r0
 8001010:	4608      	mov	r0, r1
 8001012:	f507 7188 	add.w	r1, r7, #272	; 0x110
 8001016:	f5a1 7188 	sub.w	r1, r1, #272	; 0x110
 800101a:	600a      	str	r2, [r1, #0]
 800101c:	4619      	mov	r1, r3
 800101e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001022:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 8001026:	4622      	mov	r2, r4
 8001028:	701a      	strb	r2, [r3, #0]
 800102a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800102e:	f5a3 7385 	sub.w	r3, r3, #266	; 0x10a
 8001032:	4602      	mov	r2, r0
 8001034:	701a      	strb	r2, [r3, #0]
 8001036:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800103a:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800103e:	460a      	mov	r2, r1
 8001040:	801a      	strh	r2, [r3, #0]
 8001042:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001046:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800104a:	f507 7288 	add.w	r2, r7, #272	; 0x110
 800104e:	f5a2 7285 	sub.w	r2, r2, #266	; 0x10a
 8001052:	7812      	ldrb	r2, [r2, #0]
 8001054:	701a      	strb	r2, [r3, #0]
 8001056:	2300      	movs	r3, #0
 8001058:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
 800105c:	e015      	b.n	800108a <ssd1306_I2C_WriteMulti+0x82>
 800105e:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 8001062:	f507 7288 	add.w	r2, r7, #272	; 0x110
 8001066:	f5a2 7288 	sub.w	r2, r2, #272	; 0x110
 800106a:	6812      	ldr	r2, [r2, #0]
 800106c:	441a      	add	r2, r3
 800106e:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 8001072:	3301      	adds	r3, #1
 8001074:	7811      	ldrb	r1, [r2, #0]
 8001076:	f507 7288 	add.w	r2, r7, #272	; 0x110
 800107a:	f5a2 7282 	sub.w	r2, r2, #260	; 0x104
 800107e:	54d1      	strb	r1, [r2, r3]
 8001080:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 8001084:	3301      	adds	r3, #1
 8001086:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
 800108a:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 800108e:	b29b      	uxth	r3, r3
 8001090:	f507 7288 	add.w	r2, r7, #272	; 0x110
 8001094:	f5a2 7286 	sub.w	r2, r2, #268	; 0x10c
 8001098:	8812      	ldrh	r2, [r2, #0]
 800109a:	429a      	cmp	r2, r3
 800109c:	d8df      	bhi.n	800105e <ssd1306_I2C_WriteMulti+0x56>
 800109e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80010a2:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 80010a6:	781b      	ldrb	r3, [r3, #0]
 80010a8:	b299      	uxth	r1, r3
 80010aa:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80010ae:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 80010b2:	881b      	ldrh	r3, [r3, #0]
 80010b4:	3301      	adds	r3, #1
 80010b6:	b29b      	uxth	r3, r3
 80010b8:	f107 020c 	add.w	r2, r7, #12
 80010bc:	200a      	movs	r0, #10
 80010be:	9000      	str	r0, [sp, #0]
 80010c0:	4803      	ldr	r0, [pc, #12]	; (80010d0 <ssd1306_I2C_WriteMulti+0xc8>)
 80010c2:	f000 fc47 	bl	8001954 <HAL_I2C_Master_Transmit>
 80010c6:	bf00      	nop
 80010c8:	f507 778a 	add.w	r7, r7, #276	; 0x114
 80010cc:	46bd      	mov	sp, r7
 80010ce:	bd90      	pop	{r4, r7, pc}
 80010d0:	200002e8 	.word	0x200002e8

080010d4 <ssd1306_I2C_Write>:
 80010d4:	b580      	push	{r7, lr}
 80010d6:	b086      	sub	sp, #24
 80010d8:	af02      	add	r7, sp, #8
 80010da:	4603      	mov	r3, r0
 80010dc:	71fb      	strb	r3, [r7, #7]
 80010de:	460b      	mov	r3, r1
 80010e0:	71bb      	strb	r3, [r7, #6]
 80010e2:	4613      	mov	r3, r2
 80010e4:	717b      	strb	r3, [r7, #5]
 80010e6:	79bb      	ldrb	r3, [r7, #6]
 80010e8:	733b      	strb	r3, [r7, #12]
 80010ea:	797b      	ldrb	r3, [r7, #5]
 80010ec:	737b      	strb	r3, [r7, #13]
 80010ee:	79fb      	ldrb	r3, [r7, #7]
 80010f0:	b299      	uxth	r1, r3
 80010f2:	f107 020c 	add.w	r2, r7, #12
 80010f6:	230a      	movs	r3, #10
 80010f8:	9300      	str	r3, [sp, #0]
 80010fa:	2302      	movs	r3, #2
 80010fc:	4803      	ldr	r0, [pc, #12]	; (800110c <ssd1306_I2C_Write+0x38>)
 80010fe:	f000 fc29 	bl	8001954 <HAL_I2C_Master_Transmit>
 8001102:	bf00      	nop
 8001104:	3710      	adds	r7, #16
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	200002e8 	.word	0x200002e8

08001110 <HAL_Init>:
 8001110:	b580      	push	{r7, lr}
 8001112:	af00      	add	r7, sp, #0
 8001114:	4b08      	ldr	r3, [pc, #32]	; (8001138 <HAL_Init+0x28>)
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	4a07      	ldr	r2, [pc, #28]	; (8001138 <HAL_Init+0x28>)
 800111a:	f043 0310 	orr.w	r3, r3, #16
 800111e:	6013      	str	r3, [r2, #0]
 8001120:	2003      	movs	r0, #3
 8001122:	f000 f8d1 	bl	80012c8 <HAL_NVIC_SetPriorityGrouping>
 8001126:	200f      	movs	r0, #15
 8001128:	f7ff fbe8 	bl	80008fc <HAL_InitTick>
 800112c:	f7ff fb14 	bl	8000758 <HAL_MspInit>
 8001130:	2300      	movs	r3, #0
 8001132:	4618      	mov	r0, r3
 8001134:	bd80      	pop	{r7, pc}
 8001136:	bf00      	nop
 8001138:	40022000 	.word	0x40022000

0800113c <HAL_IncTick>:
 800113c:	b480      	push	{r7}
 800113e:	af00      	add	r7, sp, #0
 8001140:	4b05      	ldr	r3, [pc, #20]	; (8001158 <HAL_IncTick+0x1c>)
 8001142:	781b      	ldrb	r3, [r3, #0]
 8001144:	461a      	mov	r2, r3
 8001146:	4b05      	ldr	r3, [pc, #20]	; (800115c <HAL_IncTick+0x20>)
 8001148:	681b      	ldr	r3, [r3, #0]
 800114a:	4413      	add	r3, r2
 800114c:	4a03      	ldr	r2, [pc, #12]	; (800115c <HAL_IncTick+0x20>)
 800114e:	6013      	str	r3, [r2, #0]
 8001150:	bf00      	nop
 8001152:	46bd      	mov	sp, r7
 8001154:	bc80      	pop	{r7}
 8001156:	4770      	bx	lr
 8001158:	20000010 	.word	0x20000010
 800115c:	200007e0 	.word	0x200007e0

08001160 <HAL_GetTick>:
 8001160:	b480      	push	{r7}
 8001162:	af00      	add	r7, sp, #0
 8001164:	4b02      	ldr	r3, [pc, #8]	; (8001170 <HAL_GetTick+0x10>)
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	4618      	mov	r0, r3
 800116a:	46bd      	mov	sp, r7
 800116c:	bc80      	pop	{r7}
 800116e:	4770      	bx	lr
 8001170:	200007e0 	.word	0x200007e0

08001174 <__NVIC_SetPriorityGrouping>:
 8001174:	b480      	push	{r7}
 8001176:	b085      	sub	sp, #20
 8001178:	af00      	add	r7, sp, #0
 800117a:	6078      	str	r0, [r7, #4]
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	f003 0307 	and.w	r3, r3, #7
 8001182:	60fb      	str	r3, [r7, #12]
 8001184:	4b0c      	ldr	r3, [pc, #48]	; (80011b8 <__NVIC_SetPriorityGrouping+0x44>)
 8001186:	68db      	ldr	r3, [r3, #12]
 8001188:	60bb      	str	r3, [r7, #8]
 800118a:	68ba      	ldr	r2, [r7, #8]
 800118c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001190:	4013      	ands	r3, r2
 8001192:	60bb      	str	r3, [r7, #8]
 8001194:	68fb      	ldr	r3, [r7, #12]
 8001196:	021a      	lsls	r2, r3, #8
 8001198:	68bb      	ldr	r3, [r7, #8]
 800119a:	4313      	orrs	r3, r2
 800119c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80011a0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80011a4:	60bb      	str	r3, [r7, #8]
 80011a6:	4a04      	ldr	r2, [pc, #16]	; (80011b8 <__NVIC_SetPriorityGrouping+0x44>)
 80011a8:	68bb      	ldr	r3, [r7, #8]
 80011aa:	60d3      	str	r3, [r2, #12]
 80011ac:	bf00      	nop
 80011ae:	3714      	adds	r7, #20
 80011b0:	46bd      	mov	sp, r7
 80011b2:	bc80      	pop	{r7}
 80011b4:	4770      	bx	lr
 80011b6:	bf00      	nop
 80011b8:	e000ed00 	.word	0xe000ed00

080011bc <__NVIC_GetPriorityGrouping>:
 80011bc:	b480      	push	{r7}
 80011be:	af00      	add	r7, sp, #0
 80011c0:	4b04      	ldr	r3, [pc, #16]	; (80011d4 <__NVIC_GetPriorityGrouping+0x18>)
 80011c2:	68db      	ldr	r3, [r3, #12]
 80011c4:	0a1b      	lsrs	r3, r3, #8
 80011c6:	f003 0307 	and.w	r3, r3, #7
 80011ca:	4618      	mov	r0, r3
 80011cc:	46bd      	mov	sp, r7
 80011ce:	bc80      	pop	{r7}
 80011d0:	4770      	bx	lr
 80011d2:	bf00      	nop
 80011d4:	e000ed00 	.word	0xe000ed00

080011d8 <__NVIC_EnableIRQ>:
 80011d8:	b480      	push	{r7}
 80011da:	b083      	sub	sp, #12
 80011dc:	af00      	add	r7, sp, #0
 80011de:	4603      	mov	r3, r0
 80011e0:	71fb      	strb	r3, [r7, #7]
 80011e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	db0b      	blt.n	8001202 <__NVIC_EnableIRQ+0x2a>
 80011ea:	79fb      	ldrb	r3, [r7, #7]
 80011ec:	f003 021f 	and.w	r2, r3, #31
 80011f0:	4906      	ldr	r1, [pc, #24]	; (800120c <__NVIC_EnableIRQ+0x34>)
 80011f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011f6:	095b      	lsrs	r3, r3, #5
 80011f8:	2001      	movs	r0, #1
 80011fa:	fa00 f202 	lsl.w	r2, r0, r2
 80011fe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001202:	bf00      	nop
 8001204:	370c      	adds	r7, #12
 8001206:	46bd      	mov	sp, r7
 8001208:	bc80      	pop	{r7}
 800120a:	4770      	bx	lr
 800120c:	e000e100 	.word	0xe000e100

08001210 <__NVIC_SetPriority>:
 8001210:	b480      	push	{r7}
 8001212:	b083      	sub	sp, #12
 8001214:	af00      	add	r7, sp, #0
 8001216:	4603      	mov	r3, r0
 8001218:	6039      	str	r1, [r7, #0]
 800121a:	71fb      	strb	r3, [r7, #7]
 800121c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001220:	2b00      	cmp	r3, #0
 8001222:	db0a      	blt.n	800123a <__NVIC_SetPriority+0x2a>
 8001224:	683b      	ldr	r3, [r7, #0]
 8001226:	b2da      	uxtb	r2, r3
 8001228:	490c      	ldr	r1, [pc, #48]	; (800125c <__NVIC_SetPriority+0x4c>)
 800122a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800122e:	0112      	lsls	r2, r2, #4
 8001230:	b2d2      	uxtb	r2, r2
 8001232:	440b      	add	r3, r1
 8001234:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001238:	e00a      	b.n	8001250 <__NVIC_SetPriority+0x40>
 800123a:	683b      	ldr	r3, [r7, #0]
 800123c:	b2da      	uxtb	r2, r3
 800123e:	4908      	ldr	r1, [pc, #32]	; (8001260 <__NVIC_SetPriority+0x50>)
 8001240:	79fb      	ldrb	r3, [r7, #7]
 8001242:	f003 030f 	and.w	r3, r3, #15
 8001246:	3b04      	subs	r3, #4
 8001248:	0112      	lsls	r2, r2, #4
 800124a:	b2d2      	uxtb	r2, r2
 800124c:	440b      	add	r3, r1
 800124e:	761a      	strb	r2, [r3, #24]
 8001250:	bf00      	nop
 8001252:	370c      	adds	r7, #12
 8001254:	46bd      	mov	sp, r7
 8001256:	bc80      	pop	{r7}
 8001258:	4770      	bx	lr
 800125a:	bf00      	nop
 800125c:	e000e100 	.word	0xe000e100
 8001260:	e000ed00 	.word	0xe000ed00

08001264 <NVIC_EncodePriority>:
 8001264:	b480      	push	{r7}
 8001266:	b089      	sub	sp, #36	; 0x24
 8001268:	af00      	add	r7, sp, #0
 800126a:	60f8      	str	r0, [r7, #12]
 800126c:	60b9      	str	r1, [r7, #8]
 800126e:	607a      	str	r2, [r7, #4]
 8001270:	68fb      	ldr	r3, [r7, #12]
 8001272:	f003 0307 	and.w	r3, r3, #7
 8001276:	61fb      	str	r3, [r7, #28]
 8001278:	69fb      	ldr	r3, [r7, #28]
 800127a:	f1c3 0307 	rsb	r3, r3, #7
 800127e:	2b04      	cmp	r3, #4
 8001280:	bf28      	it	cs
 8001282:	2304      	movcs	r3, #4
 8001284:	61bb      	str	r3, [r7, #24]
 8001286:	69fb      	ldr	r3, [r7, #28]
 8001288:	3304      	adds	r3, #4
 800128a:	2b06      	cmp	r3, #6
 800128c:	d902      	bls.n	8001294 <NVIC_EncodePriority+0x30>
 800128e:	69fb      	ldr	r3, [r7, #28]
 8001290:	3b03      	subs	r3, #3
 8001292:	e000      	b.n	8001296 <NVIC_EncodePriority+0x32>
 8001294:	2300      	movs	r3, #0
 8001296:	617b      	str	r3, [r7, #20]
 8001298:	f04f 32ff 	mov.w	r2, #4294967295
 800129c:	69bb      	ldr	r3, [r7, #24]
 800129e:	fa02 f303 	lsl.w	r3, r2, r3
 80012a2:	43da      	mvns	r2, r3
 80012a4:	68bb      	ldr	r3, [r7, #8]
 80012a6:	401a      	ands	r2, r3
 80012a8:	697b      	ldr	r3, [r7, #20]
 80012aa:	409a      	lsls	r2, r3
 80012ac:	f04f 31ff 	mov.w	r1, #4294967295
 80012b0:	697b      	ldr	r3, [r7, #20]
 80012b2:	fa01 f303 	lsl.w	r3, r1, r3
 80012b6:	43d9      	mvns	r1, r3
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	400b      	ands	r3, r1
 80012bc:	4313      	orrs	r3, r2
 80012be:	4618      	mov	r0, r3
 80012c0:	3724      	adds	r7, #36	; 0x24
 80012c2:	46bd      	mov	sp, r7
 80012c4:	bc80      	pop	{r7}
 80012c6:	4770      	bx	lr

080012c8 <HAL_NVIC_SetPriorityGrouping>:
 80012c8:	b580      	push	{r7, lr}
 80012ca:	b082      	sub	sp, #8
 80012cc:	af00      	add	r7, sp, #0
 80012ce:	6078      	str	r0, [r7, #4]
 80012d0:	6878      	ldr	r0, [r7, #4]
 80012d2:	f7ff ff4f 	bl	8001174 <__NVIC_SetPriorityGrouping>
 80012d6:	bf00      	nop
 80012d8:	3708      	adds	r7, #8
 80012da:	46bd      	mov	sp, r7
 80012dc:	bd80      	pop	{r7, pc}

080012de <HAL_NVIC_SetPriority>:
 80012de:	b580      	push	{r7, lr}
 80012e0:	b086      	sub	sp, #24
 80012e2:	af00      	add	r7, sp, #0
 80012e4:	4603      	mov	r3, r0
 80012e6:	60b9      	str	r1, [r7, #8]
 80012e8:	607a      	str	r2, [r7, #4]
 80012ea:	73fb      	strb	r3, [r7, #15]
 80012ec:	2300      	movs	r3, #0
 80012ee:	617b      	str	r3, [r7, #20]
 80012f0:	f7ff ff64 	bl	80011bc <__NVIC_GetPriorityGrouping>
 80012f4:	6178      	str	r0, [r7, #20]
 80012f6:	687a      	ldr	r2, [r7, #4]
 80012f8:	68b9      	ldr	r1, [r7, #8]
 80012fa:	6978      	ldr	r0, [r7, #20]
 80012fc:	f7ff ffb2 	bl	8001264 <NVIC_EncodePriority>
 8001300:	4602      	mov	r2, r0
 8001302:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001306:	4611      	mov	r1, r2
 8001308:	4618      	mov	r0, r3
 800130a:	f7ff ff81 	bl	8001210 <__NVIC_SetPriority>
 800130e:	bf00      	nop
 8001310:	3718      	adds	r7, #24
 8001312:	46bd      	mov	sp, r7
 8001314:	bd80      	pop	{r7, pc}

08001316 <HAL_NVIC_EnableIRQ>:
 8001316:	b580      	push	{r7, lr}
 8001318:	b082      	sub	sp, #8
 800131a:	af00      	add	r7, sp, #0
 800131c:	4603      	mov	r3, r0
 800131e:	71fb      	strb	r3, [r7, #7]
 8001320:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001324:	4618      	mov	r0, r3
 8001326:	f7ff ff57 	bl	80011d8 <__NVIC_EnableIRQ>
 800132a:	bf00      	nop
 800132c:	3708      	adds	r7, #8
 800132e:	46bd      	mov	sp, r7
 8001330:	bd80      	pop	{r7, pc}
	...

08001334 <HAL_GPIO_Init>:
 8001334:	b480      	push	{r7}
 8001336:	b08b      	sub	sp, #44	; 0x2c
 8001338:	af00      	add	r7, sp, #0
 800133a:	6078      	str	r0, [r7, #4]
 800133c:	6039      	str	r1, [r7, #0]
 800133e:	2300      	movs	r3, #0
 8001340:	627b      	str	r3, [r7, #36]	; 0x24
 8001342:	2300      	movs	r3, #0
 8001344:	623b      	str	r3, [r7, #32]
 8001346:	e169      	b.n	800161c <HAL_GPIO_Init+0x2e8>
 8001348:	2201      	movs	r2, #1
 800134a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800134c:	fa02 f303 	lsl.w	r3, r2, r3
 8001350:	61fb      	str	r3, [r7, #28]
 8001352:	683b      	ldr	r3, [r7, #0]
 8001354:	681b      	ldr	r3, [r3, #0]
 8001356:	69fa      	ldr	r2, [r7, #28]
 8001358:	4013      	ands	r3, r2
 800135a:	61bb      	str	r3, [r7, #24]
 800135c:	69ba      	ldr	r2, [r7, #24]
 800135e:	69fb      	ldr	r3, [r7, #28]
 8001360:	429a      	cmp	r2, r3
 8001362:	f040 8158 	bne.w	8001616 <HAL_GPIO_Init+0x2e2>
 8001366:	683b      	ldr	r3, [r7, #0]
 8001368:	685b      	ldr	r3, [r3, #4]
 800136a:	4a9a      	ldr	r2, [pc, #616]	; (80015d4 <HAL_GPIO_Init+0x2a0>)
 800136c:	4293      	cmp	r3, r2
 800136e:	d05e      	beq.n	800142e <HAL_GPIO_Init+0xfa>
 8001370:	4a98      	ldr	r2, [pc, #608]	; (80015d4 <HAL_GPIO_Init+0x2a0>)
 8001372:	4293      	cmp	r3, r2
 8001374:	d875      	bhi.n	8001462 <HAL_GPIO_Init+0x12e>
 8001376:	4a98      	ldr	r2, [pc, #608]	; (80015d8 <HAL_GPIO_Init+0x2a4>)
 8001378:	4293      	cmp	r3, r2
 800137a:	d058      	beq.n	800142e <HAL_GPIO_Init+0xfa>
 800137c:	4a96      	ldr	r2, [pc, #600]	; (80015d8 <HAL_GPIO_Init+0x2a4>)
 800137e:	4293      	cmp	r3, r2
 8001380:	d86f      	bhi.n	8001462 <HAL_GPIO_Init+0x12e>
 8001382:	4a96      	ldr	r2, [pc, #600]	; (80015dc <HAL_GPIO_Init+0x2a8>)
 8001384:	4293      	cmp	r3, r2
 8001386:	d052      	beq.n	800142e <HAL_GPIO_Init+0xfa>
 8001388:	4a94      	ldr	r2, [pc, #592]	; (80015dc <HAL_GPIO_Init+0x2a8>)
 800138a:	4293      	cmp	r3, r2
 800138c:	d869      	bhi.n	8001462 <HAL_GPIO_Init+0x12e>
 800138e:	4a94      	ldr	r2, [pc, #592]	; (80015e0 <HAL_GPIO_Init+0x2ac>)
 8001390:	4293      	cmp	r3, r2
 8001392:	d04c      	beq.n	800142e <HAL_GPIO_Init+0xfa>
 8001394:	4a92      	ldr	r2, [pc, #584]	; (80015e0 <HAL_GPIO_Init+0x2ac>)
 8001396:	4293      	cmp	r3, r2
 8001398:	d863      	bhi.n	8001462 <HAL_GPIO_Init+0x12e>
 800139a:	4a92      	ldr	r2, [pc, #584]	; (80015e4 <HAL_GPIO_Init+0x2b0>)
 800139c:	4293      	cmp	r3, r2
 800139e:	d046      	beq.n	800142e <HAL_GPIO_Init+0xfa>
 80013a0:	4a90      	ldr	r2, [pc, #576]	; (80015e4 <HAL_GPIO_Init+0x2b0>)
 80013a2:	4293      	cmp	r3, r2
 80013a4:	d85d      	bhi.n	8001462 <HAL_GPIO_Init+0x12e>
 80013a6:	2b12      	cmp	r3, #18
 80013a8:	d82a      	bhi.n	8001400 <HAL_GPIO_Init+0xcc>
 80013aa:	2b12      	cmp	r3, #18
 80013ac:	d859      	bhi.n	8001462 <HAL_GPIO_Init+0x12e>
 80013ae:	a201      	add	r2, pc, #4	; (adr r2, 80013b4 <HAL_GPIO_Init+0x80>)
 80013b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80013b4:	0800142f 	.word	0x0800142f
 80013b8:	08001409 	.word	0x08001409
 80013bc:	0800141b 	.word	0x0800141b
 80013c0:	0800145d 	.word	0x0800145d
 80013c4:	08001463 	.word	0x08001463
 80013c8:	08001463 	.word	0x08001463
 80013cc:	08001463 	.word	0x08001463
 80013d0:	08001463 	.word	0x08001463
 80013d4:	08001463 	.word	0x08001463
 80013d8:	08001463 	.word	0x08001463
 80013dc:	08001463 	.word	0x08001463
 80013e0:	08001463 	.word	0x08001463
 80013e4:	08001463 	.word	0x08001463
 80013e8:	08001463 	.word	0x08001463
 80013ec:	08001463 	.word	0x08001463
 80013f0:	08001463 	.word	0x08001463
 80013f4:	08001463 	.word	0x08001463
 80013f8:	08001411 	.word	0x08001411
 80013fc:	08001425 	.word	0x08001425
 8001400:	4a79      	ldr	r2, [pc, #484]	; (80015e8 <HAL_GPIO_Init+0x2b4>)
 8001402:	4293      	cmp	r3, r2
 8001404:	d013      	beq.n	800142e <HAL_GPIO_Init+0xfa>
 8001406:	e02c      	b.n	8001462 <HAL_GPIO_Init+0x12e>
 8001408:	683b      	ldr	r3, [r7, #0]
 800140a:	68db      	ldr	r3, [r3, #12]
 800140c:	623b      	str	r3, [r7, #32]
 800140e:	e029      	b.n	8001464 <HAL_GPIO_Init+0x130>
 8001410:	683b      	ldr	r3, [r7, #0]
 8001412:	68db      	ldr	r3, [r3, #12]
 8001414:	3304      	adds	r3, #4
 8001416:	623b      	str	r3, [r7, #32]
 8001418:	e024      	b.n	8001464 <HAL_GPIO_Init+0x130>
 800141a:	683b      	ldr	r3, [r7, #0]
 800141c:	68db      	ldr	r3, [r3, #12]
 800141e:	3308      	adds	r3, #8
 8001420:	623b      	str	r3, [r7, #32]
 8001422:	e01f      	b.n	8001464 <HAL_GPIO_Init+0x130>
 8001424:	683b      	ldr	r3, [r7, #0]
 8001426:	68db      	ldr	r3, [r3, #12]
 8001428:	330c      	adds	r3, #12
 800142a:	623b      	str	r3, [r7, #32]
 800142c:	e01a      	b.n	8001464 <HAL_GPIO_Init+0x130>
 800142e:	683b      	ldr	r3, [r7, #0]
 8001430:	689b      	ldr	r3, [r3, #8]
 8001432:	2b00      	cmp	r3, #0
 8001434:	d102      	bne.n	800143c <HAL_GPIO_Init+0x108>
 8001436:	2304      	movs	r3, #4
 8001438:	623b      	str	r3, [r7, #32]
 800143a:	e013      	b.n	8001464 <HAL_GPIO_Init+0x130>
 800143c:	683b      	ldr	r3, [r7, #0]
 800143e:	689b      	ldr	r3, [r3, #8]
 8001440:	2b01      	cmp	r3, #1
 8001442:	d105      	bne.n	8001450 <HAL_GPIO_Init+0x11c>
 8001444:	2308      	movs	r3, #8
 8001446:	623b      	str	r3, [r7, #32]
 8001448:	687b      	ldr	r3, [r7, #4]
 800144a:	69fa      	ldr	r2, [r7, #28]
 800144c:	611a      	str	r2, [r3, #16]
 800144e:	e009      	b.n	8001464 <HAL_GPIO_Init+0x130>
 8001450:	2308      	movs	r3, #8
 8001452:	623b      	str	r3, [r7, #32]
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	69fa      	ldr	r2, [r7, #28]
 8001458:	615a      	str	r2, [r3, #20]
 800145a:	e003      	b.n	8001464 <HAL_GPIO_Init+0x130>
 800145c:	2300      	movs	r3, #0
 800145e:	623b      	str	r3, [r7, #32]
 8001460:	e000      	b.n	8001464 <HAL_GPIO_Init+0x130>
 8001462:	bf00      	nop
 8001464:	69bb      	ldr	r3, [r7, #24]
 8001466:	2bff      	cmp	r3, #255	; 0xff
 8001468:	d801      	bhi.n	800146e <HAL_GPIO_Init+0x13a>
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	e001      	b.n	8001472 <HAL_GPIO_Init+0x13e>
 800146e:	687b      	ldr	r3, [r7, #4]
 8001470:	3304      	adds	r3, #4
 8001472:	617b      	str	r3, [r7, #20]
 8001474:	69bb      	ldr	r3, [r7, #24]
 8001476:	2bff      	cmp	r3, #255	; 0xff
 8001478:	d802      	bhi.n	8001480 <HAL_GPIO_Init+0x14c>
 800147a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800147c:	009b      	lsls	r3, r3, #2
 800147e:	e002      	b.n	8001486 <HAL_GPIO_Init+0x152>
 8001480:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001482:	3b08      	subs	r3, #8
 8001484:	009b      	lsls	r3, r3, #2
 8001486:	613b      	str	r3, [r7, #16]
 8001488:	697b      	ldr	r3, [r7, #20]
 800148a:	681a      	ldr	r2, [r3, #0]
 800148c:	210f      	movs	r1, #15
 800148e:	693b      	ldr	r3, [r7, #16]
 8001490:	fa01 f303 	lsl.w	r3, r1, r3
 8001494:	43db      	mvns	r3, r3
 8001496:	401a      	ands	r2, r3
 8001498:	6a39      	ldr	r1, [r7, #32]
 800149a:	693b      	ldr	r3, [r7, #16]
 800149c:	fa01 f303 	lsl.w	r3, r1, r3
 80014a0:	431a      	orrs	r2, r3
 80014a2:	697b      	ldr	r3, [r7, #20]
 80014a4:	601a      	str	r2, [r3, #0]
 80014a6:	683b      	ldr	r3, [r7, #0]
 80014a8:	685b      	ldr	r3, [r3, #4]
 80014aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	f000 80b1 	beq.w	8001616 <HAL_GPIO_Init+0x2e2>
 80014b4:	4b4d      	ldr	r3, [pc, #308]	; (80015ec <HAL_GPIO_Init+0x2b8>)
 80014b6:	699b      	ldr	r3, [r3, #24]
 80014b8:	4a4c      	ldr	r2, [pc, #304]	; (80015ec <HAL_GPIO_Init+0x2b8>)
 80014ba:	f043 0301 	orr.w	r3, r3, #1
 80014be:	6193      	str	r3, [r2, #24]
 80014c0:	4b4a      	ldr	r3, [pc, #296]	; (80015ec <HAL_GPIO_Init+0x2b8>)
 80014c2:	699b      	ldr	r3, [r3, #24]
 80014c4:	f003 0301 	and.w	r3, r3, #1
 80014c8:	60bb      	str	r3, [r7, #8]
 80014ca:	68bb      	ldr	r3, [r7, #8]
 80014cc:	4a48      	ldr	r2, [pc, #288]	; (80015f0 <HAL_GPIO_Init+0x2bc>)
 80014ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014d0:	089b      	lsrs	r3, r3, #2
 80014d2:	3302      	adds	r3, #2
 80014d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80014d8:	60fb      	str	r3, [r7, #12]
 80014da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014dc:	f003 0303 	and.w	r3, r3, #3
 80014e0:	009b      	lsls	r3, r3, #2
 80014e2:	220f      	movs	r2, #15
 80014e4:	fa02 f303 	lsl.w	r3, r2, r3
 80014e8:	43db      	mvns	r3, r3
 80014ea:	68fa      	ldr	r2, [r7, #12]
 80014ec:	4013      	ands	r3, r2
 80014ee:	60fb      	str	r3, [r7, #12]
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	4a40      	ldr	r2, [pc, #256]	; (80015f4 <HAL_GPIO_Init+0x2c0>)
 80014f4:	4293      	cmp	r3, r2
 80014f6:	d013      	beq.n	8001520 <HAL_GPIO_Init+0x1ec>
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	4a3f      	ldr	r2, [pc, #252]	; (80015f8 <HAL_GPIO_Init+0x2c4>)
 80014fc:	4293      	cmp	r3, r2
 80014fe:	d00d      	beq.n	800151c <HAL_GPIO_Init+0x1e8>
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	4a3e      	ldr	r2, [pc, #248]	; (80015fc <HAL_GPIO_Init+0x2c8>)
 8001504:	4293      	cmp	r3, r2
 8001506:	d007      	beq.n	8001518 <HAL_GPIO_Init+0x1e4>
 8001508:	687b      	ldr	r3, [r7, #4]
 800150a:	4a3d      	ldr	r2, [pc, #244]	; (8001600 <HAL_GPIO_Init+0x2cc>)
 800150c:	4293      	cmp	r3, r2
 800150e:	d101      	bne.n	8001514 <HAL_GPIO_Init+0x1e0>
 8001510:	2303      	movs	r3, #3
 8001512:	e006      	b.n	8001522 <HAL_GPIO_Init+0x1ee>
 8001514:	2304      	movs	r3, #4
 8001516:	e004      	b.n	8001522 <HAL_GPIO_Init+0x1ee>
 8001518:	2302      	movs	r3, #2
 800151a:	e002      	b.n	8001522 <HAL_GPIO_Init+0x1ee>
 800151c:	2301      	movs	r3, #1
 800151e:	e000      	b.n	8001522 <HAL_GPIO_Init+0x1ee>
 8001520:	2300      	movs	r3, #0
 8001522:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001524:	f002 0203 	and.w	r2, r2, #3
 8001528:	0092      	lsls	r2, r2, #2
 800152a:	4093      	lsls	r3, r2
 800152c:	68fa      	ldr	r2, [r7, #12]
 800152e:	4313      	orrs	r3, r2
 8001530:	60fb      	str	r3, [r7, #12]
 8001532:	492f      	ldr	r1, [pc, #188]	; (80015f0 <HAL_GPIO_Init+0x2bc>)
 8001534:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001536:	089b      	lsrs	r3, r3, #2
 8001538:	3302      	adds	r3, #2
 800153a:	68fa      	ldr	r2, [r7, #12]
 800153c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001540:	683b      	ldr	r3, [r7, #0]
 8001542:	685b      	ldr	r3, [r3, #4]
 8001544:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001548:	2b00      	cmp	r3, #0
 800154a:	d006      	beq.n	800155a <HAL_GPIO_Init+0x226>
 800154c:	4b2d      	ldr	r3, [pc, #180]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 800154e:	689a      	ldr	r2, [r3, #8]
 8001550:	492c      	ldr	r1, [pc, #176]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 8001552:	69bb      	ldr	r3, [r7, #24]
 8001554:	4313      	orrs	r3, r2
 8001556:	608b      	str	r3, [r1, #8]
 8001558:	e006      	b.n	8001568 <HAL_GPIO_Init+0x234>
 800155a:	4b2a      	ldr	r3, [pc, #168]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 800155c:	689a      	ldr	r2, [r3, #8]
 800155e:	69bb      	ldr	r3, [r7, #24]
 8001560:	43db      	mvns	r3, r3
 8001562:	4928      	ldr	r1, [pc, #160]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 8001564:	4013      	ands	r3, r2
 8001566:	608b      	str	r3, [r1, #8]
 8001568:	683b      	ldr	r3, [r7, #0]
 800156a:	685b      	ldr	r3, [r3, #4]
 800156c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001570:	2b00      	cmp	r3, #0
 8001572:	d006      	beq.n	8001582 <HAL_GPIO_Init+0x24e>
 8001574:	4b23      	ldr	r3, [pc, #140]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 8001576:	68da      	ldr	r2, [r3, #12]
 8001578:	4922      	ldr	r1, [pc, #136]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 800157a:	69bb      	ldr	r3, [r7, #24]
 800157c:	4313      	orrs	r3, r2
 800157e:	60cb      	str	r3, [r1, #12]
 8001580:	e006      	b.n	8001590 <HAL_GPIO_Init+0x25c>
 8001582:	4b20      	ldr	r3, [pc, #128]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 8001584:	68da      	ldr	r2, [r3, #12]
 8001586:	69bb      	ldr	r3, [r7, #24]
 8001588:	43db      	mvns	r3, r3
 800158a:	491e      	ldr	r1, [pc, #120]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 800158c:	4013      	ands	r3, r2
 800158e:	60cb      	str	r3, [r1, #12]
 8001590:	683b      	ldr	r3, [r7, #0]
 8001592:	685b      	ldr	r3, [r3, #4]
 8001594:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001598:	2b00      	cmp	r3, #0
 800159a:	d006      	beq.n	80015aa <HAL_GPIO_Init+0x276>
 800159c:	4b19      	ldr	r3, [pc, #100]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 800159e:	685a      	ldr	r2, [r3, #4]
 80015a0:	4918      	ldr	r1, [pc, #96]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 80015a2:	69bb      	ldr	r3, [r7, #24]
 80015a4:	4313      	orrs	r3, r2
 80015a6:	604b      	str	r3, [r1, #4]
 80015a8:	e006      	b.n	80015b8 <HAL_GPIO_Init+0x284>
 80015aa:	4b16      	ldr	r3, [pc, #88]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 80015ac:	685a      	ldr	r2, [r3, #4]
 80015ae:	69bb      	ldr	r3, [r7, #24]
 80015b0:	43db      	mvns	r3, r3
 80015b2:	4914      	ldr	r1, [pc, #80]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 80015b4:	4013      	ands	r3, r2
 80015b6:	604b      	str	r3, [r1, #4]
 80015b8:	683b      	ldr	r3, [r7, #0]
 80015ba:	685b      	ldr	r3, [r3, #4]
 80015bc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d021      	beq.n	8001608 <HAL_GPIO_Init+0x2d4>
 80015c4:	4b0f      	ldr	r3, [pc, #60]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 80015c6:	681a      	ldr	r2, [r3, #0]
 80015c8:	490e      	ldr	r1, [pc, #56]	; (8001604 <HAL_GPIO_Init+0x2d0>)
 80015ca:	69bb      	ldr	r3, [r7, #24]
 80015cc:	4313      	orrs	r3, r2
 80015ce:	600b      	str	r3, [r1, #0]
 80015d0:	e021      	b.n	8001616 <HAL_GPIO_Init+0x2e2>
 80015d2:	bf00      	nop
 80015d4:	10320000 	.word	0x10320000
 80015d8:	10310000 	.word	0x10310000
 80015dc:	10220000 	.word	0x10220000
 80015e0:	10210000 	.word	0x10210000
 80015e4:	10120000 	.word	0x10120000
 80015e8:	10110000 	.word	0x10110000
 80015ec:	40021000 	.word	0x40021000
 80015f0:	40010000 	.word	0x40010000
 80015f4:	40010800 	.word	0x40010800
 80015f8:	40010c00 	.word	0x40010c00
 80015fc:	40011000 	.word	0x40011000
 8001600:	40011400 	.word	0x40011400
 8001604:	40010400 	.word	0x40010400
 8001608:	4b0b      	ldr	r3, [pc, #44]	; (8001638 <HAL_GPIO_Init+0x304>)
 800160a:	681a      	ldr	r2, [r3, #0]
 800160c:	69bb      	ldr	r3, [r7, #24]
 800160e:	43db      	mvns	r3, r3
 8001610:	4909      	ldr	r1, [pc, #36]	; (8001638 <HAL_GPIO_Init+0x304>)
 8001612:	4013      	ands	r3, r2
 8001614:	600b      	str	r3, [r1, #0]
 8001616:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001618:	3301      	adds	r3, #1
 800161a:	627b      	str	r3, [r7, #36]	; 0x24
 800161c:	683b      	ldr	r3, [r7, #0]
 800161e:	681a      	ldr	r2, [r3, #0]
 8001620:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001622:	fa22 f303 	lsr.w	r3, r2, r3
 8001626:	2b00      	cmp	r3, #0
 8001628:	f47f ae8e 	bne.w	8001348 <HAL_GPIO_Init+0x14>
 800162c:	bf00      	nop
 800162e:	bf00      	nop
 8001630:	372c      	adds	r7, #44	; 0x2c
 8001632:	46bd      	mov	sp, r7
 8001634:	bc80      	pop	{r7}
 8001636:	4770      	bx	lr
 8001638:	40010400 	.word	0x40010400

0800163c <HAL_GPIO_ReadPin>:
 800163c:	b480      	push	{r7}
 800163e:	b085      	sub	sp, #20
 8001640:	af00      	add	r7, sp, #0
 8001642:	6078      	str	r0, [r7, #4]
 8001644:	460b      	mov	r3, r1
 8001646:	807b      	strh	r3, [r7, #2]
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	689a      	ldr	r2, [r3, #8]
 800164c:	887b      	ldrh	r3, [r7, #2]
 800164e:	4013      	ands	r3, r2
 8001650:	2b00      	cmp	r3, #0
 8001652:	d002      	beq.n	800165a <HAL_GPIO_ReadPin+0x1e>
 8001654:	2301      	movs	r3, #1
 8001656:	73fb      	strb	r3, [r7, #15]
 8001658:	e001      	b.n	800165e <HAL_GPIO_ReadPin+0x22>
 800165a:	2300      	movs	r3, #0
 800165c:	73fb      	strb	r3, [r7, #15]
 800165e:	7bfb      	ldrb	r3, [r7, #15]
 8001660:	4618      	mov	r0, r3
 8001662:	3714      	adds	r7, #20
 8001664:	46bd      	mov	sp, r7
 8001666:	bc80      	pop	{r7}
 8001668:	4770      	bx	lr

0800166a <HAL_GPIO_WritePin>:
 800166a:	b480      	push	{r7}
 800166c:	b083      	sub	sp, #12
 800166e:	af00      	add	r7, sp, #0
 8001670:	6078      	str	r0, [r7, #4]
 8001672:	460b      	mov	r3, r1
 8001674:	807b      	strh	r3, [r7, #2]
 8001676:	4613      	mov	r3, r2
 8001678:	707b      	strb	r3, [r7, #1]
 800167a:	787b      	ldrb	r3, [r7, #1]
 800167c:	2b00      	cmp	r3, #0
 800167e:	d003      	beq.n	8001688 <HAL_GPIO_WritePin+0x1e>
 8001680:	887a      	ldrh	r2, [r7, #2]
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	611a      	str	r2, [r3, #16]
 8001686:	e003      	b.n	8001690 <HAL_GPIO_WritePin+0x26>
 8001688:	887b      	ldrh	r3, [r7, #2]
 800168a:	041a      	lsls	r2, r3, #16
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	611a      	str	r2, [r3, #16]
 8001690:	bf00      	nop
 8001692:	370c      	adds	r7, #12
 8001694:	46bd      	mov	sp, r7
 8001696:	bc80      	pop	{r7}
 8001698:	4770      	bx	lr

0800169a <HAL_GPIO_TogglePin>:
 800169a:	b480      	push	{r7}
 800169c:	b085      	sub	sp, #20
 800169e:	af00      	add	r7, sp, #0
 80016a0:	6078      	str	r0, [r7, #4]
 80016a2:	460b      	mov	r3, r1
 80016a4:	807b      	strh	r3, [r7, #2]
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	68db      	ldr	r3, [r3, #12]
 80016aa:	60fb      	str	r3, [r7, #12]
 80016ac:	887a      	ldrh	r2, [r7, #2]
 80016ae:	68fb      	ldr	r3, [r7, #12]
 80016b0:	4013      	ands	r3, r2
 80016b2:	041a      	lsls	r2, r3, #16
 80016b4:	68fb      	ldr	r3, [r7, #12]
 80016b6:	43d9      	mvns	r1, r3
 80016b8:	887b      	ldrh	r3, [r7, #2]
 80016ba:	400b      	ands	r3, r1
 80016bc:	431a      	orrs	r2, r3
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	611a      	str	r2, [r3, #16]
 80016c2:	bf00      	nop
 80016c4:	3714      	adds	r7, #20
 80016c6:	46bd      	mov	sp, r7
 80016c8:	bc80      	pop	{r7}
 80016ca:	4770      	bx	lr

080016cc <HAL_I2C_Init>:
 80016cc:	b580      	push	{r7, lr}
 80016ce:	b084      	sub	sp, #16
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	6078      	str	r0, [r7, #4]
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	2b00      	cmp	r3, #0
 80016d8:	d101      	bne.n	80016de <HAL_I2C_Init+0x12>
 80016da:	2301      	movs	r3, #1
 80016dc:	e12b      	b.n	8001936 <HAL_I2C_Init+0x26a>
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80016e4:	b2db      	uxtb	r3, r3
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	d106      	bne.n	80016f8 <HAL_I2C_Init+0x2c>
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	2200      	movs	r2, #0
 80016ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80016f2:	6878      	ldr	r0, [r7, #4]
 80016f4:	f7ff f868 	bl	80007c8 <HAL_I2C_MspInit>
 80016f8:	687b      	ldr	r3, [r7, #4]
 80016fa:	2224      	movs	r2, #36	; 0x24
 80016fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	681b      	ldr	r3, [r3, #0]
 8001704:	681a      	ldr	r2, [r3, #0]
 8001706:	687b      	ldr	r3, [r7, #4]
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	f022 0201 	bic.w	r2, r2, #1
 800170e:	601a      	str	r2, [r3, #0]
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	681a      	ldr	r2, [r3, #0]
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800171e:	601a      	str	r2, [r3, #0]
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	681a      	ldr	r2, [r3, #0]
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800172e:	601a      	str	r2, [r3, #0]
 8001730:	f001 f960 	bl	80029f4 <HAL_RCC_GetPCLK1Freq>
 8001734:	60f8      	str	r0, [r7, #12]
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	685b      	ldr	r3, [r3, #4]
 800173a:	4a81      	ldr	r2, [pc, #516]	; (8001940 <HAL_I2C_Init+0x274>)
 800173c:	4293      	cmp	r3, r2
 800173e:	d807      	bhi.n	8001750 <HAL_I2C_Init+0x84>
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	4a80      	ldr	r2, [pc, #512]	; (8001944 <HAL_I2C_Init+0x278>)
 8001744:	4293      	cmp	r3, r2
 8001746:	bf94      	ite	ls
 8001748:	2301      	movls	r3, #1
 800174a:	2300      	movhi	r3, #0
 800174c:	b2db      	uxtb	r3, r3
 800174e:	e006      	b.n	800175e <HAL_I2C_Init+0x92>
 8001750:	68fb      	ldr	r3, [r7, #12]
 8001752:	4a7d      	ldr	r2, [pc, #500]	; (8001948 <HAL_I2C_Init+0x27c>)
 8001754:	4293      	cmp	r3, r2
 8001756:	bf94      	ite	ls
 8001758:	2301      	movls	r3, #1
 800175a:	2300      	movhi	r3, #0
 800175c:	b2db      	uxtb	r3, r3
 800175e:	2b00      	cmp	r3, #0
 8001760:	d001      	beq.n	8001766 <HAL_I2C_Init+0x9a>
 8001762:	2301      	movs	r3, #1
 8001764:	e0e7      	b.n	8001936 <HAL_I2C_Init+0x26a>
 8001766:	68fb      	ldr	r3, [r7, #12]
 8001768:	4a78      	ldr	r2, [pc, #480]	; (800194c <HAL_I2C_Init+0x280>)
 800176a:	fba2 2303 	umull	r2, r3, r2, r3
 800176e:	0c9b      	lsrs	r3, r3, #18
 8001770:	60bb      	str	r3, [r7, #8]
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	681b      	ldr	r3, [r3, #0]
 8001776:	685b      	ldr	r3, [r3, #4]
 8001778:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	68ba      	ldr	r2, [r7, #8]
 8001782:	430a      	orrs	r2, r1
 8001784:	605a      	str	r2, [r3, #4]
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	6a1b      	ldr	r3, [r3, #32]
 800178c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	685b      	ldr	r3, [r3, #4]
 8001794:	4a6a      	ldr	r2, [pc, #424]	; (8001940 <HAL_I2C_Init+0x274>)
 8001796:	4293      	cmp	r3, r2
 8001798:	d802      	bhi.n	80017a0 <HAL_I2C_Init+0xd4>
 800179a:	68bb      	ldr	r3, [r7, #8]
 800179c:	3301      	adds	r3, #1
 800179e:	e009      	b.n	80017b4 <HAL_I2C_Init+0xe8>
 80017a0:	68bb      	ldr	r3, [r7, #8]
 80017a2:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80017a6:	fb02 f303 	mul.w	r3, r2, r3
 80017aa:	4a69      	ldr	r2, [pc, #420]	; (8001950 <HAL_I2C_Init+0x284>)
 80017ac:	fba2 2303 	umull	r2, r3, r2, r3
 80017b0:	099b      	lsrs	r3, r3, #6
 80017b2:	3301      	adds	r3, #1
 80017b4:	687a      	ldr	r2, [r7, #4]
 80017b6:	6812      	ldr	r2, [r2, #0]
 80017b8:	430b      	orrs	r3, r1
 80017ba:	6213      	str	r3, [r2, #32]
 80017bc:	687b      	ldr	r3, [r7, #4]
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	69db      	ldr	r3, [r3, #28]
 80017c2:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80017c6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	685b      	ldr	r3, [r3, #4]
 80017ce:	495c      	ldr	r1, [pc, #368]	; (8001940 <HAL_I2C_Init+0x274>)
 80017d0:	428b      	cmp	r3, r1
 80017d2:	d819      	bhi.n	8001808 <HAL_I2C_Init+0x13c>
 80017d4:	68fb      	ldr	r3, [r7, #12]
 80017d6:	1e59      	subs	r1, r3, #1
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	685b      	ldr	r3, [r3, #4]
 80017dc:	005b      	lsls	r3, r3, #1
 80017de:	fbb1 f3f3 	udiv	r3, r1, r3
 80017e2:	1c59      	adds	r1, r3, #1
 80017e4:	f640 73fc 	movw	r3, #4092	; 0xffc
 80017e8:	400b      	ands	r3, r1
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	d00a      	beq.n	8001804 <HAL_I2C_Init+0x138>
 80017ee:	68fb      	ldr	r3, [r7, #12]
 80017f0:	1e59      	subs	r1, r3, #1
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	685b      	ldr	r3, [r3, #4]
 80017f6:	005b      	lsls	r3, r3, #1
 80017f8:	fbb1 f3f3 	udiv	r3, r1, r3
 80017fc:	3301      	adds	r3, #1
 80017fe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001802:	e051      	b.n	80018a8 <HAL_I2C_Init+0x1dc>
 8001804:	2304      	movs	r3, #4
 8001806:	e04f      	b.n	80018a8 <HAL_I2C_Init+0x1dc>
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	2b00      	cmp	r3, #0
 800180e:	d111      	bne.n	8001834 <HAL_I2C_Init+0x168>
 8001810:	68fb      	ldr	r3, [r7, #12]
 8001812:	1e58      	subs	r0, r3, #1
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	6859      	ldr	r1, [r3, #4]
 8001818:	460b      	mov	r3, r1
 800181a:	005b      	lsls	r3, r3, #1
 800181c:	440b      	add	r3, r1
 800181e:	fbb0 f3f3 	udiv	r3, r0, r3
 8001822:	3301      	adds	r3, #1
 8001824:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001828:	2b00      	cmp	r3, #0
 800182a:	bf0c      	ite	eq
 800182c:	2301      	moveq	r3, #1
 800182e:	2300      	movne	r3, #0
 8001830:	b2db      	uxtb	r3, r3
 8001832:	e012      	b.n	800185a <HAL_I2C_Init+0x18e>
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	1e58      	subs	r0, r3, #1
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	6859      	ldr	r1, [r3, #4]
 800183c:	460b      	mov	r3, r1
 800183e:	009b      	lsls	r3, r3, #2
 8001840:	440b      	add	r3, r1
 8001842:	0099      	lsls	r1, r3, #2
 8001844:	440b      	add	r3, r1
 8001846:	fbb0 f3f3 	udiv	r3, r0, r3
 800184a:	3301      	adds	r3, #1
 800184c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001850:	2b00      	cmp	r3, #0
 8001852:	bf0c      	ite	eq
 8001854:	2301      	moveq	r3, #1
 8001856:	2300      	movne	r3, #0
 8001858:	b2db      	uxtb	r3, r3
 800185a:	2b00      	cmp	r3, #0
 800185c:	d001      	beq.n	8001862 <HAL_I2C_Init+0x196>
 800185e:	2301      	movs	r3, #1
 8001860:	e022      	b.n	80018a8 <HAL_I2C_Init+0x1dc>
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	689b      	ldr	r3, [r3, #8]
 8001866:	2b00      	cmp	r3, #0
 8001868:	d10e      	bne.n	8001888 <HAL_I2C_Init+0x1bc>
 800186a:	68fb      	ldr	r3, [r7, #12]
 800186c:	1e58      	subs	r0, r3, #1
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	6859      	ldr	r1, [r3, #4]
 8001872:	460b      	mov	r3, r1
 8001874:	005b      	lsls	r3, r3, #1
 8001876:	440b      	add	r3, r1
 8001878:	fbb0 f3f3 	udiv	r3, r0, r3
 800187c:	3301      	adds	r3, #1
 800187e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001882:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001886:	e00f      	b.n	80018a8 <HAL_I2C_Init+0x1dc>
 8001888:	68fb      	ldr	r3, [r7, #12]
 800188a:	1e58      	subs	r0, r3, #1
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	6859      	ldr	r1, [r3, #4]
 8001890:	460b      	mov	r3, r1
 8001892:	009b      	lsls	r3, r3, #2
 8001894:	440b      	add	r3, r1
 8001896:	0099      	lsls	r1, r3, #2
 8001898:	440b      	add	r3, r1
 800189a:	fbb0 f3f3 	udiv	r3, r0, r3
 800189e:	3301      	adds	r3, #1
 80018a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80018a4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80018a8:	6879      	ldr	r1, [r7, #4]
 80018aa:	6809      	ldr	r1, [r1, #0]
 80018ac:	4313      	orrs	r3, r2
 80018ae:	61cb      	str	r3, [r1, #28]
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	681b      	ldr	r3, [r3, #0]
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 80018ba:	687b      	ldr	r3, [r7, #4]
 80018bc:	69da      	ldr	r2, [r3, #28]
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	6a1b      	ldr	r3, [r3, #32]
 80018c2:	431a      	orrs	r2, r3
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	430a      	orrs	r2, r1
 80018ca:	601a      	str	r2, [r3, #0]
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	689b      	ldr	r3, [r3, #8]
 80018d2:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80018d6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80018da:	687a      	ldr	r2, [r7, #4]
 80018dc:	6911      	ldr	r1, [r2, #16]
 80018de:	687a      	ldr	r2, [r7, #4]
 80018e0:	68d2      	ldr	r2, [r2, #12]
 80018e2:	4311      	orrs	r1, r2
 80018e4:	687a      	ldr	r2, [r7, #4]
 80018e6:	6812      	ldr	r2, [r2, #0]
 80018e8:	430b      	orrs	r3, r1
 80018ea:	6093      	str	r3, [r2, #8]
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	68db      	ldr	r3, [r3, #12]
 80018f2:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	695a      	ldr	r2, [r3, #20]
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	699b      	ldr	r3, [r3, #24]
 80018fe:	431a      	orrs	r2, r3
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	430a      	orrs	r2, r1
 8001906:	60da      	str	r2, [r3, #12]
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	681a      	ldr	r2, [r3, #0]
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	f042 0201 	orr.w	r2, r2, #1
 8001916:	601a      	str	r2, [r3, #0]
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	2200      	movs	r2, #0
 800191c:	641a      	str	r2, [r3, #64]	; 0x40
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	2220      	movs	r2, #32
 8001922:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	2200      	movs	r2, #0
 800192a:	631a      	str	r2, [r3, #48]	; 0x30
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	2200      	movs	r2, #0
 8001930:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001934:	2300      	movs	r3, #0
 8001936:	4618      	mov	r0, r3
 8001938:	3710      	adds	r7, #16
 800193a:	46bd      	mov	sp, r7
 800193c:	bd80      	pop	{r7, pc}
 800193e:	bf00      	nop
 8001940:	000186a0 	.word	0x000186a0
 8001944:	001e847f 	.word	0x001e847f
 8001948:	003d08ff 	.word	0x003d08ff
 800194c:	431bde83 	.word	0x431bde83
 8001950:	10624dd3 	.word	0x10624dd3

08001954 <HAL_I2C_Master_Transmit>:
 8001954:	b580      	push	{r7, lr}
 8001956:	b088      	sub	sp, #32
 8001958:	af02      	add	r7, sp, #8
 800195a:	60f8      	str	r0, [r7, #12]
 800195c:	607a      	str	r2, [r7, #4]
 800195e:	461a      	mov	r2, r3
 8001960:	460b      	mov	r3, r1
 8001962:	817b      	strh	r3, [r7, #10]
 8001964:	4613      	mov	r3, r2
 8001966:	813b      	strh	r3, [r7, #8]
 8001968:	f7ff fbfa 	bl	8001160 <HAL_GetTick>
 800196c:	6178      	str	r0, [r7, #20]
 800196e:	68fb      	ldr	r3, [r7, #12]
 8001970:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001974:	b2db      	uxtb	r3, r3
 8001976:	2b20      	cmp	r3, #32
 8001978:	f040 80e0 	bne.w	8001b3c <HAL_I2C_Master_Transmit+0x1e8>
 800197c:	697b      	ldr	r3, [r7, #20]
 800197e:	9300      	str	r3, [sp, #0]
 8001980:	2319      	movs	r3, #25
 8001982:	2201      	movs	r2, #1
 8001984:	4970      	ldr	r1, [pc, #448]	; (8001b48 <HAL_I2C_Master_Transmit+0x1f4>)
 8001986:	68f8      	ldr	r0, [r7, #12]
 8001988:	f000 fa92 	bl	8001eb0 <I2C_WaitOnFlagUntilTimeout>
 800198c:	4603      	mov	r3, r0
 800198e:	2b00      	cmp	r3, #0
 8001990:	d001      	beq.n	8001996 <HAL_I2C_Master_Transmit+0x42>
 8001992:	2302      	movs	r3, #2
 8001994:	e0d3      	b.n	8001b3e <HAL_I2C_Master_Transmit+0x1ea>
 8001996:	68fb      	ldr	r3, [r7, #12]
 8001998:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800199c:	2b01      	cmp	r3, #1
 800199e:	d101      	bne.n	80019a4 <HAL_I2C_Master_Transmit+0x50>
 80019a0:	2302      	movs	r3, #2
 80019a2:	e0cc      	b.n	8001b3e <HAL_I2C_Master_Transmit+0x1ea>
 80019a4:	68fb      	ldr	r3, [r7, #12]
 80019a6:	2201      	movs	r2, #1
 80019a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80019ac:	68fb      	ldr	r3, [r7, #12]
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	681b      	ldr	r3, [r3, #0]
 80019b2:	f003 0301 	and.w	r3, r3, #1
 80019b6:	2b01      	cmp	r3, #1
 80019b8:	d007      	beq.n	80019ca <HAL_I2C_Master_Transmit+0x76>
 80019ba:	68fb      	ldr	r3, [r7, #12]
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	681a      	ldr	r2, [r3, #0]
 80019c0:	68fb      	ldr	r3, [r7, #12]
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	f042 0201 	orr.w	r2, r2, #1
 80019c8:	601a      	str	r2, [r3, #0]
 80019ca:	68fb      	ldr	r3, [r7, #12]
 80019cc:	681b      	ldr	r3, [r3, #0]
 80019ce:	681a      	ldr	r2, [r3, #0]
 80019d0:	68fb      	ldr	r3, [r7, #12]
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80019d8:	601a      	str	r2, [r3, #0]
 80019da:	68fb      	ldr	r3, [r7, #12]
 80019dc:	2221      	movs	r2, #33	; 0x21
 80019de:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80019e2:	68fb      	ldr	r3, [r7, #12]
 80019e4:	2210      	movs	r2, #16
 80019e6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80019ea:	68fb      	ldr	r3, [r7, #12]
 80019ec:	2200      	movs	r2, #0
 80019ee:	641a      	str	r2, [r3, #64]	; 0x40
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	687a      	ldr	r2, [r7, #4]
 80019f4:	625a      	str	r2, [r3, #36]	; 0x24
 80019f6:	68fb      	ldr	r3, [r7, #12]
 80019f8:	893a      	ldrh	r2, [r7, #8]
 80019fa:	855a      	strh	r2, [r3, #42]	; 0x2a
 80019fc:	68fb      	ldr	r3, [r7, #12]
 80019fe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001a00:	b29a      	uxth	r2, r3
 8001a02:	68fb      	ldr	r3, [r7, #12]
 8001a04:	851a      	strh	r2, [r3, #40]	; 0x28
 8001a06:	68fb      	ldr	r3, [r7, #12]
 8001a08:	4a50      	ldr	r2, [pc, #320]	; (8001b4c <HAL_I2C_Master_Transmit+0x1f8>)
 8001a0a:	62da      	str	r2, [r3, #44]	; 0x2c
 8001a0c:	8979      	ldrh	r1, [r7, #10]
 8001a0e:	697b      	ldr	r3, [r7, #20]
 8001a10:	6a3a      	ldr	r2, [r7, #32]
 8001a12:	68f8      	ldr	r0, [r7, #12]
 8001a14:	f000 f9ca 	bl	8001dac <I2C_MasterRequestWrite>
 8001a18:	4603      	mov	r3, r0
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d001      	beq.n	8001a22 <HAL_I2C_Master_Transmit+0xce>
 8001a1e:	2301      	movs	r3, #1
 8001a20:	e08d      	b.n	8001b3e <HAL_I2C_Master_Transmit+0x1ea>
 8001a22:	2300      	movs	r3, #0
 8001a24:	613b      	str	r3, [r7, #16]
 8001a26:	68fb      	ldr	r3, [r7, #12]
 8001a28:	681b      	ldr	r3, [r3, #0]
 8001a2a:	695b      	ldr	r3, [r3, #20]
 8001a2c:	613b      	str	r3, [r7, #16]
 8001a2e:	68fb      	ldr	r3, [r7, #12]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	699b      	ldr	r3, [r3, #24]
 8001a34:	613b      	str	r3, [r7, #16]
 8001a36:	693b      	ldr	r3, [r7, #16]
 8001a38:	e066      	b.n	8001b08 <HAL_I2C_Master_Transmit+0x1b4>
 8001a3a:	697a      	ldr	r2, [r7, #20]
 8001a3c:	6a39      	ldr	r1, [r7, #32]
 8001a3e:	68f8      	ldr	r0, [r7, #12]
 8001a40:	f000 fb50 	bl	80020e4 <I2C_WaitOnTXEFlagUntilTimeout>
 8001a44:	4603      	mov	r3, r0
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d00d      	beq.n	8001a66 <HAL_I2C_Master_Transmit+0x112>
 8001a4a:	68fb      	ldr	r3, [r7, #12]
 8001a4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a4e:	2b04      	cmp	r3, #4
 8001a50:	d107      	bne.n	8001a62 <HAL_I2C_Master_Transmit+0x10e>
 8001a52:	68fb      	ldr	r3, [r7, #12]
 8001a54:	681b      	ldr	r3, [r3, #0]
 8001a56:	681a      	ldr	r2, [r3, #0]
 8001a58:	68fb      	ldr	r3, [r7, #12]
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a60:	601a      	str	r2, [r3, #0]
 8001a62:	2301      	movs	r3, #1
 8001a64:	e06b      	b.n	8001b3e <HAL_I2C_Master_Transmit+0x1ea>
 8001a66:	68fb      	ldr	r3, [r7, #12]
 8001a68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a6a:	781a      	ldrb	r2, [r3, #0]
 8001a6c:	68fb      	ldr	r3, [r7, #12]
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	611a      	str	r2, [r3, #16]
 8001a72:	68fb      	ldr	r3, [r7, #12]
 8001a74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a76:	1c5a      	adds	r2, r3, #1
 8001a78:	68fb      	ldr	r3, [r7, #12]
 8001a7a:	625a      	str	r2, [r3, #36]	; 0x24
 8001a7c:	68fb      	ldr	r3, [r7, #12]
 8001a7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001a80:	b29b      	uxth	r3, r3
 8001a82:	3b01      	subs	r3, #1
 8001a84:	b29a      	uxth	r2, r3
 8001a86:	68fb      	ldr	r3, [r7, #12]
 8001a88:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001a8a:	68fb      	ldr	r3, [r7, #12]
 8001a8c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001a8e:	3b01      	subs	r3, #1
 8001a90:	b29a      	uxth	r2, r3
 8001a92:	68fb      	ldr	r3, [r7, #12]
 8001a94:	851a      	strh	r2, [r3, #40]	; 0x28
 8001a96:	68fb      	ldr	r3, [r7, #12]
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	695b      	ldr	r3, [r3, #20]
 8001a9c:	f003 0304 	and.w	r3, r3, #4
 8001aa0:	2b04      	cmp	r3, #4
 8001aa2:	d11b      	bne.n	8001adc <HAL_I2C_Master_Transmit+0x188>
 8001aa4:	68fb      	ldr	r3, [r7, #12]
 8001aa6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	d017      	beq.n	8001adc <HAL_I2C_Master_Transmit+0x188>
 8001aac:	68fb      	ldr	r3, [r7, #12]
 8001aae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ab0:	781a      	ldrb	r2, [r3, #0]
 8001ab2:	68fb      	ldr	r3, [r7, #12]
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	611a      	str	r2, [r3, #16]
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001abc:	1c5a      	adds	r2, r3, #1
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	625a      	str	r2, [r3, #36]	; 0x24
 8001ac2:	68fb      	ldr	r3, [r7, #12]
 8001ac4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001ac6:	b29b      	uxth	r3, r3
 8001ac8:	3b01      	subs	r3, #1
 8001aca:	b29a      	uxth	r2, r3
 8001acc:	68fb      	ldr	r3, [r7, #12]
 8001ace:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001ad0:	68fb      	ldr	r3, [r7, #12]
 8001ad2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001ad4:	3b01      	subs	r3, #1
 8001ad6:	b29a      	uxth	r2, r3
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	851a      	strh	r2, [r3, #40]	; 0x28
 8001adc:	697a      	ldr	r2, [r7, #20]
 8001ade:	6a39      	ldr	r1, [r7, #32]
 8001ae0:	68f8      	ldr	r0, [r7, #12]
 8001ae2:	f000 fb47 	bl	8002174 <I2C_WaitOnBTFFlagUntilTimeout>
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	2b00      	cmp	r3, #0
 8001aea:	d00d      	beq.n	8001b08 <HAL_I2C_Master_Transmit+0x1b4>
 8001aec:	68fb      	ldr	r3, [r7, #12]
 8001aee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001af0:	2b04      	cmp	r3, #4
 8001af2:	d107      	bne.n	8001b04 <HAL_I2C_Master_Transmit+0x1b0>
 8001af4:	68fb      	ldr	r3, [r7, #12]
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	681a      	ldr	r2, [r3, #0]
 8001afa:	68fb      	ldr	r3, [r7, #12]
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b02:	601a      	str	r2, [r3, #0]
 8001b04:	2301      	movs	r3, #1
 8001b06:	e01a      	b.n	8001b3e <HAL_I2C_Master_Transmit+0x1ea>
 8001b08:	68fb      	ldr	r3, [r7, #12]
 8001b0a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001b0c:	2b00      	cmp	r3, #0
 8001b0e:	d194      	bne.n	8001a3a <HAL_I2C_Master_Transmit+0xe6>
 8001b10:	68fb      	ldr	r3, [r7, #12]
 8001b12:	681b      	ldr	r3, [r3, #0]
 8001b14:	681a      	ldr	r2, [r3, #0]
 8001b16:	68fb      	ldr	r3, [r7, #12]
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b1e:	601a      	str	r2, [r3, #0]
 8001b20:	68fb      	ldr	r3, [r7, #12]
 8001b22:	2220      	movs	r2, #32
 8001b24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	2200      	movs	r2, #0
 8001b2c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	2200      	movs	r2, #0
 8001b34:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001b38:	2300      	movs	r3, #0
 8001b3a:	e000      	b.n	8001b3e <HAL_I2C_Master_Transmit+0x1ea>
 8001b3c:	2302      	movs	r3, #2
 8001b3e:	4618      	mov	r0, r3
 8001b40:	3718      	adds	r7, #24
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	00100002 	.word	0x00100002
 8001b4c:	ffff0000 	.word	0xffff0000

08001b50 <HAL_I2C_IsDeviceReady>:
 8001b50:	b580      	push	{r7, lr}
 8001b52:	b08a      	sub	sp, #40	; 0x28
 8001b54:	af02      	add	r7, sp, #8
 8001b56:	60f8      	str	r0, [r7, #12]
 8001b58:	607a      	str	r2, [r7, #4]
 8001b5a:	603b      	str	r3, [r7, #0]
 8001b5c:	460b      	mov	r3, r1
 8001b5e:	817b      	strh	r3, [r7, #10]
 8001b60:	f7ff fafe 	bl	8001160 <HAL_GetTick>
 8001b64:	61f8      	str	r0, [r7, #28]
 8001b66:	2300      	movs	r3, #0
 8001b68:	61bb      	str	r3, [r7, #24]
 8001b6a:	68fb      	ldr	r3, [r7, #12]
 8001b6c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001b70:	b2db      	uxtb	r3, r3
 8001b72:	2b20      	cmp	r3, #32
 8001b74:	f040 8111 	bne.w	8001d9a <HAL_I2C_IsDeviceReady+0x24a>
 8001b78:	69fb      	ldr	r3, [r7, #28]
 8001b7a:	9300      	str	r3, [sp, #0]
 8001b7c:	2319      	movs	r3, #25
 8001b7e:	2201      	movs	r2, #1
 8001b80:	4988      	ldr	r1, [pc, #544]	; (8001da4 <HAL_I2C_IsDeviceReady+0x254>)
 8001b82:	68f8      	ldr	r0, [r7, #12]
 8001b84:	f000 f994 	bl	8001eb0 <I2C_WaitOnFlagUntilTimeout>
 8001b88:	4603      	mov	r3, r0
 8001b8a:	2b00      	cmp	r3, #0
 8001b8c:	d001      	beq.n	8001b92 <HAL_I2C_IsDeviceReady+0x42>
 8001b8e:	2302      	movs	r3, #2
 8001b90:	e104      	b.n	8001d9c <HAL_I2C_IsDeviceReady+0x24c>
 8001b92:	68fb      	ldr	r3, [r7, #12]
 8001b94:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001b98:	2b01      	cmp	r3, #1
 8001b9a:	d101      	bne.n	8001ba0 <HAL_I2C_IsDeviceReady+0x50>
 8001b9c:	2302      	movs	r3, #2
 8001b9e:	e0fd      	b.n	8001d9c <HAL_I2C_IsDeviceReady+0x24c>
 8001ba0:	68fb      	ldr	r3, [r7, #12]
 8001ba2:	2201      	movs	r2, #1
 8001ba4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001ba8:	68fb      	ldr	r3, [r7, #12]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	f003 0301 	and.w	r3, r3, #1
 8001bb2:	2b01      	cmp	r3, #1
 8001bb4:	d007      	beq.n	8001bc6 <HAL_I2C_IsDeviceReady+0x76>
 8001bb6:	68fb      	ldr	r3, [r7, #12]
 8001bb8:	681b      	ldr	r3, [r3, #0]
 8001bba:	681a      	ldr	r2, [r3, #0]
 8001bbc:	68fb      	ldr	r3, [r7, #12]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	f042 0201 	orr.w	r2, r2, #1
 8001bc4:	601a      	str	r2, [r3, #0]
 8001bc6:	68fb      	ldr	r3, [r7, #12]
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	681a      	ldr	r2, [r3, #0]
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001bd4:	601a      	str	r2, [r3, #0]
 8001bd6:	68fb      	ldr	r3, [r7, #12]
 8001bd8:	2224      	movs	r2, #36	; 0x24
 8001bda:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	2200      	movs	r2, #0
 8001be2:	641a      	str	r2, [r3, #64]	; 0x40
 8001be4:	68fb      	ldr	r3, [r7, #12]
 8001be6:	4a70      	ldr	r2, [pc, #448]	; (8001da8 <HAL_I2C_IsDeviceReady+0x258>)
 8001be8:	62da      	str	r2, [r3, #44]	; 0x2c
 8001bea:	68fb      	ldr	r3, [r7, #12]
 8001bec:	681b      	ldr	r3, [r3, #0]
 8001bee:	681a      	ldr	r2, [r3, #0]
 8001bf0:	68fb      	ldr	r3, [r7, #12]
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001bf8:	601a      	str	r2, [r3, #0]
 8001bfa:	69fb      	ldr	r3, [r7, #28]
 8001bfc:	9300      	str	r3, [sp, #0]
 8001bfe:	683b      	ldr	r3, [r7, #0]
 8001c00:	2200      	movs	r2, #0
 8001c02:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8001c06:	68f8      	ldr	r0, [r7, #12]
 8001c08:	f000 f952 	bl	8001eb0 <I2C_WaitOnFlagUntilTimeout>
 8001c0c:	4603      	mov	r3, r0
 8001c0e:	2b00      	cmp	r3, #0
 8001c10:	d00d      	beq.n	8001c2e <HAL_I2C_IsDeviceReady+0xde>
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c1c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001c20:	d103      	bne.n	8001c2a <HAL_I2C_IsDeviceReady+0xda>
 8001c22:	68fb      	ldr	r3, [r7, #12]
 8001c24:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c28:	641a      	str	r2, [r3, #64]	; 0x40
 8001c2a:	2303      	movs	r3, #3
 8001c2c:	e0b6      	b.n	8001d9c <HAL_I2C_IsDeviceReady+0x24c>
 8001c2e:	897b      	ldrh	r3, [r7, #10]
 8001c30:	b2db      	uxtb	r3, r3
 8001c32:	461a      	mov	r2, r3
 8001c34:	68fb      	ldr	r3, [r7, #12]
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8001c3c:	611a      	str	r2, [r3, #16]
 8001c3e:	f7ff fa8f 	bl	8001160 <HAL_GetTick>
 8001c42:	61f8      	str	r0, [r7, #28]
 8001c44:	68fb      	ldr	r3, [r7, #12]
 8001c46:	681b      	ldr	r3, [r3, #0]
 8001c48:	695b      	ldr	r3, [r3, #20]
 8001c4a:	f003 0302 	and.w	r3, r3, #2
 8001c4e:	2b02      	cmp	r3, #2
 8001c50:	bf0c      	ite	eq
 8001c52:	2301      	moveq	r3, #1
 8001c54:	2300      	movne	r3, #0
 8001c56:	b2db      	uxtb	r3, r3
 8001c58:	75fb      	strb	r3, [r7, #23]
 8001c5a:	68fb      	ldr	r3, [r7, #12]
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	695b      	ldr	r3, [r3, #20]
 8001c60:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001c64:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001c68:	bf0c      	ite	eq
 8001c6a:	2301      	moveq	r3, #1
 8001c6c:	2300      	movne	r3, #0
 8001c6e:	b2db      	uxtb	r3, r3
 8001c70:	75bb      	strb	r3, [r7, #22]
 8001c72:	e025      	b.n	8001cc0 <HAL_I2C_IsDeviceReady+0x170>
 8001c74:	f7ff fa74 	bl	8001160 <HAL_GetTick>
 8001c78:	4602      	mov	r2, r0
 8001c7a:	69fb      	ldr	r3, [r7, #28]
 8001c7c:	1ad3      	subs	r3, r2, r3
 8001c7e:	683a      	ldr	r2, [r7, #0]
 8001c80:	429a      	cmp	r2, r3
 8001c82:	d302      	bcc.n	8001c8a <HAL_I2C_IsDeviceReady+0x13a>
 8001c84:	683b      	ldr	r3, [r7, #0]
 8001c86:	2b00      	cmp	r3, #0
 8001c88:	d103      	bne.n	8001c92 <HAL_I2C_IsDeviceReady+0x142>
 8001c8a:	68fb      	ldr	r3, [r7, #12]
 8001c8c:	22a0      	movs	r2, #160	; 0xa0
 8001c8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001c92:	68fb      	ldr	r3, [r7, #12]
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	695b      	ldr	r3, [r3, #20]
 8001c98:	f003 0302 	and.w	r3, r3, #2
 8001c9c:	2b02      	cmp	r3, #2
 8001c9e:	bf0c      	ite	eq
 8001ca0:	2301      	moveq	r3, #1
 8001ca2:	2300      	movne	r3, #0
 8001ca4:	b2db      	uxtb	r3, r3
 8001ca6:	75fb      	strb	r3, [r7, #23]
 8001ca8:	68fb      	ldr	r3, [r7, #12]
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	695b      	ldr	r3, [r3, #20]
 8001cae:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001cb2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001cb6:	bf0c      	ite	eq
 8001cb8:	2301      	moveq	r3, #1
 8001cba:	2300      	movne	r3, #0
 8001cbc:	b2db      	uxtb	r3, r3
 8001cbe:	75bb      	strb	r3, [r7, #22]
 8001cc0:	68fb      	ldr	r3, [r7, #12]
 8001cc2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001cc6:	b2db      	uxtb	r3, r3
 8001cc8:	2ba0      	cmp	r3, #160	; 0xa0
 8001cca:	d005      	beq.n	8001cd8 <HAL_I2C_IsDeviceReady+0x188>
 8001ccc:	7dfb      	ldrb	r3, [r7, #23]
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d102      	bne.n	8001cd8 <HAL_I2C_IsDeviceReady+0x188>
 8001cd2:	7dbb      	ldrb	r3, [r7, #22]
 8001cd4:	2b00      	cmp	r3, #0
 8001cd6:	d0cd      	beq.n	8001c74 <HAL_I2C_IsDeviceReady+0x124>
 8001cd8:	68fb      	ldr	r3, [r7, #12]
 8001cda:	2220      	movs	r2, #32
 8001cdc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001ce0:	68fb      	ldr	r3, [r7, #12]
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	695b      	ldr	r3, [r3, #20]
 8001ce6:	f003 0302 	and.w	r3, r3, #2
 8001cea:	2b02      	cmp	r3, #2
 8001cec:	d129      	bne.n	8001d42 <HAL_I2C_IsDeviceReady+0x1f2>
 8001cee:	68fb      	ldr	r3, [r7, #12]
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	681a      	ldr	r2, [r3, #0]
 8001cf4:	68fb      	ldr	r3, [r7, #12]
 8001cf6:	681b      	ldr	r3, [r3, #0]
 8001cf8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001cfc:	601a      	str	r2, [r3, #0]
 8001cfe:	2300      	movs	r3, #0
 8001d00:	613b      	str	r3, [r7, #16]
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	695b      	ldr	r3, [r3, #20]
 8001d08:	613b      	str	r3, [r7, #16]
 8001d0a:	68fb      	ldr	r3, [r7, #12]
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	699b      	ldr	r3, [r3, #24]
 8001d10:	613b      	str	r3, [r7, #16]
 8001d12:	693b      	ldr	r3, [r7, #16]
 8001d14:	69fb      	ldr	r3, [r7, #28]
 8001d16:	9300      	str	r3, [sp, #0]
 8001d18:	2319      	movs	r3, #25
 8001d1a:	2201      	movs	r2, #1
 8001d1c:	4921      	ldr	r1, [pc, #132]	; (8001da4 <HAL_I2C_IsDeviceReady+0x254>)
 8001d1e:	68f8      	ldr	r0, [r7, #12]
 8001d20:	f000 f8c6 	bl	8001eb0 <I2C_WaitOnFlagUntilTimeout>
 8001d24:	4603      	mov	r3, r0
 8001d26:	2b00      	cmp	r3, #0
 8001d28:	d001      	beq.n	8001d2e <HAL_I2C_IsDeviceReady+0x1de>
 8001d2a:	2301      	movs	r3, #1
 8001d2c:	e036      	b.n	8001d9c <HAL_I2C_IsDeviceReady+0x24c>
 8001d2e:	68fb      	ldr	r3, [r7, #12]
 8001d30:	2220      	movs	r2, #32
 8001d32:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d36:	68fb      	ldr	r3, [r7, #12]
 8001d38:	2200      	movs	r2, #0
 8001d3a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d3e:	2300      	movs	r3, #0
 8001d40:	e02c      	b.n	8001d9c <HAL_I2C_IsDeviceReady+0x24c>
 8001d42:	68fb      	ldr	r3, [r7, #12]
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	681a      	ldr	r2, [r3, #0]
 8001d48:	68fb      	ldr	r3, [r7, #12]
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001d50:	601a      	str	r2, [r3, #0]
 8001d52:	68fb      	ldr	r3, [r7, #12]
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8001d5a:	615a      	str	r2, [r3, #20]
 8001d5c:	69fb      	ldr	r3, [r7, #28]
 8001d5e:	9300      	str	r3, [sp, #0]
 8001d60:	2319      	movs	r3, #25
 8001d62:	2201      	movs	r2, #1
 8001d64:	490f      	ldr	r1, [pc, #60]	; (8001da4 <HAL_I2C_IsDeviceReady+0x254>)
 8001d66:	68f8      	ldr	r0, [r7, #12]
 8001d68:	f000 f8a2 	bl	8001eb0 <I2C_WaitOnFlagUntilTimeout>
 8001d6c:	4603      	mov	r3, r0
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	d001      	beq.n	8001d76 <HAL_I2C_IsDeviceReady+0x226>
 8001d72:	2301      	movs	r3, #1
 8001d74:	e012      	b.n	8001d9c <HAL_I2C_IsDeviceReady+0x24c>
 8001d76:	69bb      	ldr	r3, [r7, #24]
 8001d78:	3301      	adds	r3, #1
 8001d7a:	61bb      	str	r3, [r7, #24]
 8001d7c:	69ba      	ldr	r2, [r7, #24]
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	429a      	cmp	r2, r3
 8001d82:	f4ff af32 	bcc.w	8001bea <HAL_I2C_IsDeviceReady+0x9a>
 8001d86:	68fb      	ldr	r3, [r7, #12]
 8001d88:	2220      	movs	r2, #32
 8001d8a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d8e:	68fb      	ldr	r3, [r7, #12]
 8001d90:	2200      	movs	r2, #0
 8001d92:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d96:	2301      	movs	r3, #1
 8001d98:	e000      	b.n	8001d9c <HAL_I2C_IsDeviceReady+0x24c>
 8001d9a:	2302      	movs	r3, #2
 8001d9c:	4618      	mov	r0, r3
 8001d9e:	3720      	adds	r7, #32
 8001da0:	46bd      	mov	sp, r7
 8001da2:	bd80      	pop	{r7, pc}
 8001da4:	00100002 	.word	0x00100002
 8001da8:	ffff0000 	.word	0xffff0000

08001dac <I2C_MasterRequestWrite>:
 8001dac:	b580      	push	{r7, lr}
 8001dae:	b088      	sub	sp, #32
 8001db0:	af02      	add	r7, sp, #8
 8001db2:	60f8      	str	r0, [r7, #12]
 8001db4:	607a      	str	r2, [r7, #4]
 8001db6:	603b      	str	r3, [r7, #0]
 8001db8:	460b      	mov	r3, r1
 8001dba:	817b      	strh	r3, [r7, #10]
 8001dbc:	68fb      	ldr	r3, [r7, #12]
 8001dbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001dc0:	617b      	str	r3, [r7, #20]
 8001dc2:	697b      	ldr	r3, [r7, #20]
 8001dc4:	2b08      	cmp	r3, #8
 8001dc6:	d006      	beq.n	8001dd6 <I2C_MasterRequestWrite+0x2a>
 8001dc8:	697b      	ldr	r3, [r7, #20]
 8001dca:	2b01      	cmp	r3, #1
 8001dcc:	d003      	beq.n	8001dd6 <I2C_MasterRequestWrite+0x2a>
 8001dce:	697b      	ldr	r3, [r7, #20]
 8001dd0:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8001dd4:	d108      	bne.n	8001de8 <I2C_MasterRequestWrite+0x3c>
 8001dd6:	68fb      	ldr	r3, [r7, #12]
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	681a      	ldr	r2, [r3, #0]
 8001ddc:	68fb      	ldr	r3, [r7, #12]
 8001dde:	681b      	ldr	r3, [r3, #0]
 8001de0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001de4:	601a      	str	r2, [r3, #0]
 8001de6:	e00b      	b.n	8001e00 <I2C_MasterRequestWrite+0x54>
 8001de8:	68fb      	ldr	r3, [r7, #12]
 8001dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dec:	2b12      	cmp	r3, #18
 8001dee:	d107      	bne.n	8001e00 <I2C_MasterRequestWrite+0x54>
 8001df0:	68fb      	ldr	r3, [r7, #12]
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	681a      	ldr	r2, [r3, #0]
 8001df6:	68fb      	ldr	r3, [r7, #12]
 8001df8:	681b      	ldr	r3, [r3, #0]
 8001dfa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001dfe:	601a      	str	r2, [r3, #0]
 8001e00:	683b      	ldr	r3, [r7, #0]
 8001e02:	9300      	str	r3, [sp, #0]
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	2200      	movs	r2, #0
 8001e08:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8001e0c:	68f8      	ldr	r0, [r7, #12]
 8001e0e:	f000 f84f 	bl	8001eb0 <I2C_WaitOnFlagUntilTimeout>
 8001e12:	4603      	mov	r3, r0
 8001e14:	2b00      	cmp	r3, #0
 8001e16:	d00d      	beq.n	8001e34 <I2C_MasterRequestWrite+0x88>
 8001e18:	68fb      	ldr	r3, [r7, #12]
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001e22:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001e26:	d103      	bne.n	8001e30 <I2C_MasterRequestWrite+0x84>
 8001e28:	68fb      	ldr	r3, [r7, #12]
 8001e2a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001e2e:	641a      	str	r2, [r3, #64]	; 0x40
 8001e30:	2303      	movs	r3, #3
 8001e32:	e035      	b.n	8001ea0 <I2C_MasterRequestWrite+0xf4>
 8001e34:	68fb      	ldr	r3, [r7, #12]
 8001e36:	691b      	ldr	r3, [r3, #16]
 8001e38:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8001e3c:	d108      	bne.n	8001e50 <I2C_MasterRequestWrite+0xa4>
 8001e3e:	897b      	ldrh	r3, [r7, #10]
 8001e40:	b2db      	uxtb	r3, r3
 8001e42:	461a      	mov	r2, r3
 8001e44:	68fb      	ldr	r3, [r7, #12]
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8001e4c:	611a      	str	r2, [r3, #16]
 8001e4e:	e01b      	b.n	8001e88 <I2C_MasterRequestWrite+0xdc>
 8001e50:	897b      	ldrh	r3, [r7, #10]
 8001e52:	11db      	asrs	r3, r3, #7
 8001e54:	b2db      	uxtb	r3, r3
 8001e56:	f003 0306 	and.w	r3, r3, #6
 8001e5a:	b2db      	uxtb	r3, r3
 8001e5c:	f063 030f 	orn	r3, r3, #15
 8001e60:	b2da      	uxtb	r2, r3
 8001e62:	68fb      	ldr	r3, [r7, #12]
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	611a      	str	r2, [r3, #16]
 8001e68:	683b      	ldr	r3, [r7, #0]
 8001e6a:	687a      	ldr	r2, [r7, #4]
 8001e6c:	490e      	ldr	r1, [pc, #56]	; (8001ea8 <I2C_MasterRequestWrite+0xfc>)
 8001e6e:	68f8      	ldr	r0, [r7, #12]
 8001e70:	f000 f898 	bl	8001fa4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001e74:	4603      	mov	r3, r0
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d001      	beq.n	8001e7e <I2C_MasterRequestWrite+0xd2>
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	e010      	b.n	8001ea0 <I2C_MasterRequestWrite+0xf4>
 8001e7e:	897b      	ldrh	r3, [r7, #10]
 8001e80:	b2da      	uxtb	r2, r3
 8001e82:	68fb      	ldr	r3, [r7, #12]
 8001e84:	681b      	ldr	r3, [r3, #0]
 8001e86:	611a      	str	r2, [r3, #16]
 8001e88:	683b      	ldr	r3, [r7, #0]
 8001e8a:	687a      	ldr	r2, [r7, #4]
 8001e8c:	4907      	ldr	r1, [pc, #28]	; (8001eac <I2C_MasterRequestWrite+0x100>)
 8001e8e:	68f8      	ldr	r0, [r7, #12]
 8001e90:	f000 f888 	bl	8001fa4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001e94:	4603      	mov	r3, r0
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d001      	beq.n	8001e9e <I2C_MasterRequestWrite+0xf2>
 8001e9a:	2301      	movs	r3, #1
 8001e9c:	e000      	b.n	8001ea0 <I2C_MasterRequestWrite+0xf4>
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	4618      	mov	r0, r3
 8001ea2:	3718      	adds	r7, #24
 8001ea4:	46bd      	mov	sp, r7
 8001ea6:	bd80      	pop	{r7, pc}
 8001ea8:	00010008 	.word	0x00010008
 8001eac:	00010002 	.word	0x00010002

08001eb0 <I2C_WaitOnFlagUntilTimeout>:
 8001eb0:	b580      	push	{r7, lr}
 8001eb2:	b084      	sub	sp, #16
 8001eb4:	af00      	add	r7, sp, #0
 8001eb6:	60f8      	str	r0, [r7, #12]
 8001eb8:	60b9      	str	r1, [r7, #8]
 8001eba:	603b      	str	r3, [r7, #0]
 8001ebc:	4613      	mov	r3, r2
 8001ebe:	71fb      	strb	r3, [r7, #7]
 8001ec0:	e048      	b.n	8001f54 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001ec2:	683b      	ldr	r3, [r7, #0]
 8001ec4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ec8:	d044      	beq.n	8001f54 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001eca:	f7ff f949 	bl	8001160 <HAL_GetTick>
 8001ece:	4602      	mov	r2, r0
 8001ed0:	69bb      	ldr	r3, [r7, #24]
 8001ed2:	1ad3      	subs	r3, r2, r3
 8001ed4:	683a      	ldr	r2, [r7, #0]
 8001ed6:	429a      	cmp	r2, r3
 8001ed8:	d302      	bcc.n	8001ee0 <I2C_WaitOnFlagUntilTimeout+0x30>
 8001eda:	683b      	ldr	r3, [r7, #0]
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d139      	bne.n	8001f54 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001ee0:	68bb      	ldr	r3, [r7, #8]
 8001ee2:	0c1b      	lsrs	r3, r3, #16
 8001ee4:	b2db      	uxtb	r3, r3
 8001ee6:	2b01      	cmp	r3, #1
 8001ee8:	d10d      	bne.n	8001f06 <I2C_WaitOnFlagUntilTimeout+0x56>
 8001eea:	68fb      	ldr	r3, [r7, #12]
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	695b      	ldr	r3, [r3, #20]
 8001ef0:	43da      	mvns	r2, r3
 8001ef2:	68bb      	ldr	r3, [r7, #8]
 8001ef4:	4013      	ands	r3, r2
 8001ef6:	b29b      	uxth	r3, r3
 8001ef8:	2b00      	cmp	r3, #0
 8001efa:	bf0c      	ite	eq
 8001efc:	2301      	moveq	r3, #1
 8001efe:	2300      	movne	r3, #0
 8001f00:	b2db      	uxtb	r3, r3
 8001f02:	461a      	mov	r2, r3
 8001f04:	e00c      	b.n	8001f20 <I2C_WaitOnFlagUntilTimeout+0x70>
 8001f06:	68fb      	ldr	r3, [r7, #12]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	699b      	ldr	r3, [r3, #24]
 8001f0c:	43da      	mvns	r2, r3
 8001f0e:	68bb      	ldr	r3, [r7, #8]
 8001f10:	4013      	ands	r3, r2
 8001f12:	b29b      	uxth	r3, r3
 8001f14:	2b00      	cmp	r3, #0
 8001f16:	bf0c      	ite	eq
 8001f18:	2301      	moveq	r3, #1
 8001f1a:	2300      	movne	r3, #0
 8001f1c:	b2db      	uxtb	r3, r3
 8001f1e:	461a      	mov	r2, r3
 8001f20:	79fb      	ldrb	r3, [r7, #7]
 8001f22:	429a      	cmp	r2, r3
 8001f24:	d116      	bne.n	8001f54 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001f26:	68fb      	ldr	r3, [r7, #12]
 8001f28:	2200      	movs	r2, #0
 8001f2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001f2c:	68fb      	ldr	r3, [r7, #12]
 8001f2e:	2220      	movs	r2, #32
 8001f30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001f34:	68fb      	ldr	r3, [r7, #12]
 8001f36:	2200      	movs	r2, #0
 8001f38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f40:	f043 0220 	orr.w	r2, r3, #32
 8001f44:	68fb      	ldr	r3, [r7, #12]
 8001f46:	641a      	str	r2, [r3, #64]	; 0x40
 8001f48:	68fb      	ldr	r3, [r7, #12]
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f50:	2301      	movs	r3, #1
 8001f52:	e023      	b.n	8001f9c <I2C_WaitOnFlagUntilTimeout+0xec>
 8001f54:	68bb      	ldr	r3, [r7, #8]
 8001f56:	0c1b      	lsrs	r3, r3, #16
 8001f58:	b2db      	uxtb	r3, r3
 8001f5a:	2b01      	cmp	r3, #1
 8001f5c:	d10d      	bne.n	8001f7a <I2C_WaitOnFlagUntilTimeout+0xca>
 8001f5e:	68fb      	ldr	r3, [r7, #12]
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	695b      	ldr	r3, [r3, #20]
 8001f64:	43da      	mvns	r2, r3
 8001f66:	68bb      	ldr	r3, [r7, #8]
 8001f68:	4013      	ands	r3, r2
 8001f6a:	b29b      	uxth	r3, r3
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	bf0c      	ite	eq
 8001f70:	2301      	moveq	r3, #1
 8001f72:	2300      	movne	r3, #0
 8001f74:	b2db      	uxtb	r3, r3
 8001f76:	461a      	mov	r2, r3
 8001f78:	e00c      	b.n	8001f94 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8001f7a:	68fb      	ldr	r3, [r7, #12]
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	699b      	ldr	r3, [r3, #24]
 8001f80:	43da      	mvns	r2, r3
 8001f82:	68bb      	ldr	r3, [r7, #8]
 8001f84:	4013      	ands	r3, r2
 8001f86:	b29b      	uxth	r3, r3
 8001f88:	2b00      	cmp	r3, #0
 8001f8a:	bf0c      	ite	eq
 8001f8c:	2301      	moveq	r3, #1
 8001f8e:	2300      	movne	r3, #0
 8001f90:	b2db      	uxtb	r3, r3
 8001f92:	461a      	mov	r2, r3
 8001f94:	79fb      	ldrb	r3, [r7, #7]
 8001f96:	429a      	cmp	r2, r3
 8001f98:	d093      	beq.n	8001ec2 <I2C_WaitOnFlagUntilTimeout+0x12>
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	4618      	mov	r0, r3
 8001f9e:	3710      	adds	r7, #16
 8001fa0:	46bd      	mov	sp, r7
 8001fa2:	bd80      	pop	{r7, pc}

08001fa4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8001fa4:	b580      	push	{r7, lr}
 8001fa6:	b084      	sub	sp, #16
 8001fa8:	af00      	add	r7, sp, #0
 8001faa:	60f8      	str	r0, [r7, #12]
 8001fac:	60b9      	str	r1, [r7, #8]
 8001fae:	607a      	str	r2, [r7, #4]
 8001fb0:	603b      	str	r3, [r7, #0]
 8001fb2:	e071      	b.n	8002098 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001fb4:	68fb      	ldr	r3, [r7, #12]
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	695b      	ldr	r3, [r3, #20]
 8001fba:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001fbe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001fc2:	d123      	bne.n	800200c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8001fc4:	68fb      	ldr	r3, [r7, #12]
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	681a      	ldr	r2, [r3, #0]
 8001fca:	68fb      	ldr	r3, [r7, #12]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001fd2:	601a      	str	r2, [r3, #0]
 8001fd4:	68fb      	ldr	r3, [r7, #12]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8001fdc:	615a      	str	r2, [r3, #20]
 8001fde:	68fb      	ldr	r3, [r7, #12]
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	631a      	str	r2, [r3, #48]	; 0x30
 8001fe4:	68fb      	ldr	r3, [r7, #12]
 8001fe6:	2220      	movs	r2, #32
 8001fe8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001fec:	68fb      	ldr	r3, [r7, #12]
 8001fee:	2200      	movs	r2, #0
 8001ff0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001ff4:	68fb      	ldr	r3, [r7, #12]
 8001ff6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ff8:	f043 0204 	orr.w	r2, r3, #4
 8001ffc:	68fb      	ldr	r3, [r7, #12]
 8001ffe:	641a      	str	r2, [r3, #64]	; 0x40
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	2200      	movs	r2, #0
 8002004:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002008:	2301      	movs	r3, #1
 800200a:	e067      	b.n	80020dc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002012:	d041      	beq.n	8002098 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002014:	f7ff f8a4 	bl	8001160 <HAL_GetTick>
 8002018:	4602      	mov	r2, r0
 800201a:	683b      	ldr	r3, [r7, #0]
 800201c:	1ad3      	subs	r3, r2, r3
 800201e:	687a      	ldr	r2, [r7, #4]
 8002020:	429a      	cmp	r2, r3
 8002022:	d302      	bcc.n	800202a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	2b00      	cmp	r3, #0
 8002028:	d136      	bne.n	8002098 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800202a:	68bb      	ldr	r3, [r7, #8]
 800202c:	0c1b      	lsrs	r3, r3, #16
 800202e:	b2db      	uxtb	r3, r3
 8002030:	2b01      	cmp	r3, #1
 8002032:	d10c      	bne.n	800204e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8002034:	68fb      	ldr	r3, [r7, #12]
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	695b      	ldr	r3, [r3, #20]
 800203a:	43da      	mvns	r2, r3
 800203c:	68bb      	ldr	r3, [r7, #8]
 800203e:	4013      	ands	r3, r2
 8002040:	b29b      	uxth	r3, r3
 8002042:	2b00      	cmp	r3, #0
 8002044:	bf14      	ite	ne
 8002046:	2301      	movne	r3, #1
 8002048:	2300      	moveq	r3, #0
 800204a:	b2db      	uxtb	r3, r3
 800204c:	e00b      	b.n	8002066 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800204e:	68fb      	ldr	r3, [r7, #12]
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	699b      	ldr	r3, [r3, #24]
 8002054:	43da      	mvns	r2, r3
 8002056:	68bb      	ldr	r3, [r7, #8]
 8002058:	4013      	ands	r3, r2
 800205a:	b29b      	uxth	r3, r3
 800205c:	2b00      	cmp	r3, #0
 800205e:	bf14      	ite	ne
 8002060:	2301      	movne	r3, #1
 8002062:	2300      	moveq	r3, #0
 8002064:	b2db      	uxtb	r3, r3
 8002066:	2b00      	cmp	r3, #0
 8002068:	d016      	beq.n	8002098 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800206a:	68fb      	ldr	r3, [r7, #12]
 800206c:	2200      	movs	r2, #0
 800206e:	631a      	str	r2, [r3, #48]	; 0x30
 8002070:	68fb      	ldr	r3, [r7, #12]
 8002072:	2220      	movs	r2, #32
 8002074:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002078:	68fb      	ldr	r3, [r7, #12]
 800207a:	2200      	movs	r2, #0
 800207c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002084:	f043 0220 	orr.w	r2, r3, #32
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	641a      	str	r2, [r3, #64]	; 0x40
 800208c:	68fb      	ldr	r3, [r7, #12]
 800208e:	2200      	movs	r2, #0
 8002090:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002094:	2301      	movs	r3, #1
 8002096:	e021      	b.n	80020dc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002098:	68bb      	ldr	r3, [r7, #8]
 800209a:	0c1b      	lsrs	r3, r3, #16
 800209c:	b2db      	uxtb	r3, r3
 800209e:	2b01      	cmp	r3, #1
 80020a0:	d10c      	bne.n	80020bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80020a2:	68fb      	ldr	r3, [r7, #12]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	695b      	ldr	r3, [r3, #20]
 80020a8:	43da      	mvns	r2, r3
 80020aa:	68bb      	ldr	r3, [r7, #8]
 80020ac:	4013      	ands	r3, r2
 80020ae:	b29b      	uxth	r3, r3
 80020b0:	2b00      	cmp	r3, #0
 80020b2:	bf14      	ite	ne
 80020b4:	2301      	movne	r3, #1
 80020b6:	2300      	moveq	r3, #0
 80020b8:	b2db      	uxtb	r3, r3
 80020ba:	e00b      	b.n	80020d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	699b      	ldr	r3, [r3, #24]
 80020c2:	43da      	mvns	r2, r3
 80020c4:	68bb      	ldr	r3, [r7, #8]
 80020c6:	4013      	ands	r3, r2
 80020c8:	b29b      	uxth	r3, r3
 80020ca:	2b00      	cmp	r3, #0
 80020cc:	bf14      	ite	ne
 80020ce:	2301      	movne	r3, #1
 80020d0:	2300      	moveq	r3, #0
 80020d2:	b2db      	uxtb	r3, r3
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	f47f af6d 	bne.w	8001fb4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80020da:	2300      	movs	r3, #0
 80020dc:	4618      	mov	r0, r3
 80020de:	3710      	adds	r7, #16
 80020e0:	46bd      	mov	sp, r7
 80020e2:	bd80      	pop	{r7, pc}

080020e4 <I2C_WaitOnTXEFlagUntilTimeout>:
 80020e4:	b580      	push	{r7, lr}
 80020e6:	b084      	sub	sp, #16
 80020e8:	af00      	add	r7, sp, #0
 80020ea:	60f8      	str	r0, [r7, #12]
 80020ec:	60b9      	str	r1, [r7, #8]
 80020ee:	607a      	str	r2, [r7, #4]
 80020f0:	e034      	b.n	800215c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80020f2:	68f8      	ldr	r0, [r7, #12]
 80020f4:	f000 f886 	bl	8002204 <I2C_IsAcknowledgeFailed>
 80020f8:	4603      	mov	r3, r0
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d001      	beq.n	8002102 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80020fe:	2301      	movs	r3, #1
 8002100:	e034      	b.n	800216c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8002102:	68bb      	ldr	r3, [r7, #8]
 8002104:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002108:	d028      	beq.n	800215c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800210a:	f7ff f829 	bl	8001160 <HAL_GetTick>
 800210e:	4602      	mov	r2, r0
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	1ad3      	subs	r3, r2, r3
 8002114:	68ba      	ldr	r2, [r7, #8]
 8002116:	429a      	cmp	r2, r3
 8002118:	d302      	bcc.n	8002120 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800211a:	68bb      	ldr	r3, [r7, #8]
 800211c:	2b00      	cmp	r3, #0
 800211e:	d11d      	bne.n	800215c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002120:	68fb      	ldr	r3, [r7, #12]
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	695b      	ldr	r3, [r3, #20]
 8002126:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800212a:	2b80      	cmp	r3, #128	; 0x80
 800212c:	d016      	beq.n	800215c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800212e:	68fb      	ldr	r3, [r7, #12]
 8002130:	2200      	movs	r2, #0
 8002132:	631a      	str	r2, [r3, #48]	; 0x30
 8002134:	68fb      	ldr	r3, [r7, #12]
 8002136:	2220      	movs	r2, #32
 8002138:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800213c:	68fb      	ldr	r3, [r7, #12]
 800213e:	2200      	movs	r2, #0
 8002140:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002144:	68fb      	ldr	r3, [r7, #12]
 8002146:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002148:	f043 0220 	orr.w	r2, r3, #32
 800214c:	68fb      	ldr	r3, [r7, #12]
 800214e:	641a      	str	r2, [r3, #64]	; 0x40
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	2200      	movs	r2, #0
 8002154:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002158:	2301      	movs	r3, #1
 800215a:	e007      	b.n	800216c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800215c:	68fb      	ldr	r3, [r7, #12]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	695b      	ldr	r3, [r3, #20]
 8002162:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002166:	2b80      	cmp	r3, #128	; 0x80
 8002168:	d1c3      	bne.n	80020f2 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800216a:	2300      	movs	r3, #0
 800216c:	4618      	mov	r0, r3
 800216e:	3710      	adds	r7, #16
 8002170:	46bd      	mov	sp, r7
 8002172:	bd80      	pop	{r7, pc}

08002174 <I2C_WaitOnBTFFlagUntilTimeout>:
 8002174:	b580      	push	{r7, lr}
 8002176:	b084      	sub	sp, #16
 8002178:	af00      	add	r7, sp, #0
 800217a:	60f8      	str	r0, [r7, #12]
 800217c:	60b9      	str	r1, [r7, #8]
 800217e:	607a      	str	r2, [r7, #4]
 8002180:	e034      	b.n	80021ec <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002182:	68f8      	ldr	r0, [r7, #12]
 8002184:	f000 f83e 	bl	8002204 <I2C_IsAcknowledgeFailed>
 8002188:	4603      	mov	r3, r0
 800218a:	2b00      	cmp	r3, #0
 800218c:	d001      	beq.n	8002192 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800218e:	2301      	movs	r3, #1
 8002190:	e034      	b.n	80021fc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002192:	68bb      	ldr	r3, [r7, #8]
 8002194:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002198:	d028      	beq.n	80021ec <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800219a:	f7fe ffe1 	bl	8001160 <HAL_GetTick>
 800219e:	4602      	mov	r2, r0
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	1ad3      	subs	r3, r2, r3
 80021a4:	68ba      	ldr	r2, [r7, #8]
 80021a6:	429a      	cmp	r2, r3
 80021a8:	d302      	bcc.n	80021b0 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80021aa:	68bb      	ldr	r3, [r7, #8]
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d11d      	bne.n	80021ec <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80021b0:	68fb      	ldr	r3, [r7, #12]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	695b      	ldr	r3, [r3, #20]
 80021b6:	f003 0304 	and.w	r3, r3, #4
 80021ba:	2b04      	cmp	r3, #4
 80021bc:	d016      	beq.n	80021ec <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80021be:	68fb      	ldr	r3, [r7, #12]
 80021c0:	2200      	movs	r2, #0
 80021c2:	631a      	str	r2, [r3, #48]	; 0x30
 80021c4:	68fb      	ldr	r3, [r7, #12]
 80021c6:	2220      	movs	r2, #32
 80021c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021cc:	68fb      	ldr	r3, [r7, #12]
 80021ce:	2200      	movs	r2, #0
 80021d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021d8:	f043 0220 	orr.w	r2, r3, #32
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	641a      	str	r2, [r3, #64]	; 0x40
 80021e0:	68fb      	ldr	r3, [r7, #12]
 80021e2:	2200      	movs	r2, #0
 80021e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021e8:	2301      	movs	r3, #1
 80021ea:	e007      	b.n	80021fc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80021ec:	68fb      	ldr	r3, [r7, #12]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	695b      	ldr	r3, [r3, #20]
 80021f2:	f003 0304 	and.w	r3, r3, #4
 80021f6:	2b04      	cmp	r3, #4
 80021f8:	d1c3      	bne.n	8002182 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80021fa:	2300      	movs	r3, #0
 80021fc:	4618      	mov	r0, r3
 80021fe:	3710      	adds	r7, #16
 8002200:	46bd      	mov	sp, r7
 8002202:	bd80      	pop	{r7, pc}

08002204 <I2C_IsAcknowledgeFailed>:
 8002204:	b480      	push	{r7}
 8002206:	b083      	sub	sp, #12
 8002208:	af00      	add	r7, sp, #0
 800220a:	6078      	str	r0, [r7, #4]
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	695b      	ldr	r3, [r3, #20]
 8002212:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002216:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800221a:	d11b      	bne.n	8002254 <I2C_IsAcknowledgeFailed+0x50>
 800221c:	687b      	ldr	r3, [r7, #4]
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002224:	615a      	str	r2, [r3, #20]
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	2200      	movs	r2, #0
 800222a:	631a      	str	r2, [r3, #48]	; 0x30
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	2220      	movs	r2, #32
 8002230:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2200      	movs	r2, #0
 8002238:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002240:	f043 0204 	orr.w	r2, r3, #4
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	641a      	str	r2, [r3, #64]	; 0x40
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	2200      	movs	r2, #0
 800224c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002250:	2301      	movs	r3, #1
 8002252:	e000      	b.n	8002256 <I2C_IsAcknowledgeFailed+0x52>
 8002254:	2300      	movs	r3, #0
 8002256:	4618      	mov	r0, r3
 8002258:	370c      	adds	r7, #12
 800225a:	46bd      	mov	sp, r7
 800225c:	bc80      	pop	{r7}
 800225e:	4770      	bx	lr

08002260 <HAL_RCC_OscConfig>:
 8002260:	b580      	push	{r7, lr}
 8002262:	b086      	sub	sp, #24
 8002264:	af00      	add	r7, sp, #0
 8002266:	6078      	str	r0, [r7, #4]
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	2b00      	cmp	r3, #0
 800226c:	d101      	bne.n	8002272 <HAL_RCC_OscConfig+0x12>
 800226e:	2301      	movs	r3, #1
 8002270:	e272      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	f003 0301 	and.w	r3, r3, #1
 800227a:	2b00      	cmp	r3, #0
 800227c:	f000 8087 	beq.w	800238e <HAL_RCC_OscConfig+0x12e>
 8002280:	4b92      	ldr	r3, [pc, #584]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002282:	685b      	ldr	r3, [r3, #4]
 8002284:	f003 030c 	and.w	r3, r3, #12
 8002288:	2b04      	cmp	r3, #4
 800228a:	d00c      	beq.n	80022a6 <HAL_RCC_OscConfig+0x46>
 800228c:	4b8f      	ldr	r3, [pc, #572]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 800228e:	685b      	ldr	r3, [r3, #4]
 8002290:	f003 030c 	and.w	r3, r3, #12
 8002294:	2b08      	cmp	r3, #8
 8002296:	d112      	bne.n	80022be <HAL_RCC_OscConfig+0x5e>
 8002298:	4b8c      	ldr	r3, [pc, #560]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 800229a:	685b      	ldr	r3, [r3, #4]
 800229c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80022a0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80022a4:	d10b      	bne.n	80022be <HAL_RCC_OscConfig+0x5e>
 80022a6:	4b89      	ldr	r3, [pc, #548]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d06c      	beq.n	800238c <HAL_RCC_OscConfig+0x12c>
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	685b      	ldr	r3, [r3, #4]
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d168      	bne.n	800238c <HAL_RCC_OscConfig+0x12c>
 80022ba:	2301      	movs	r3, #1
 80022bc:	e24c      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	685b      	ldr	r3, [r3, #4]
 80022c2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80022c6:	d106      	bne.n	80022d6 <HAL_RCC_OscConfig+0x76>
 80022c8:	4b80      	ldr	r3, [pc, #512]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	4a7f      	ldr	r2, [pc, #508]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80022ce:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022d2:	6013      	str	r3, [r2, #0]
 80022d4:	e02e      	b.n	8002334 <HAL_RCC_OscConfig+0xd4>
 80022d6:	687b      	ldr	r3, [r7, #4]
 80022d8:	685b      	ldr	r3, [r3, #4]
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d10c      	bne.n	80022f8 <HAL_RCC_OscConfig+0x98>
 80022de:	4b7b      	ldr	r3, [pc, #492]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	4a7a      	ldr	r2, [pc, #488]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80022e4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80022e8:	6013      	str	r3, [r2, #0]
 80022ea:	4b78      	ldr	r3, [pc, #480]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	4a77      	ldr	r2, [pc, #476]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80022f0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80022f4:	6013      	str	r3, [r2, #0]
 80022f6:	e01d      	b.n	8002334 <HAL_RCC_OscConfig+0xd4>
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	685b      	ldr	r3, [r3, #4]
 80022fc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002300:	d10c      	bne.n	800231c <HAL_RCC_OscConfig+0xbc>
 8002302:	4b72      	ldr	r3, [pc, #456]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	4a71      	ldr	r2, [pc, #452]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002308:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800230c:	6013      	str	r3, [r2, #0]
 800230e:	4b6f      	ldr	r3, [pc, #444]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4a6e      	ldr	r2, [pc, #440]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002314:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002318:	6013      	str	r3, [r2, #0]
 800231a:	e00b      	b.n	8002334 <HAL_RCC_OscConfig+0xd4>
 800231c:	4b6b      	ldr	r3, [pc, #428]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	4a6a      	ldr	r2, [pc, #424]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002322:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002326:	6013      	str	r3, [r2, #0]
 8002328:	4b68      	ldr	r3, [pc, #416]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	4a67      	ldr	r2, [pc, #412]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 800232e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002332:	6013      	str	r3, [r2, #0]
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	685b      	ldr	r3, [r3, #4]
 8002338:	2b00      	cmp	r3, #0
 800233a:	d013      	beq.n	8002364 <HAL_RCC_OscConfig+0x104>
 800233c:	f7fe ff10 	bl	8001160 <HAL_GetTick>
 8002340:	6138      	str	r0, [r7, #16]
 8002342:	e008      	b.n	8002356 <HAL_RCC_OscConfig+0xf6>
 8002344:	f7fe ff0c 	bl	8001160 <HAL_GetTick>
 8002348:	4602      	mov	r2, r0
 800234a:	693b      	ldr	r3, [r7, #16]
 800234c:	1ad3      	subs	r3, r2, r3
 800234e:	2b64      	cmp	r3, #100	; 0x64
 8002350:	d901      	bls.n	8002356 <HAL_RCC_OscConfig+0xf6>
 8002352:	2303      	movs	r3, #3
 8002354:	e200      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002356:	4b5d      	ldr	r3, [pc, #372]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800235e:	2b00      	cmp	r3, #0
 8002360:	d0f0      	beq.n	8002344 <HAL_RCC_OscConfig+0xe4>
 8002362:	e014      	b.n	800238e <HAL_RCC_OscConfig+0x12e>
 8002364:	f7fe fefc 	bl	8001160 <HAL_GetTick>
 8002368:	6138      	str	r0, [r7, #16]
 800236a:	e008      	b.n	800237e <HAL_RCC_OscConfig+0x11e>
 800236c:	f7fe fef8 	bl	8001160 <HAL_GetTick>
 8002370:	4602      	mov	r2, r0
 8002372:	693b      	ldr	r3, [r7, #16]
 8002374:	1ad3      	subs	r3, r2, r3
 8002376:	2b64      	cmp	r3, #100	; 0x64
 8002378:	d901      	bls.n	800237e <HAL_RCC_OscConfig+0x11e>
 800237a:	2303      	movs	r3, #3
 800237c:	e1ec      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 800237e:	4b53      	ldr	r3, [pc, #332]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002386:	2b00      	cmp	r3, #0
 8002388:	d1f0      	bne.n	800236c <HAL_RCC_OscConfig+0x10c>
 800238a:	e000      	b.n	800238e <HAL_RCC_OscConfig+0x12e>
 800238c:	bf00      	nop
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	f003 0302 	and.w	r3, r3, #2
 8002396:	2b00      	cmp	r3, #0
 8002398:	d063      	beq.n	8002462 <HAL_RCC_OscConfig+0x202>
 800239a:	4b4c      	ldr	r3, [pc, #304]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 800239c:	685b      	ldr	r3, [r3, #4]
 800239e:	f003 030c 	and.w	r3, r3, #12
 80023a2:	2b00      	cmp	r3, #0
 80023a4:	d00b      	beq.n	80023be <HAL_RCC_OscConfig+0x15e>
 80023a6:	4b49      	ldr	r3, [pc, #292]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80023a8:	685b      	ldr	r3, [r3, #4]
 80023aa:	f003 030c 	and.w	r3, r3, #12
 80023ae:	2b08      	cmp	r3, #8
 80023b0:	d11c      	bne.n	80023ec <HAL_RCC_OscConfig+0x18c>
 80023b2:	4b46      	ldr	r3, [pc, #280]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80023b4:	685b      	ldr	r3, [r3, #4]
 80023b6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	d116      	bne.n	80023ec <HAL_RCC_OscConfig+0x18c>
 80023be:	4b43      	ldr	r3, [pc, #268]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80023c0:	681b      	ldr	r3, [r3, #0]
 80023c2:	f003 0302 	and.w	r3, r3, #2
 80023c6:	2b00      	cmp	r3, #0
 80023c8:	d005      	beq.n	80023d6 <HAL_RCC_OscConfig+0x176>
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	691b      	ldr	r3, [r3, #16]
 80023ce:	2b01      	cmp	r3, #1
 80023d0:	d001      	beq.n	80023d6 <HAL_RCC_OscConfig+0x176>
 80023d2:	2301      	movs	r3, #1
 80023d4:	e1c0      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 80023d6:	4b3d      	ldr	r3, [pc, #244]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	695b      	ldr	r3, [r3, #20]
 80023e2:	00db      	lsls	r3, r3, #3
 80023e4:	4939      	ldr	r1, [pc, #228]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 80023e6:	4313      	orrs	r3, r2
 80023e8:	600b      	str	r3, [r1, #0]
 80023ea:	e03a      	b.n	8002462 <HAL_RCC_OscConfig+0x202>
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	691b      	ldr	r3, [r3, #16]
 80023f0:	2b00      	cmp	r3, #0
 80023f2:	d020      	beq.n	8002436 <HAL_RCC_OscConfig+0x1d6>
 80023f4:	4b36      	ldr	r3, [pc, #216]	; (80024d0 <HAL_RCC_OscConfig+0x270>)
 80023f6:	2201      	movs	r2, #1
 80023f8:	601a      	str	r2, [r3, #0]
 80023fa:	f7fe feb1 	bl	8001160 <HAL_GetTick>
 80023fe:	6138      	str	r0, [r7, #16]
 8002400:	e008      	b.n	8002414 <HAL_RCC_OscConfig+0x1b4>
 8002402:	f7fe fead 	bl	8001160 <HAL_GetTick>
 8002406:	4602      	mov	r2, r0
 8002408:	693b      	ldr	r3, [r7, #16]
 800240a:	1ad3      	subs	r3, r2, r3
 800240c:	2b02      	cmp	r3, #2
 800240e:	d901      	bls.n	8002414 <HAL_RCC_OscConfig+0x1b4>
 8002410:	2303      	movs	r3, #3
 8002412:	e1a1      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002414:	4b2d      	ldr	r3, [pc, #180]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	f003 0302 	and.w	r3, r3, #2
 800241c:	2b00      	cmp	r3, #0
 800241e:	d0f0      	beq.n	8002402 <HAL_RCC_OscConfig+0x1a2>
 8002420:	4b2a      	ldr	r3, [pc, #168]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	695b      	ldr	r3, [r3, #20]
 800242c:	00db      	lsls	r3, r3, #3
 800242e:	4927      	ldr	r1, [pc, #156]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002430:	4313      	orrs	r3, r2
 8002432:	600b      	str	r3, [r1, #0]
 8002434:	e015      	b.n	8002462 <HAL_RCC_OscConfig+0x202>
 8002436:	4b26      	ldr	r3, [pc, #152]	; (80024d0 <HAL_RCC_OscConfig+0x270>)
 8002438:	2200      	movs	r2, #0
 800243a:	601a      	str	r2, [r3, #0]
 800243c:	f7fe fe90 	bl	8001160 <HAL_GetTick>
 8002440:	6138      	str	r0, [r7, #16]
 8002442:	e008      	b.n	8002456 <HAL_RCC_OscConfig+0x1f6>
 8002444:	f7fe fe8c 	bl	8001160 <HAL_GetTick>
 8002448:	4602      	mov	r2, r0
 800244a:	693b      	ldr	r3, [r7, #16]
 800244c:	1ad3      	subs	r3, r2, r3
 800244e:	2b02      	cmp	r3, #2
 8002450:	d901      	bls.n	8002456 <HAL_RCC_OscConfig+0x1f6>
 8002452:	2303      	movs	r3, #3
 8002454:	e180      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002456:	4b1d      	ldr	r3, [pc, #116]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	f003 0302 	and.w	r3, r3, #2
 800245e:	2b00      	cmp	r3, #0
 8002460:	d1f0      	bne.n	8002444 <HAL_RCC_OscConfig+0x1e4>
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	f003 0308 	and.w	r3, r3, #8
 800246a:	2b00      	cmp	r3, #0
 800246c:	d03a      	beq.n	80024e4 <HAL_RCC_OscConfig+0x284>
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	699b      	ldr	r3, [r3, #24]
 8002472:	2b00      	cmp	r3, #0
 8002474:	d019      	beq.n	80024aa <HAL_RCC_OscConfig+0x24a>
 8002476:	4b17      	ldr	r3, [pc, #92]	; (80024d4 <HAL_RCC_OscConfig+0x274>)
 8002478:	2201      	movs	r2, #1
 800247a:	601a      	str	r2, [r3, #0]
 800247c:	f7fe fe70 	bl	8001160 <HAL_GetTick>
 8002480:	6138      	str	r0, [r7, #16]
 8002482:	e008      	b.n	8002496 <HAL_RCC_OscConfig+0x236>
 8002484:	f7fe fe6c 	bl	8001160 <HAL_GetTick>
 8002488:	4602      	mov	r2, r0
 800248a:	693b      	ldr	r3, [r7, #16]
 800248c:	1ad3      	subs	r3, r2, r3
 800248e:	2b02      	cmp	r3, #2
 8002490:	d901      	bls.n	8002496 <HAL_RCC_OscConfig+0x236>
 8002492:	2303      	movs	r3, #3
 8002494:	e160      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002496:	4b0d      	ldr	r3, [pc, #52]	; (80024cc <HAL_RCC_OscConfig+0x26c>)
 8002498:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800249a:	f003 0302 	and.w	r3, r3, #2
 800249e:	2b00      	cmp	r3, #0
 80024a0:	d0f0      	beq.n	8002484 <HAL_RCC_OscConfig+0x224>
 80024a2:	2001      	movs	r0, #1
 80024a4:	f000 fafe 	bl	8002aa4 <RCC_Delay>
 80024a8:	e01c      	b.n	80024e4 <HAL_RCC_OscConfig+0x284>
 80024aa:	4b0a      	ldr	r3, [pc, #40]	; (80024d4 <HAL_RCC_OscConfig+0x274>)
 80024ac:	2200      	movs	r2, #0
 80024ae:	601a      	str	r2, [r3, #0]
 80024b0:	f7fe fe56 	bl	8001160 <HAL_GetTick>
 80024b4:	6138      	str	r0, [r7, #16]
 80024b6:	e00f      	b.n	80024d8 <HAL_RCC_OscConfig+0x278>
 80024b8:	f7fe fe52 	bl	8001160 <HAL_GetTick>
 80024bc:	4602      	mov	r2, r0
 80024be:	693b      	ldr	r3, [r7, #16]
 80024c0:	1ad3      	subs	r3, r2, r3
 80024c2:	2b02      	cmp	r3, #2
 80024c4:	d908      	bls.n	80024d8 <HAL_RCC_OscConfig+0x278>
 80024c6:	2303      	movs	r3, #3
 80024c8:	e146      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 80024ca:	bf00      	nop
 80024cc:	40021000 	.word	0x40021000
 80024d0:	42420000 	.word	0x42420000
 80024d4:	42420480 	.word	0x42420480
 80024d8:	4b92      	ldr	r3, [pc, #584]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80024da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024dc:	f003 0302 	and.w	r3, r3, #2
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	d1e9      	bne.n	80024b8 <HAL_RCC_OscConfig+0x258>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	f003 0304 	and.w	r3, r3, #4
 80024ec:	2b00      	cmp	r3, #0
 80024ee:	f000 80a6 	beq.w	800263e <HAL_RCC_OscConfig+0x3de>
 80024f2:	2300      	movs	r3, #0
 80024f4:	75fb      	strb	r3, [r7, #23]
 80024f6:	4b8b      	ldr	r3, [pc, #556]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80024f8:	69db      	ldr	r3, [r3, #28]
 80024fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d10d      	bne.n	800251e <HAL_RCC_OscConfig+0x2be>
 8002502:	4b88      	ldr	r3, [pc, #544]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002504:	69db      	ldr	r3, [r3, #28]
 8002506:	4a87      	ldr	r2, [pc, #540]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002508:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800250c:	61d3      	str	r3, [r2, #28]
 800250e:	4b85      	ldr	r3, [pc, #532]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002510:	69db      	ldr	r3, [r3, #28]
 8002512:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002516:	60bb      	str	r3, [r7, #8]
 8002518:	68bb      	ldr	r3, [r7, #8]
 800251a:	2301      	movs	r3, #1
 800251c:	75fb      	strb	r3, [r7, #23]
 800251e:	4b82      	ldr	r3, [pc, #520]	; (8002728 <HAL_RCC_OscConfig+0x4c8>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002526:	2b00      	cmp	r3, #0
 8002528:	d118      	bne.n	800255c <HAL_RCC_OscConfig+0x2fc>
 800252a:	4b7f      	ldr	r3, [pc, #508]	; (8002728 <HAL_RCC_OscConfig+0x4c8>)
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	4a7e      	ldr	r2, [pc, #504]	; (8002728 <HAL_RCC_OscConfig+0x4c8>)
 8002530:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002534:	6013      	str	r3, [r2, #0]
 8002536:	f7fe fe13 	bl	8001160 <HAL_GetTick>
 800253a:	6138      	str	r0, [r7, #16]
 800253c:	e008      	b.n	8002550 <HAL_RCC_OscConfig+0x2f0>
 800253e:	f7fe fe0f 	bl	8001160 <HAL_GetTick>
 8002542:	4602      	mov	r2, r0
 8002544:	693b      	ldr	r3, [r7, #16]
 8002546:	1ad3      	subs	r3, r2, r3
 8002548:	2b64      	cmp	r3, #100	; 0x64
 800254a:	d901      	bls.n	8002550 <HAL_RCC_OscConfig+0x2f0>
 800254c:	2303      	movs	r3, #3
 800254e:	e103      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002550:	4b75      	ldr	r3, [pc, #468]	; (8002728 <HAL_RCC_OscConfig+0x4c8>)
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002558:	2b00      	cmp	r3, #0
 800255a:	d0f0      	beq.n	800253e <HAL_RCC_OscConfig+0x2de>
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	68db      	ldr	r3, [r3, #12]
 8002560:	2b01      	cmp	r3, #1
 8002562:	d106      	bne.n	8002572 <HAL_RCC_OscConfig+0x312>
 8002564:	4b6f      	ldr	r3, [pc, #444]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002566:	6a1b      	ldr	r3, [r3, #32]
 8002568:	4a6e      	ldr	r2, [pc, #440]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 800256a:	f043 0301 	orr.w	r3, r3, #1
 800256e:	6213      	str	r3, [r2, #32]
 8002570:	e02d      	b.n	80025ce <HAL_RCC_OscConfig+0x36e>
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	68db      	ldr	r3, [r3, #12]
 8002576:	2b00      	cmp	r3, #0
 8002578:	d10c      	bne.n	8002594 <HAL_RCC_OscConfig+0x334>
 800257a:	4b6a      	ldr	r3, [pc, #424]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 800257c:	6a1b      	ldr	r3, [r3, #32]
 800257e:	4a69      	ldr	r2, [pc, #420]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002580:	f023 0301 	bic.w	r3, r3, #1
 8002584:	6213      	str	r3, [r2, #32]
 8002586:	4b67      	ldr	r3, [pc, #412]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002588:	6a1b      	ldr	r3, [r3, #32]
 800258a:	4a66      	ldr	r2, [pc, #408]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 800258c:	f023 0304 	bic.w	r3, r3, #4
 8002590:	6213      	str	r3, [r2, #32]
 8002592:	e01c      	b.n	80025ce <HAL_RCC_OscConfig+0x36e>
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	68db      	ldr	r3, [r3, #12]
 8002598:	2b05      	cmp	r3, #5
 800259a:	d10c      	bne.n	80025b6 <HAL_RCC_OscConfig+0x356>
 800259c:	4b61      	ldr	r3, [pc, #388]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 800259e:	6a1b      	ldr	r3, [r3, #32]
 80025a0:	4a60      	ldr	r2, [pc, #384]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025a2:	f043 0304 	orr.w	r3, r3, #4
 80025a6:	6213      	str	r3, [r2, #32]
 80025a8:	4b5e      	ldr	r3, [pc, #376]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025aa:	6a1b      	ldr	r3, [r3, #32]
 80025ac:	4a5d      	ldr	r2, [pc, #372]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025ae:	f043 0301 	orr.w	r3, r3, #1
 80025b2:	6213      	str	r3, [r2, #32]
 80025b4:	e00b      	b.n	80025ce <HAL_RCC_OscConfig+0x36e>
 80025b6:	4b5b      	ldr	r3, [pc, #364]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025b8:	6a1b      	ldr	r3, [r3, #32]
 80025ba:	4a5a      	ldr	r2, [pc, #360]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025bc:	f023 0301 	bic.w	r3, r3, #1
 80025c0:	6213      	str	r3, [r2, #32]
 80025c2:	4b58      	ldr	r3, [pc, #352]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025c4:	6a1b      	ldr	r3, [r3, #32]
 80025c6:	4a57      	ldr	r2, [pc, #348]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025c8:	f023 0304 	bic.w	r3, r3, #4
 80025cc:	6213      	str	r3, [r2, #32]
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	68db      	ldr	r3, [r3, #12]
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d015      	beq.n	8002602 <HAL_RCC_OscConfig+0x3a2>
 80025d6:	f7fe fdc3 	bl	8001160 <HAL_GetTick>
 80025da:	6138      	str	r0, [r7, #16]
 80025dc:	e00a      	b.n	80025f4 <HAL_RCC_OscConfig+0x394>
 80025de:	f7fe fdbf 	bl	8001160 <HAL_GetTick>
 80025e2:	4602      	mov	r2, r0
 80025e4:	693b      	ldr	r3, [r7, #16]
 80025e6:	1ad3      	subs	r3, r2, r3
 80025e8:	f241 3288 	movw	r2, #5000	; 0x1388
 80025ec:	4293      	cmp	r3, r2
 80025ee:	d901      	bls.n	80025f4 <HAL_RCC_OscConfig+0x394>
 80025f0:	2303      	movs	r3, #3
 80025f2:	e0b1      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 80025f4:	4b4b      	ldr	r3, [pc, #300]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80025f6:	6a1b      	ldr	r3, [r3, #32]
 80025f8:	f003 0302 	and.w	r3, r3, #2
 80025fc:	2b00      	cmp	r3, #0
 80025fe:	d0ee      	beq.n	80025de <HAL_RCC_OscConfig+0x37e>
 8002600:	e014      	b.n	800262c <HAL_RCC_OscConfig+0x3cc>
 8002602:	f7fe fdad 	bl	8001160 <HAL_GetTick>
 8002606:	6138      	str	r0, [r7, #16]
 8002608:	e00a      	b.n	8002620 <HAL_RCC_OscConfig+0x3c0>
 800260a:	f7fe fda9 	bl	8001160 <HAL_GetTick>
 800260e:	4602      	mov	r2, r0
 8002610:	693b      	ldr	r3, [r7, #16]
 8002612:	1ad3      	subs	r3, r2, r3
 8002614:	f241 3288 	movw	r2, #5000	; 0x1388
 8002618:	4293      	cmp	r3, r2
 800261a:	d901      	bls.n	8002620 <HAL_RCC_OscConfig+0x3c0>
 800261c:	2303      	movs	r3, #3
 800261e:	e09b      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002620:	4b40      	ldr	r3, [pc, #256]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002622:	6a1b      	ldr	r3, [r3, #32]
 8002624:	f003 0302 	and.w	r3, r3, #2
 8002628:	2b00      	cmp	r3, #0
 800262a:	d1ee      	bne.n	800260a <HAL_RCC_OscConfig+0x3aa>
 800262c:	7dfb      	ldrb	r3, [r7, #23]
 800262e:	2b01      	cmp	r3, #1
 8002630:	d105      	bne.n	800263e <HAL_RCC_OscConfig+0x3de>
 8002632:	4b3c      	ldr	r3, [pc, #240]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002634:	69db      	ldr	r3, [r3, #28]
 8002636:	4a3b      	ldr	r2, [pc, #236]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002638:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800263c:	61d3      	str	r3, [r2, #28]
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	69db      	ldr	r3, [r3, #28]
 8002642:	2b00      	cmp	r3, #0
 8002644:	f000 8087 	beq.w	8002756 <HAL_RCC_OscConfig+0x4f6>
 8002648:	4b36      	ldr	r3, [pc, #216]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 800264a:	685b      	ldr	r3, [r3, #4]
 800264c:	f003 030c 	and.w	r3, r3, #12
 8002650:	2b08      	cmp	r3, #8
 8002652:	d061      	beq.n	8002718 <HAL_RCC_OscConfig+0x4b8>
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	69db      	ldr	r3, [r3, #28]
 8002658:	2b02      	cmp	r3, #2
 800265a:	d146      	bne.n	80026ea <HAL_RCC_OscConfig+0x48a>
 800265c:	4b33      	ldr	r3, [pc, #204]	; (800272c <HAL_RCC_OscConfig+0x4cc>)
 800265e:	2200      	movs	r2, #0
 8002660:	601a      	str	r2, [r3, #0]
 8002662:	f7fe fd7d 	bl	8001160 <HAL_GetTick>
 8002666:	6138      	str	r0, [r7, #16]
 8002668:	e008      	b.n	800267c <HAL_RCC_OscConfig+0x41c>
 800266a:	f7fe fd79 	bl	8001160 <HAL_GetTick>
 800266e:	4602      	mov	r2, r0
 8002670:	693b      	ldr	r3, [r7, #16]
 8002672:	1ad3      	subs	r3, r2, r3
 8002674:	2b02      	cmp	r3, #2
 8002676:	d901      	bls.n	800267c <HAL_RCC_OscConfig+0x41c>
 8002678:	2303      	movs	r3, #3
 800267a:	e06d      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 800267c:	4b29      	ldr	r3, [pc, #164]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 800267e:	681b      	ldr	r3, [r3, #0]
 8002680:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002684:	2b00      	cmp	r3, #0
 8002686:	d1f0      	bne.n	800266a <HAL_RCC_OscConfig+0x40a>
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	6a1b      	ldr	r3, [r3, #32]
 800268c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002690:	d108      	bne.n	80026a4 <HAL_RCC_OscConfig+0x444>
 8002692:	4b24      	ldr	r3, [pc, #144]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 8002694:	685b      	ldr	r3, [r3, #4]
 8002696:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	689b      	ldr	r3, [r3, #8]
 800269e:	4921      	ldr	r1, [pc, #132]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80026a0:	4313      	orrs	r3, r2
 80026a2:	604b      	str	r3, [r1, #4]
 80026a4:	4b1f      	ldr	r3, [pc, #124]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80026a6:	685b      	ldr	r3, [r3, #4]
 80026a8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	6a19      	ldr	r1, [r3, #32]
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026b4:	430b      	orrs	r3, r1
 80026b6:	491b      	ldr	r1, [pc, #108]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80026b8:	4313      	orrs	r3, r2
 80026ba:	604b      	str	r3, [r1, #4]
 80026bc:	4b1b      	ldr	r3, [pc, #108]	; (800272c <HAL_RCC_OscConfig+0x4cc>)
 80026be:	2201      	movs	r2, #1
 80026c0:	601a      	str	r2, [r3, #0]
 80026c2:	f7fe fd4d 	bl	8001160 <HAL_GetTick>
 80026c6:	6138      	str	r0, [r7, #16]
 80026c8:	e008      	b.n	80026dc <HAL_RCC_OscConfig+0x47c>
 80026ca:	f7fe fd49 	bl	8001160 <HAL_GetTick>
 80026ce:	4602      	mov	r2, r0
 80026d0:	693b      	ldr	r3, [r7, #16]
 80026d2:	1ad3      	subs	r3, r2, r3
 80026d4:	2b02      	cmp	r3, #2
 80026d6:	d901      	bls.n	80026dc <HAL_RCC_OscConfig+0x47c>
 80026d8:	2303      	movs	r3, #3
 80026da:	e03d      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 80026dc:	4b11      	ldr	r3, [pc, #68]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d0f0      	beq.n	80026ca <HAL_RCC_OscConfig+0x46a>
 80026e8:	e035      	b.n	8002756 <HAL_RCC_OscConfig+0x4f6>
 80026ea:	4b10      	ldr	r3, [pc, #64]	; (800272c <HAL_RCC_OscConfig+0x4cc>)
 80026ec:	2200      	movs	r2, #0
 80026ee:	601a      	str	r2, [r3, #0]
 80026f0:	f7fe fd36 	bl	8001160 <HAL_GetTick>
 80026f4:	6138      	str	r0, [r7, #16]
 80026f6:	e008      	b.n	800270a <HAL_RCC_OscConfig+0x4aa>
 80026f8:	f7fe fd32 	bl	8001160 <HAL_GetTick>
 80026fc:	4602      	mov	r2, r0
 80026fe:	693b      	ldr	r3, [r7, #16]
 8002700:	1ad3      	subs	r3, r2, r3
 8002702:	2b02      	cmp	r3, #2
 8002704:	d901      	bls.n	800270a <HAL_RCC_OscConfig+0x4aa>
 8002706:	2303      	movs	r3, #3
 8002708:	e026      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 800270a:	4b06      	ldr	r3, [pc, #24]	; (8002724 <HAL_RCC_OscConfig+0x4c4>)
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002712:	2b00      	cmp	r3, #0
 8002714:	d1f0      	bne.n	80026f8 <HAL_RCC_OscConfig+0x498>
 8002716:	e01e      	b.n	8002756 <HAL_RCC_OscConfig+0x4f6>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	69db      	ldr	r3, [r3, #28]
 800271c:	2b01      	cmp	r3, #1
 800271e:	d107      	bne.n	8002730 <HAL_RCC_OscConfig+0x4d0>
 8002720:	2301      	movs	r3, #1
 8002722:	e019      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002724:	40021000 	.word	0x40021000
 8002728:	40007000 	.word	0x40007000
 800272c:	42420060 	.word	0x42420060
 8002730:	4b0b      	ldr	r3, [pc, #44]	; (8002760 <HAL_RCC_OscConfig+0x500>)
 8002732:	685b      	ldr	r3, [r3, #4]
 8002734:	60fb      	str	r3, [r7, #12]
 8002736:	68fb      	ldr	r3, [r7, #12]
 8002738:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	6a1b      	ldr	r3, [r3, #32]
 8002740:	429a      	cmp	r2, r3
 8002742:	d106      	bne.n	8002752 <HAL_RCC_OscConfig+0x4f2>
 8002744:	68fb      	ldr	r3, [r7, #12]
 8002746:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800274e:	429a      	cmp	r2, r3
 8002750:	d001      	beq.n	8002756 <HAL_RCC_OscConfig+0x4f6>
 8002752:	2301      	movs	r3, #1
 8002754:	e000      	b.n	8002758 <HAL_RCC_OscConfig+0x4f8>
 8002756:	2300      	movs	r3, #0
 8002758:	4618      	mov	r0, r3
 800275a:	3718      	adds	r7, #24
 800275c:	46bd      	mov	sp, r7
 800275e:	bd80      	pop	{r7, pc}
 8002760:	40021000 	.word	0x40021000

08002764 <HAL_RCC_ClockConfig>:
 8002764:	b580      	push	{r7, lr}
 8002766:	b084      	sub	sp, #16
 8002768:	af00      	add	r7, sp, #0
 800276a:	6078      	str	r0, [r7, #4]
 800276c:	6039      	str	r1, [r7, #0]
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	2b00      	cmp	r3, #0
 8002772:	d101      	bne.n	8002778 <HAL_RCC_ClockConfig+0x14>
 8002774:	2301      	movs	r3, #1
 8002776:	e0d0      	b.n	800291a <HAL_RCC_ClockConfig+0x1b6>
 8002778:	4b6a      	ldr	r3, [pc, #424]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	f003 0307 	and.w	r3, r3, #7
 8002780:	683a      	ldr	r2, [r7, #0]
 8002782:	429a      	cmp	r2, r3
 8002784:	d910      	bls.n	80027a8 <HAL_RCC_ClockConfig+0x44>
 8002786:	4b67      	ldr	r3, [pc, #412]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	f023 0207 	bic.w	r2, r3, #7
 800278e:	4965      	ldr	r1, [pc, #404]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 8002790:	683b      	ldr	r3, [r7, #0]
 8002792:	4313      	orrs	r3, r2
 8002794:	600b      	str	r3, [r1, #0]
 8002796:	4b63      	ldr	r3, [pc, #396]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	f003 0307 	and.w	r3, r3, #7
 800279e:	683a      	ldr	r2, [r7, #0]
 80027a0:	429a      	cmp	r2, r3
 80027a2:	d001      	beq.n	80027a8 <HAL_RCC_ClockConfig+0x44>
 80027a4:	2301      	movs	r3, #1
 80027a6:	e0b8      	b.n	800291a <HAL_RCC_ClockConfig+0x1b6>
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	681b      	ldr	r3, [r3, #0]
 80027ac:	f003 0302 	and.w	r3, r3, #2
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	d020      	beq.n	80027f6 <HAL_RCC_ClockConfig+0x92>
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	f003 0304 	and.w	r3, r3, #4
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d005      	beq.n	80027cc <HAL_RCC_ClockConfig+0x68>
 80027c0:	4b59      	ldr	r3, [pc, #356]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80027c2:	685b      	ldr	r3, [r3, #4]
 80027c4:	4a58      	ldr	r2, [pc, #352]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80027c6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80027ca:	6053      	str	r3, [r2, #4]
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	f003 0308 	and.w	r3, r3, #8
 80027d4:	2b00      	cmp	r3, #0
 80027d6:	d005      	beq.n	80027e4 <HAL_RCC_ClockConfig+0x80>
 80027d8:	4b53      	ldr	r3, [pc, #332]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80027da:	685b      	ldr	r3, [r3, #4]
 80027dc:	4a52      	ldr	r2, [pc, #328]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80027de:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80027e2:	6053      	str	r3, [r2, #4]
 80027e4:	4b50      	ldr	r3, [pc, #320]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80027e6:	685b      	ldr	r3, [r3, #4]
 80027e8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	689b      	ldr	r3, [r3, #8]
 80027f0:	494d      	ldr	r1, [pc, #308]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80027f2:	4313      	orrs	r3, r2
 80027f4:	604b      	str	r3, [r1, #4]
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	f003 0301 	and.w	r3, r3, #1
 80027fe:	2b00      	cmp	r3, #0
 8002800:	d040      	beq.n	8002884 <HAL_RCC_ClockConfig+0x120>
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	685b      	ldr	r3, [r3, #4]
 8002806:	2b01      	cmp	r3, #1
 8002808:	d107      	bne.n	800281a <HAL_RCC_ClockConfig+0xb6>
 800280a:	4b47      	ldr	r3, [pc, #284]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002812:	2b00      	cmp	r3, #0
 8002814:	d115      	bne.n	8002842 <HAL_RCC_ClockConfig+0xde>
 8002816:	2301      	movs	r3, #1
 8002818:	e07f      	b.n	800291a <HAL_RCC_ClockConfig+0x1b6>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	685b      	ldr	r3, [r3, #4]
 800281e:	2b02      	cmp	r3, #2
 8002820:	d107      	bne.n	8002832 <HAL_RCC_ClockConfig+0xce>
 8002822:	4b41      	ldr	r3, [pc, #260]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800282a:	2b00      	cmp	r3, #0
 800282c:	d109      	bne.n	8002842 <HAL_RCC_ClockConfig+0xde>
 800282e:	2301      	movs	r3, #1
 8002830:	e073      	b.n	800291a <HAL_RCC_ClockConfig+0x1b6>
 8002832:	4b3d      	ldr	r3, [pc, #244]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	f003 0302 	and.w	r3, r3, #2
 800283a:	2b00      	cmp	r3, #0
 800283c:	d101      	bne.n	8002842 <HAL_RCC_ClockConfig+0xde>
 800283e:	2301      	movs	r3, #1
 8002840:	e06b      	b.n	800291a <HAL_RCC_ClockConfig+0x1b6>
 8002842:	4b39      	ldr	r3, [pc, #228]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 8002844:	685b      	ldr	r3, [r3, #4]
 8002846:	f023 0203 	bic.w	r2, r3, #3
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	685b      	ldr	r3, [r3, #4]
 800284e:	4936      	ldr	r1, [pc, #216]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 8002850:	4313      	orrs	r3, r2
 8002852:	604b      	str	r3, [r1, #4]
 8002854:	f7fe fc84 	bl	8001160 <HAL_GetTick>
 8002858:	60f8      	str	r0, [r7, #12]
 800285a:	e00a      	b.n	8002872 <HAL_RCC_ClockConfig+0x10e>
 800285c:	f7fe fc80 	bl	8001160 <HAL_GetTick>
 8002860:	4602      	mov	r2, r0
 8002862:	68fb      	ldr	r3, [r7, #12]
 8002864:	1ad3      	subs	r3, r2, r3
 8002866:	f241 3288 	movw	r2, #5000	; 0x1388
 800286a:	4293      	cmp	r3, r2
 800286c:	d901      	bls.n	8002872 <HAL_RCC_ClockConfig+0x10e>
 800286e:	2303      	movs	r3, #3
 8002870:	e053      	b.n	800291a <HAL_RCC_ClockConfig+0x1b6>
 8002872:	4b2d      	ldr	r3, [pc, #180]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 8002874:	685b      	ldr	r3, [r3, #4]
 8002876:	f003 020c 	and.w	r2, r3, #12
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	685b      	ldr	r3, [r3, #4]
 800287e:	009b      	lsls	r3, r3, #2
 8002880:	429a      	cmp	r2, r3
 8002882:	d1eb      	bne.n	800285c <HAL_RCC_ClockConfig+0xf8>
 8002884:	4b27      	ldr	r3, [pc, #156]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	f003 0307 	and.w	r3, r3, #7
 800288c:	683a      	ldr	r2, [r7, #0]
 800288e:	429a      	cmp	r2, r3
 8002890:	d210      	bcs.n	80028b4 <HAL_RCC_ClockConfig+0x150>
 8002892:	4b24      	ldr	r3, [pc, #144]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	f023 0207 	bic.w	r2, r3, #7
 800289a:	4922      	ldr	r1, [pc, #136]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 800289c:	683b      	ldr	r3, [r7, #0]
 800289e:	4313      	orrs	r3, r2
 80028a0:	600b      	str	r3, [r1, #0]
 80028a2:	4b20      	ldr	r3, [pc, #128]	; (8002924 <HAL_RCC_ClockConfig+0x1c0>)
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	f003 0307 	and.w	r3, r3, #7
 80028aa:	683a      	ldr	r2, [r7, #0]
 80028ac:	429a      	cmp	r2, r3
 80028ae:	d001      	beq.n	80028b4 <HAL_RCC_ClockConfig+0x150>
 80028b0:	2301      	movs	r3, #1
 80028b2:	e032      	b.n	800291a <HAL_RCC_ClockConfig+0x1b6>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	f003 0304 	and.w	r3, r3, #4
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d008      	beq.n	80028d2 <HAL_RCC_ClockConfig+0x16e>
 80028c0:	4b19      	ldr	r3, [pc, #100]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80028c2:	685b      	ldr	r3, [r3, #4]
 80028c4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	68db      	ldr	r3, [r3, #12]
 80028cc:	4916      	ldr	r1, [pc, #88]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80028ce:	4313      	orrs	r3, r2
 80028d0:	604b      	str	r3, [r1, #4]
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	f003 0308 	and.w	r3, r3, #8
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d009      	beq.n	80028f2 <HAL_RCC_ClockConfig+0x18e>
 80028de:	4b12      	ldr	r3, [pc, #72]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80028e0:	685b      	ldr	r3, [r3, #4]
 80028e2:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	691b      	ldr	r3, [r3, #16]
 80028ea:	00db      	lsls	r3, r3, #3
 80028ec:	490e      	ldr	r1, [pc, #56]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80028ee:	4313      	orrs	r3, r2
 80028f0:	604b      	str	r3, [r1, #4]
 80028f2:	f000 f821 	bl	8002938 <HAL_RCC_GetSysClockFreq>
 80028f6:	4602      	mov	r2, r0
 80028f8:	4b0b      	ldr	r3, [pc, #44]	; (8002928 <HAL_RCC_ClockConfig+0x1c4>)
 80028fa:	685b      	ldr	r3, [r3, #4]
 80028fc:	091b      	lsrs	r3, r3, #4
 80028fe:	f003 030f 	and.w	r3, r3, #15
 8002902:	490a      	ldr	r1, [pc, #40]	; (800292c <HAL_RCC_ClockConfig+0x1c8>)
 8002904:	5ccb      	ldrb	r3, [r1, r3]
 8002906:	fa22 f303 	lsr.w	r3, r2, r3
 800290a:	4a09      	ldr	r2, [pc, #36]	; (8002930 <HAL_RCC_ClockConfig+0x1cc>)
 800290c:	6013      	str	r3, [r2, #0]
 800290e:	4b09      	ldr	r3, [pc, #36]	; (8002934 <HAL_RCC_ClockConfig+0x1d0>)
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	4618      	mov	r0, r3
 8002914:	f7fd fff2 	bl	80008fc <HAL_InitTick>
 8002918:	2300      	movs	r3, #0
 800291a:	4618      	mov	r0, r3
 800291c:	3710      	adds	r7, #16
 800291e:	46bd      	mov	sp, r7
 8002920:	bd80      	pop	{r7, pc}
 8002922:	bf00      	nop
 8002924:	40022000 	.word	0x40022000
 8002928:	40021000 	.word	0x40021000
 800292c:	08006284 	.word	0x08006284
 8002930:	20000000 	.word	0x20000000
 8002934:	2000000c 	.word	0x2000000c

08002938 <HAL_RCC_GetSysClockFreq>:
 8002938:	b480      	push	{r7}
 800293a:	b087      	sub	sp, #28
 800293c:	af00      	add	r7, sp, #0
 800293e:	2300      	movs	r3, #0
 8002940:	60fb      	str	r3, [r7, #12]
 8002942:	2300      	movs	r3, #0
 8002944:	60bb      	str	r3, [r7, #8]
 8002946:	2300      	movs	r3, #0
 8002948:	617b      	str	r3, [r7, #20]
 800294a:	2300      	movs	r3, #0
 800294c:	607b      	str	r3, [r7, #4]
 800294e:	2300      	movs	r3, #0
 8002950:	613b      	str	r3, [r7, #16]
 8002952:	4b1e      	ldr	r3, [pc, #120]	; (80029cc <HAL_RCC_GetSysClockFreq+0x94>)
 8002954:	685b      	ldr	r3, [r3, #4]
 8002956:	60fb      	str	r3, [r7, #12]
 8002958:	68fb      	ldr	r3, [r7, #12]
 800295a:	f003 030c 	and.w	r3, r3, #12
 800295e:	2b04      	cmp	r3, #4
 8002960:	d002      	beq.n	8002968 <HAL_RCC_GetSysClockFreq+0x30>
 8002962:	2b08      	cmp	r3, #8
 8002964:	d003      	beq.n	800296e <HAL_RCC_GetSysClockFreq+0x36>
 8002966:	e027      	b.n	80029b8 <HAL_RCC_GetSysClockFreq+0x80>
 8002968:	4b19      	ldr	r3, [pc, #100]	; (80029d0 <HAL_RCC_GetSysClockFreq+0x98>)
 800296a:	613b      	str	r3, [r7, #16]
 800296c:	e027      	b.n	80029be <HAL_RCC_GetSysClockFreq+0x86>
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	0c9b      	lsrs	r3, r3, #18
 8002972:	f003 030f 	and.w	r3, r3, #15
 8002976:	4a17      	ldr	r2, [pc, #92]	; (80029d4 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002978:	5cd3      	ldrb	r3, [r2, r3]
 800297a:	607b      	str	r3, [r7, #4]
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002982:	2b00      	cmp	r3, #0
 8002984:	d010      	beq.n	80029a8 <HAL_RCC_GetSysClockFreq+0x70>
 8002986:	4b11      	ldr	r3, [pc, #68]	; (80029cc <HAL_RCC_GetSysClockFreq+0x94>)
 8002988:	685b      	ldr	r3, [r3, #4]
 800298a:	0c5b      	lsrs	r3, r3, #17
 800298c:	f003 0301 	and.w	r3, r3, #1
 8002990:	4a11      	ldr	r2, [pc, #68]	; (80029d8 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002992:	5cd3      	ldrb	r3, [r2, r3]
 8002994:	60bb      	str	r3, [r7, #8]
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	4a0d      	ldr	r2, [pc, #52]	; (80029d0 <HAL_RCC_GetSysClockFreq+0x98>)
 800299a:	fb03 f202 	mul.w	r2, r3, r2
 800299e:	68bb      	ldr	r3, [r7, #8]
 80029a0:	fbb2 f3f3 	udiv	r3, r2, r3
 80029a4:	617b      	str	r3, [r7, #20]
 80029a6:	e004      	b.n	80029b2 <HAL_RCC_GetSysClockFreq+0x7a>
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	4a0c      	ldr	r2, [pc, #48]	; (80029dc <HAL_RCC_GetSysClockFreq+0xa4>)
 80029ac:	fb02 f303 	mul.w	r3, r2, r3
 80029b0:	617b      	str	r3, [r7, #20]
 80029b2:	697b      	ldr	r3, [r7, #20]
 80029b4:	613b      	str	r3, [r7, #16]
 80029b6:	e002      	b.n	80029be <HAL_RCC_GetSysClockFreq+0x86>
 80029b8:	4b05      	ldr	r3, [pc, #20]	; (80029d0 <HAL_RCC_GetSysClockFreq+0x98>)
 80029ba:	613b      	str	r3, [r7, #16]
 80029bc:	bf00      	nop
 80029be:	693b      	ldr	r3, [r7, #16]
 80029c0:	4618      	mov	r0, r3
 80029c2:	371c      	adds	r7, #28
 80029c4:	46bd      	mov	sp, r7
 80029c6:	bc80      	pop	{r7}
 80029c8:	4770      	bx	lr
 80029ca:	bf00      	nop
 80029cc:	40021000 	.word	0x40021000
 80029d0:	007a1200 	.word	0x007a1200
 80029d4:	08006ff8 	.word	0x08006ff8
 80029d8:	08007008 	.word	0x08007008
 80029dc:	003d0900 	.word	0x003d0900

080029e0 <HAL_RCC_GetHCLKFreq>:
 80029e0:	b480      	push	{r7}
 80029e2:	af00      	add	r7, sp, #0
 80029e4:	4b02      	ldr	r3, [pc, #8]	; (80029f0 <HAL_RCC_GetHCLKFreq+0x10>)
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	4618      	mov	r0, r3
 80029ea:	46bd      	mov	sp, r7
 80029ec:	bc80      	pop	{r7}
 80029ee:	4770      	bx	lr
 80029f0:	20000000 	.word	0x20000000

080029f4 <HAL_RCC_GetPCLK1Freq>:
 80029f4:	b580      	push	{r7, lr}
 80029f6:	af00      	add	r7, sp, #0
 80029f8:	f7ff fff2 	bl	80029e0 <HAL_RCC_GetHCLKFreq>
 80029fc:	4602      	mov	r2, r0
 80029fe:	4b05      	ldr	r3, [pc, #20]	; (8002a14 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002a00:	685b      	ldr	r3, [r3, #4]
 8002a02:	0a1b      	lsrs	r3, r3, #8
 8002a04:	f003 0307 	and.w	r3, r3, #7
 8002a08:	4903      	ldr	r1, [pc, #12]	; (8002a18 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002a0a:	5ccb      	ldrb	r3, [r1, r3]
 8002a0c:	fa22 f303 	lsr.w	r3, r2, r3
 8002a10:	4618      	mov	r0, r3
 8002a12:	bd80      	pop	{r7, pc}
 8002a14:	40021000 	.word	0x40021000
 8002a18:	08006294 	.word	0x08006294

08002a1c <HAL_RCC_GetPCLK2Freq>:
 8002a1c:	b580      	push	{r7, lr}
 8002a1e:	af00      	add	r7, sp, #0
 8002a20:	f7ff ffde 	bl	80029e0 <HAL_RCC_GetHCLKFreq>
 8002a24:	4602      	mov	r2, r0
 8002a26:	4b05      	ldr	r3, [pc, #20]	; (8002a3c <HAL_RCC_GetPCLK2Freq+0x20>)
 8002a28:	685b      	ldr	r3, [r3, #4]
 8002a2a:	0adb      	lsrs	r3, r3, #11
 8002a2c:	f003 0307 	and.w	r3, r3, #7
 8002a30:	4903      	ldr	r1, [pc, #12]	; (8002a40 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002a32:	5ccb      	ldrb	r3, [r1, r3]
 8002a34:	fa22 f303 	lsr.w	r3, r2, r3
 8002a38:	4618      	mov	r0, r3
 8002a3a:	bd80      	pop	{r7, pc}
 8002a3c:	40021000 	.word	0x40021000
 8002a40:	08006294 	.word	0x08006294

08002a44 <HAL_RCC_GetClockConfig>:
 8002a44:	b480      	push	{r7}
 8002a46:	b083      	sub	sp, #12
 8002a48:	af00      	add	r7, sp, #0
 8002a4a:	6078      	str	r0, [r7, #4]
 8002a4c:	6039      	str	r1, [r7, #0]
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	220f      	movs	r2, #15
 8002a52:	601a      	str	r2, [r3, #0]
 8002a54:	4b11      	ldr	r3, [pc, #68]	; (8002a9c <HAL_RCC_GetClockConfig+0x58>)
 8002a56:	685b      	ldr	r3, [r3, #4]
 8002a58:	f003 0203 	and.w	r2, r3, #3
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	605a      	str	r2, [r3, #4]
 8002a60:	4b0e      	ldr	r3, [pc, #56]	; (8002a9c <HAL_RCC_GetClockConfig+0x58>)
 8002a62:	685b      	ldr	r3, [r3, #4]
 8002a64:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	609a      	str	r2, [r3, #8]
 8002a6c:	4b0b      	ldr	r3, [pc, #44]	; (8002a9c <HAL_RCC_GetClockConfig+0x58>)
 8002a6e:	685b      	ldr	r3, [r3, #4]
 8002a70:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	60da      	str	r2, [r3, #12]
 8002a78:	4b08      	ldr	r3, [pc, #32]	; (8002a9c <HAL_RCC_GetClockConfig+0x58>)
 8002a7a:	685b      	ldr	r3, [r3, #4]
 8002a7c:	08db      	lsrs	r3, r3, #3
 8002a7e:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	611a      	str	r2, [r3, #16]
 8002a86:	4b06      	ldr	r3, [pc, #24]	; (8002aa0 <HAL_RCC_GetClockConfig+0x5c>)
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	f003 0207 	and.w	r2, r3, #7
 8002a8e:	683b      	ldr	r3, [r7, #0]
 8002a90:	601a      	str	r2, [r3, #0]
 8002a92:	bf00      	nop
 8002a94:	370c      	adds	r7, #12
 8002a96:	46bd      	mov	sp, r7
 8002a98:	bc80      	pop	{r7}
 8002a9a:	4770      	bx	lr
 8002a9c:	40021000 	.word	0x40021000
 8002aa0:	40022000 	.word	0x40022000

08002aa4 <RCC_Delay>:
 8002aa4:	b480      	push	{r7}
 8002aa6:	b085      	sub	sp, #20
 8002aa8:	af00      	add	r7, sp, #0
 8002aaa:	6078      	str	r0, [r7, #4]
 8002aac:	4b0a      	ldr	r3, [pc, #40]	; (8002ad8 <RCC_Delay+0x34>)
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	4a0a      	ldr	r2, [pc, #40]	; (8002adc <RCC_Delay+0x38>)
 8002ab2:	fba2 2303 	umull	r2, r3, r2, r3
 8002ab6:	0a5b      	lsrs	r3, r3, #9
 8002ab8:	687a      	ldr	r2, [r7, #4]
 8002aba:	fb02 f303 	mul.w	r3, r2, r3
 8002abe:	60fb      	str	r3, [r7, #12]
 8002ac0:	bf00      	nop
 8002ac2:	68fb      	ldr	r3, [r7, #12]
 8002ac4:	1e5a      	subs	r2, r3, #1
 8002ac6:	60fa      	str	r2, [r7, #12]
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d1f9      	bne.n	8002ac0 <RCC_Delay+0x1c>
 8002acc:	bf00      	nop
 8002ace:	bf00      	nop
 8002ad0:	3714      	adds	r7, #20
 8002ad2:	46bd      	mov	sp, r7
 8002ad4:	bc80      	pop	{r7}
 8002ad6:	4770      	bx	lr
 8002ad8:	20000000 	.word	0x20000000
 8002adc:	10624dd3 	.word	0x10624dd3

08002ae0 <HAL_TIM_Base_Init>:
 8002ae0:	b580      	push	{r7, lr}
 8002ae2:	b082      	sub	sp, #8
 8002ae4:	af00      	add	r7, sp, #0
 8002ae6:	6078      	str	r0, [r7, #4]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	2b00      	cmp	r3, #0
 8002aec:	d101      	bne.n	8002af2 <HAL_TIM_Base_Init+0x12>
 8002aee:	2301      	movs	r3, #1
 8002af0:	e041      	b.n	8002b76 <HAL_TIM_Base_Init+0x96>
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002af8:	b2db      	uxtb	r3, r3
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d106      	bne.n	8002b0c <HAL_TIM_Base_Init+0x2c>
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	2200      	movs	r2, #0
 8002b02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b06:	6878      	ldr	r0, [r7, #4]
 8002b08:	f000 f839 	bl	8002b7e <HAL_TIM_Base_MspInit>
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	2202      	movs	r2, #2
 8002b10:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681a      	ldr	r2, [r3, #0]
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	3304      	adds	r3, #4
 8002b1c:	4619      	mov	r1, r3
 8002b1e:	4610      	mov	r0, r2
 8002b20:	f000 f9b4 	bl	8002e8c <TIM_Base_SetConfig>
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	2201      	movs	r2, #1
 8002b28:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	2201      	movs	r2, #1
 8002b30:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2201      	movs	r2, #1
 8002b38:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	2201      	movs	r2, #1
 8002b40:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	2201      	movs	r2, #1
 8002b48:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	2201      	movs	r2, #1
 8002b50:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	2201      	movs	r2, #1
 8002b58:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	2201      	movs	r2, #1
 8002b60:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	2201      	movs	r2, #1
 8002b68:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	2201      	movs	r2, #1
 8002b70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b74:	2300      	movs	r3, #0
 8002b76:	4618      	mov	r0, r3
 8002b78:	3708      	adds	r7, #8
 8002b7a:	46bd      	mov	sp, r7
 8002b7c:	bd80      	pop	{r7, pc}

08002b7e <HAL_TIM_Base_MspInit>:
 8002b7e:	b480      	push	{r7}
 8002b80:	b083      	sub	sp, #12
 8002b82:	af00      	add	r7, sp, #0
 8002b84:	6078      	str	r0, [r7, #4]
 8002b86:	bf00      	nop
 8002b88:	370c      	adds	r7, #12
 8002b8a:	46bd      	mov	sp, r7
 8002b8c:	bc80      	pop	{r7}
 8002b8e:	4770      	bx	lr

08002b90 <HAL_TIM_Base_Start_IT>:
 8002b90:	b480      	push	{r7}
 8002b92:	b085      	sub	sp, #20
 8002b94:	af00      	add	r7, sp, #0
 8002b96:	6078      	str	r0, [r7, #4]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002b9e:	b2db      	uxtb	r3, r3
 8002ba0:	2b01      	cmp	r3, #1
 8002ba2:	d001      	beq.n	8002ba8 <HAL_TIM_Base_Start_IT+0x18>
 8002ba4:	2301      	movs	r3, #1
 8002ba6:	e03a      	b.n	8002c1e <HAL_TIM_Base_Start_IT+0x8e>
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	2202      	movs	r2, #2
 8002bac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	68da      	ldr	r2, [r3, #12]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	f042 0201 	orr.w	r2, r2, #1
 8002bbe:	60da      	str	r2, [r3, #12]
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	4a18      	ldr	r2, [pc, #96]	; (8002c28 <HAL_TIM_Base_Start_IT+0x98>)
 8002bc6:	4293      	cmp	r3, r2
 8002bc8:	d00e      	beq.n	8002be8 <HAL_TIM_Base_Start_IT+0x58>
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	681b      	ldr	r3, [r3, #0]
 8002bce:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bd2:	d009      	beq.n	8002be8 <HAL_TIM_Base_Start_IT+0x58>
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	4a14      	ldr	r2, [pc, #80]	; (8002c2c <HAL_TIM_Base_Start_IT+0x9c>)
 8002bda:	4293      	cmp	r3, r2
 8002bdc:	d004      	beq.n	8002be8 <HAL_TIM_Base_Start_IT+0x58>
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	4a13      	ldr	r2, [pc, #76]	; (8002c30 <HAL_TIM_Base_Start_IT+0xa0>)
 8002be4:	4293      	cmp	r3, r2
 8002be6:	d111      	bne.n	8002c0c <HAL_TIM_Base_Start_IT+0x7c>
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	689b      	ldr	r3, [r3, #8]
 8002bee:	f003 0307 	and.w	r3, r3, #7
 8002bf2:	60fb      	str	r3, [r7, #12]
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	2b06      	cmp	r3, #6
 8002bf8:	d010      	beq.n	8002c1c <HAL_TIM_Base_Start_IT+0x8c>
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	681a      	ldr	r2, [r3, #0]
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	f042 0201 	orr.w	r2, r2, #1
 8002c08:	601a      	str	r2, [r3, #0]
 8002c0a:	e007      	b.n	8002c1c <HAL_TIM_Base_Start_IT+0x8c>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	681a      	ldr	r2, [r3, #0]
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	f042 0201 	orr.w	r2, r2, #1
 8002c1a:	601a      	str	r2, [r3, #0]
 8002c1c:	2300      	movs	r3, #0
 8002c1e:	4618      	mov	r0, r3
 8002c20:	3714      	adds	r7, #20
 8002c22:	46bd      	mov	sp, r7
 8002c24:	bc80      	pop	{r7}
 8002c26:	4770      	bx	lr
 8002c28:	40012c00 	.word	0x40012c00
 8002c2c:	40000400 	.word	0x40000400
 8002c30:	40000800 	.word	0x40000800

08002c34 <HAL_TIM_IRQHandler>:
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b082      	sub	sp, #8
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	691b      	ldr	r3, [r3, #16]
 8002c42:	f003 0302 	and.w	r3, r3, #2
 8002c46:	2b02      	cmp	r3, #2
 8002c48:	d122      	bne.n	8002c90 <HAL_TIM_IRQHandler+0x5c>
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	68db      	ldr	r3, [r3, #12]
 8002c50:	f003 0302 	and.w	r3, r3, #2
 8002c54:	2b02      	cmp	r3, #2
 8002c56:	d11b      	bne.n	8002c90 <HAL_TIM_IRQHandler+0x5c>
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	f06f 0202 	mvn.w	r2, #2
 8002c60:	611a      	str	r2, [r3, #16]
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	2201      	movs	r2, #1
 8002c66:	771a      	strb	r2, [r3, #28]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	699b      	ldr	r3, [r3, #24]
 8002c6e:	f003 0303 	and.w	r3, r3, #3
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	d003      	beq.n	8002c7e <HAL_TIM_IRQHandler+0x4a>
 8002c76:	6878      	ldr	r0, [r7, #4]
 8002c78:	f000 f8ed 	bl	8002e56 <HAL_TIM_IC_CaptureCallback>
 8002c7c:	e005      	b.n	8002c8a <HAL_TIM_IRQHandler+0x56>
 8002c7e:	6878      	ldr	r0, [r7, #4]
 8002c80:	f000 f8e0 	bl	8002e44 <HAL_TIM_OC_DelayElapsedCallback>
 8002c84:	6878      	ldr	r0, [r7, #4]
 8002c86:	f000 f8ef 	bl	8002e68 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	2200      	movs	r2, #0
 8002c8e:	771a      	strb	r2, [r3, #28]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	691b      	ldr	r3, [r3, #16]
 8002c96:	f003 0304 	and.w	r3, r3, #4
 8002c9a:	2b04      	cmp	r3, #4
 8002c9c:	d122      	bne.n	8002ce4 <HAL_TIM_IRQHandler+0xb0>
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	68db      	ldr	r3, [r3, #12]
 8002ca4:	f003 0304 	and.w	r3, r3, #4
 8002ca8:	2b04      	cmp	r3, #4
 8002caa:	d11b      	bne.n	8002ce4 <HAL_TIM_IRQHandler+0xb0>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	f06f 0204 	mvn.w	r2, #4
 8002cb4:	611a      	str	r2, [r3, #16]
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	2202      	movs	r2, #2
 8002cba:	771a      	strb	r2, [r3, #28]
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	699b      	ldr	r3, [r3, #24]
 8002cc2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d003      	beq.n	8002cd2 <HAL_TIM_IRQHandler+0x9e>
 8002cca:	6878      	ldr	r0, [r7, #4]
 8002ccc:	f000 f8c3 	bl	8002e56 <HAL_TIM_IC_CaptureCallback>
 8002cd0:	e005      	b.n	8002cde <HAL_TIM_IRQHandler+0xaa>
 8002cd2:	6878      	ldr	r0, [r7, #4]
 8002cd4:	f000 f8b6 	bl	8002e44 <HAL_TIM_OC_DelayElapsedCallback>
 8002cd8:	6878      	ldr	r0, [r7, #4]
 8002cda:	f000 f8c5 	bl	8002e68 <HAL_TIM_PWM_PulseFinishedCallback>
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	2200      	movs	r2, #0
 8002ce2:	771a      	strb	r2, [r3, #28]
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	691b      	ldr	r3, [r3, #16]
 8002cea:	f003 0308 	and.w	r3, r3, #8
 8002cee:	2b08      	cmp	r3, #8
 8002cf0:	d122      	bne.n	8002d38 <HAL_TIM_IRQHandler+0x104>
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	68db      	ldr	r3, [r3, #12]
 8002cf8:	f003 0308 	and.w	r3, r3, #8
 8002cfc:	2b08      	cmp	r3, #8
 8002cfe:	d11b      	bne.n	8002d38 <HAL_TIM_IRQHandler+0x104>
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	f06f 0208 	mvn.w	r2, #8
 8002d08:	611a      	str	r2, [r3, #16]
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	2204      	movs	r2, #4
 8002d0e:	771a      	strb	r2, [r3, #28]
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	681b      	ldr	r3, [r3, #0]
 8002d14:	69db      	ldr	r3, [r3, #28]
 8002d16:	f003 0303 	and.w	r3, r3, #3
 8002d1a:	2b00      	cmp	r3, #0
 8002d1c:	d003      	beq.n	8002d26 <HAL_TIM_IRQHandler+0xf2>
 8002d1e:	6878      	ldr	r0, [r7, #4]
 8002d20:	f000 f899 	bl	8002e56 <HAL_TIM_IC_CaptureCallback>
 8002d24:	e005      	b.n	8002d32 <HAL_TIM_IRQHandler+0xfe>
 8002d26:	6878      	ldr	r0, [r7, #4]
 8002d28:	f000 f88c 	bl	8002e44 <HAL_TIM_OC_DelayElapsedCallback>
 8002d2c:	6878      	ldr	r0, [r7, #4]
 8002d2e:	f000 f89b 	bl	8002e68 <HAL_TIM_PWM_PulseFinishedCallback>
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	2200      	movs	r2, #0
 8002d36:	771a      	strb	r2, [r3, #28]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	681b      	ldr	r3, [r3, #0]
 8002d3c:	691b      	ldr	r3, [r3, #16]
 8002d3e:	f003 0310 	and.w	r3, r3, #16
 8002d42:	2b10      	cmp	r3, #16
 8002d44:	d122      	bne.n	8002d8c <HAL_TIM_IRQHandler+0x158>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	68db      	ldr	r3, [r3, #12]
 8002d4c:	f003 0310 	and.w	r3, r3, #16
 8002d50:	2b10      	cmp	r3, #16
 8002d52:	d11b      	bne.n	8002d8c <HAL_TIM_IRQHandler+0x158>
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	f06f 0210 	mvn.w	r2, #16
 8002d5c:	611a      	str	r2, [r3, #16]
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	2208      	movs	r2, #8
 8002d62:	771a      	strb	r2, [r3, #28]
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	681b      	ldr	r3, [r3, #0]
 8002d68:	69db      	ldr	r3, [r3, #28]
 8002d6a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d003      	beq.n	8002d7a <HAL_TIM_IRQHandler+0x146>
 8002d72:	6878      	ldr	r0, [r7, #4]
 8002d74:	f000 f86f 	bl	8002e56 <HAL_TIM_IC_CaptureCallback>
 8002d78:	e005      	b.n	8002d86 <HAL_TIM_IRQHandler+0x152>
 8002d7a:	6878      	ldr	r0, [r7, #4]
 8002d7c:	f000 f862 	bl	8002e44 <HAL_TIM_OC_DelayElapsedCallback>
 8002d80:	6878      	ldr	r0, [r7, #4]
 8002d82:	f000 f871 	bl	8002e68 <HAL_TIM_PWM_PulseFinishedCallback>
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	2200      	movs	r2, #0
 8002d8a:	771a      	strb	r2, [r3, #28]
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	691b      	ldr	r3, [r3, #16]
 8002d92:	f003 0301 	and.w	r3, r3, #1
 8002d96:	2b01      	cmp	r3, #1
 8002d98:	d10e      	bne.n	8002db8 <HAL_TIM_IRQHandler+0x184>
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	68db      	ldr	r3, [r3, #12]
 8002da0:	f003 0301 	and.w	r3, r3, #1
 8002da4:	2b01      	cmp	r3, #1
 8002da6:	d107      	bne.n	8002db8 <HAL_TIM_IRQHandler+0x184>
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	f06f 0201 	mvn.w	r2, #1
 8002db0:	611a      	str	r2, [r3, #16]
 8002db2:	6878      	ldr	r0, [r7, #4]
 8002db4:	f7fd fcb8 	bl	8000728 <HAL_TIM_PeriodElapsedCallback>
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	691b      	ldr	r3, [r3, #16]
 8002dbe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002dc2:	2b80      	cmp	r3, #128	; 0x80
 8002dc4:	d10e      	bne.n	8002de4 <HAL_TIM_IRQHandler+0x1b0>
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	68db      	ldr	r3, [r3, #12]
 8002dcc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002dd0:	2b80      	cmp	r3, #128	; 0x80
 8002dd2:	d107      	bne.n	8002de4 <HAL_TIM_IRQHandler+0x1b0>
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002ddc:	611a      	str	r2, [r3, #16]
 8002dde:	6878      	ldr	r0, [r7, #4]
 8002de0:	f000 f8bf 	bl	8002f62 <HAL_TIMEx_BreakCallback>
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	691b      	ldr	r3, [r3, #16]
 8002dea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002dee:	2b40      	cmp	r3, #64	; 0x40
 8002df0:	d10e      	bne.n	8002e10 <HAL_TIM_IRQHandler+0x1dc>
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	68db      	ldr	r3, [r3, #12]
 8002df8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002dfc:	2b40      	cmp	r3, #64	; 0x40
 8002dfe:	d107      	bne.n	8002e10 <HAL_TIM_IRQHandler+0x1dc>
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002e08:	611a      	str	r2, [r3, #16]
 8002e0a:	6878      	ldr	r0, [r7, #4]
 8002e0c:	f000 f835 	bl	8002e7a <HAL_TIM_TriggerCallback>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	691b      	ldr	r3, [r3, #16]
 8002e16:	f003 0320 	and.w	r3, r3, #32
 8002e1a:	2b20      	cmp	r3, #32
 8002e1c:	d10e      	bne.n	8002e3c <HAL_TIM_IRQHandler+0x208>
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	68db      	ldr	r3, [r3, #12]
 8002e24:	f003 0320 	and.w	r3, r3, #32
 8002e28:	2b20      	cmp	r3, #32
 8002e2a:	d107      	bne.n	8002e3c <HAL_TIM_IRQHandler+0x208>
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	f06f 0220 	mvn.w	r2, #32
 8002e34:	611a      	str	r2, [r3, #16]
 8002e36:	6878      	ldr	r0, [r7, #4]
 8002e38:	f000 f88a 	bl	8002f50 <HAL_TIMEx_CommutCallback>
 8002e3c:	bf00      	nop
 8002e3e:	3708      	adds	r7, #8
 8002e40:	46bd      	mov	sp, r7
 8002e42:	bd80      	pop	{r7, pc}

08002e44 <HAL_TIM_OC_DelayElapsedCallback>:
 8002e44:	b480      	push	{r7}
 8002e46:	b083      	sub	sp, #12
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	6078      	str	r0, [r7, #4]
 8002e4c:	bf00      	nop
 8002e4e:	370c      	adds	r7, #12
 8002e50:	46bd      	mov	sp, r7
 8002e52:	bc80      	pop	{r7}
 8002e54:	4770      	bx	lr

08002e56 <HAL_TIM_IC_CaptureCallback>:
 8002e56:	b480      	push	{r7}
 8002e58:	b083      	sub	sp, #12
 8002e5a:	af00      	add	r7, sp, #0
 8002e5c:	6078      	str	r0, [r7, #4]
 8002e5e:	bf00      	nop
 8002e60:	370c      	adds	r7, #12
 8002e62:	46bd      	mov	sp, r7
 8002e64:	bc80      	pop	{r7}
 8002e66:	4770      	bx	lr

08002e68 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002e68:	b480      	push	{r7}
 8002e6a:	b083      	sub	sp, #12
 8002e6c:	af00      	add	r7, sp, #0
 8002e6e:	6078      	str	r0, [r7, #4]
 8002e70:	bf00      	nop
 8002e72:	370c      	adds	r7, #12
 8002e74:	46bd      	mov	sp, r7
 8002e76:	bc80      	pop	{r7}
 8002e78:	4770      	bx	lr

08002e7a <HAL_TIM_TriggerCallback>:
 8002e7a:	b480      	push	{r7}
 8002e7c:	b083      	sub	sp, #12
 8002e7e:	af00      	add	r7, sp, #0
 8002e80:	6078      	str	r0, [r7, #4]
 8002e82:	bf00      	nop
 8002e84:	370c      	adds	r7, #12
 8002e86:	46bd      	mov	sp, r7
 8002e88:	bc80      	pop	{r7}
 8002e8a:	4770      	bx	lr

08002e8c <TIM_Base_SetConfig>:
 8002e8c:	b480      	push	{r7}
 8002e8e:	b085      	sub	sp, #20
 8002e90:	af00      	add	r7, sp, #0
 8002e92:	6078      	str	r0, [r7, #4]
 8002e94:	6039      	str	r1, [r7, #0]
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	60fb      	str	r3, [r7, #12]
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	4a29      	ldr	r2, [pc, #164]	; (8002f44 <TIM_Base_SetConfig+0xb8>)
 8002ea0:	4293      	cmp	r3, r2
 8002ea2:	d00b      	beq.n	8002ebc <TIM_Base_SetConfig+0x30>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002eaa:	d007      	beq.n	8002ebc <TIM_Base_SetConfig+0x30>
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	4a26      	ldr	r2, [pc, #152]	; (8002f48 <TIM_Base_SetConfig+0xbc>)
 8002eb0:	4293      	cmp	r3, r2
 8002eb2:	d003      	beq.n	8002ebc <TIM_Base_SetConfig+0x30>
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	4a25      	ldr	r2, [pc, #148]	; (8002f4c <TIM_Base_SetConfig+0xc0>)
 8002eb8:	4293      	cmp	r3, r2
 8002eba:	d108      	bne.n	8002ece <TIM_Base_SetConfig+0x42>
 8002ebc:	68fb      	ldr	r3, [r7, #12]
 8002ebe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002ec2:	60fb      	str	r3, [r7, #12]
 8002ec4:	683b      	ldr	r3, [r7, #0]
 8002ec6:	685b      	ldr	r3, [r3, #4]
 8002ec8:	68fa      	ldr	r2, [r7, #12]
 8002eca:	4313      	orrs	r3, r2
 8002ecc:	60fb      	str	r3, [r7, #12]
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	4a1c      	ldr	r2, [pc, #112]	; (8002f44 <TIM_Base_SetConfig+0xb8>)
 8002ed2:	4293      	cmp	r3, r2
 8002ed4:	d00b      	beq.n	8002eee <TIM_Base_SetConfig+0x62>
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002edc:	d007      	beq.n	8002eee <TIM_Base_SetConfig+0x62>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	4a19      	ldr	r2, [pc, #100]	; (8002f48 <TIM_Base_SetConfig+0xbc>)
 8002ee2:	4293      	cmp	r3, r2
 8002ee4:	d003      	beq.n	8002eee <TIM_Base_SetConfig+0x62>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	4a18      	ldr	r2, [pc, #96]	; (8002f4c <TIM_Base_SetConfig+0xc0>)
 8002eea:	4293      	cmp	r3, r2
 8002eec:	d108      	bne.n	8002f00 <TIM_Base_SetConfig+0x74>
 8002eee:	68fb      	ldr	r3, [r7, #12]
 8002ef0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002ef4:	60fb      	str	r3, [r7, #12]
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	68db      	ldr	r3, [r3, #12]
 8002efa:	68fa      	ldr	r2, [r7, #12]
 8002efc:	4313      	orrs	r3, r2
 8002efe:	60fb      	str	r3, [r7, #12]
 8002f00:	68fb      	ldr	r3, [r7, #12]
 8002f02:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002f06:	683b      	ldr	r3, [r7, #0]
 8002f08:	695b      	ldr	r3, [r3, #20]
 8002f0a:	4313      	orrs	r3, r2
 8002f0c:	60fb      	str	r3, [r7, #12]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	68fa      	ldr	r2, [r7, #12]
 8002f12:	601a      	str	r2, [r3, #0]
 8002f14:	683b      	ldr	r3, [r7, #0]
 8002f16:	689a      	ldr	r2, [r3, #8]
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	62da      	str	r2, [r3, #44]	; 0x2c
 8002f1c:	683b      	ldr	r3, [r7, #0]
 8002f1e:	681a      	ldr	r2, [r3, #0]
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	629a      	str	r2, [r3, #40]	; 0x28
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	4a07      	ldr	r2, [pc, #28]	; (8002f44 <TIM_Base_SetConfig+0xb8>)
 8002f28:	4293      	cmp	r3, r2
 8002f2a:	d103      	bne.n	8002f34 <TIM_Base_SetConfig+0xa8>
 8002f2c:	683b      	ldr	r3, [r7, #0]
 8002f2e:	691a      	ldr	r2, [r3, #16]
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	631a      	str	r2, [r3, #48]	; 0x30
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	2201      	movs	r2, #1
 8002f38:	615a      	str	r2, [r3, #20]
 8002f3a:	bf00      	nop
 8002f3c:	3714      	adds	r7, #20
 8002f3e:	46bd      	mov	sp, r7
 8002f40:	bc80      	pop	{r7}
 8002f42:	4770      	bx	lr
 8002f44:	40012c00 	.word	0x40012c00
 8002f48:	40000400 	.word	0x40000400
 8002f4c:	40000800 	.word	0x40000800

08002f50 <HAL_TIMEx_CommutCallback>:
 8002f50:	b480      	push	{r7}
 8002f52:	b083      	sub	sp, #12
 8002f54:	af00      	add	r7, sp, #0
 8002f56:	6078      	str	r0, [r7, #4]
 8002f58:	bf00      	nop
 8002f5a:	370c      	adds	r7, #12
 8002f5c:	46bd      	mov	sp, r7
 8002f5e:	bc80      	pop	{r7}
 8002f60:	4770      	bx	lr

08002f62 <HAL_TIMEx_BreakCallback>:
 8002f62:	b480      	push	{r7}
 8002f64:	b083      	sub	sp, #12
 8002f66:	af00      	add	r7, sp, #0
 8002f68:	6078      	str	r0, [r7, #4]
 8002f6a:	bf00      	nop
 8002f6c:	370c      	adds	r7, #12
 8002f6e:	46bd      	mov	sp, r7
 8002f70:	bc80      	pop	{r7}
 8002f72:	4770      	bx	lr

08002f74 <HAL_UART_Init>:
 8002f74:	b580      	push	{r7, lr}
 8002f76:	b082      	sub	sp, #8
 8002f78:	af00      	add	r7, sp, #0
 8002f7a:	6078      	str	r0, [r7, #4]
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d101      	bne.n	8002f86 <HAL_UART_Init+0x12>
 8002f82:	2301      	movs	r3, #1
 8002f84:	e042      	b.n	800300c <HAL_UART_Init+0x98>
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002f8c:	b2db      	uxtb	r3, r3
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d106      	bne.n	8002fa0 <HAL_UART_Init+0x2c>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	2200      	movs	r2, #0
 8002f96:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002f9a:	6878      	ldr	r0, [r7, #4]
 8002f9c:	f7fd fc54 	bl	8000848 <HAL_UART_MspInit>
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	2224      	movs	r2, #36	; 0x24
 8002fa4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	681b      	ldr	r3, [r3, #0]
 8002fac:	68da      	ldr	r2, [r3, #12]
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002fb6:	60da      	str	r2, [r3, #12]
 8002fb8:	6878      	ldr	r0, [r7, #4]
 8002fba:	f000 f91d 	bl	80031f8 <UART_SetConfig>
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	691a      	ldr	r2, [r3, #16]
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002fcc:	611a      	str	r2, [r3, #16]
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	695a      	ldr	r2, [r3, #20]
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002fdc:	615a      	str	r2, [r3, #20]
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	68da      	ldr	r2, [r3, #12]
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002fec:	60da      	str	r2, [r3, #12]
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	2200      	movs	r2, #0
 8002ff2:	645a      	str	r2, [r3, #68]	; 0x44
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	2220      	movs	r2, #32
 8002ff8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	2220      	movs	r2, #32
 8003000:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	2200      	movs	r2, #0
 8003008:	635a      	str	r2, [r3, #52]	; 0x34
 800300a:	2300      	movs	r3, #0
 800300c:	4618      	mov	r0, r3
 800300e:	3708      	adds	r7, #8
 8003010:	46bd      	mov	sp, r7
 8003012:	bd80      	pop	{r7, pc}

08003014 <HAL_UART_Transmit>:
 8003014:	b580      	push	{r7, lr}
 8003016:	b08a      	sub	sp, #40	; 0x28
 8003018:	af02      	add	r7, sp, #8
 800301a:	60f8      	str	r0, [r7, #12]
 800301c:	60b9      	str	r1, [r7, #8]
 800301e:	603b      	str	r3, [r7, #0]
 8003020:	4613      	mov	r3, r2
 8003022:	80fb      	strh	r3, [r7, #6]
 8003024:	2300      	movs	r3, #0
 8003026:	617b      	str	r3, [r7, #20]
 8003028:	68fb      	ldr	r3, [r7, #12]
 800302a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800302e:	b2db      	uxtb	r3, r3
 8003030:	2b20      	cmp	r3, #32
 8003032:	d16d      	bne.n	8003110 <HAL_UART_Transmit+0xfc>
 8003034:	68bb      	ldr	r3, [r7, #8]
 8003036:	2b00      	cmp	r3, #0
 8003038:	d002      	beq.n	8003040 <HAL_UART_Transmit+0x2c>
 800303a:	88fb      	ldrh	r3, [r7, #6]
 800303c:	2b00      	cmp	r3, #0
 800303e:	d101      	bne.n	8003044 <HAL_UART_Transmit+0x30>
 8003040:	2301      	movs	r3, #1
 8003042:	e066      	b.n	8003112 <HAL_UART_Transmit+0xfe>
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	2200      	movs	r2, #0
 8003048:	645a      	str	r2, [r3, #68]	; 0x44
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	2221      	movs	r2, #33	; 0x21
 800304e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003052:	f7fe f885 	bl	8001160 <HAL_GetTick>
 8003056:	6178      	str	r0, [r7, #20]
 8003058:	68fb      	ldr	r3, [r7, #12]
 800305a:	88fa      	ldrh	r2, [r7, #6]
 800305c:	849a      	strh	r2, [r3, #36]	; 0x24
 800305e:	68fb      	ldr	r3, [r7, #12]
 8003060:	88fa      	ldrh	r2, [r7, #6]
 8003062:	84da      	strh	r2, [r3, #38]	; 0x26
 8003064:	68fb      	ldr	r3, [r7, #12]
 8003066:	689b      	ldr	r3, [r3, #8]
 8003068:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800306c:	d108      	bne.n	8003080 <HAL_UART_Transmit+0x6c>
 800306e:	68fb      	ldr	r3, [r7, #12]
 8003070:	691b      	ldr	r3, [r3, #16]
 8003072:	2b00      	cmp	r3, #0
 8003074:	d104      	bne.n	8003080 <HAL_UART_Transmit+0x6c>
 8003076:	2300      	movs	r3, #0
 8003078:	61fb      	str	r3, [r7, #28]
 800307a:	68bb      	ldr	r3, [r7, #8]
 800307c:	61bb      	str	r3, [r7, #24]
 800307e:	e003      	b.n	8003088 <HAL_UART_Transmit+0x74>
 8003080:	68bb      	ldr	r3, [r7, #8]
 8003082:	61fb      	str	r3, [r7, #28]
 8003084:	2300      	movs	r3, #0
 8003086:	61bb      	str	r3, [r7, #24]
 8003088:	e02a      	b.n	80030e0 <HAL_UART_Transmit+0xcc>
 800308a:	683b      	ldr	r3, [r7, #0]
 800308c:	9300      	str	r3, [sp, #0]
 800308e:	697b      	ldr	r3, [r7, #20]
 8003090:	2200      	movs	r2, #0
 8003092:	2180      	movs	r1, #128	; 0x80
 8003094:	68f8      	ldr	r0, [r7, #12]
 8003096:	f000 f840 	bl	800311a <UART_WaitOnFlagUntilTimeout>
 800309a:	4603      	mov	r3, r0
 800309c:	2b00      	cmp	r3, #0
 800309e:	d001      	beq.n	80030a4 <HAL_UART_Transmit+0x90>
 80030a0:	2303      	movs	r3, #3
 80030a2:	e036      	b.n	8003112 <HAL_UART_Transmit+0xfe>
 80030a4:	69fb      	ldr	r3, [r7, #28]
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d10b      	bne.n	80030c2 <HAL_UART_Transmit+0xae>
 80030aa:	69bb      	ldr	r3, [r7, #24]
 80030ac:	881b      	ldrh	r3, [r3, #0]
 80030ae:	461a      	mov	r2, r3
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80030b8:	605a      	str	r2, [r3, #4]
 80030ba:	69bb      	ldr	r3, [r7, #24]
 80030bc:	3302      	adds	r3, #2
 80030be:	61bb      	str	r3, [r7, #24]
 80030c0:	e007      	b.n	80030d2 <HAL_UART_Transmit+0xbe>
 80030c2:	69fb      	ldr	r3, [r7, #28]
 80030c4:	781a      	ldrb	r2, [r3, #0]
 80030c6:	68fb      	ldr	r3, [r7, #12]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	605a      	str	r2, [r3, #4]
 80030cc:	69fb      	ldr	r3, [r7, #28]
 80030ce:	3301      	adds	r3, #1
 80030d0:	61fb      	str	r3, [r7, #28]
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80030d6:	b29b      	uxth	r3, r3
 80030d8:	3b01      	subs	r3, #1
 80030da:	b29a      	uxth	r2, r3
 80030dc:	68fb      	ldr	r3, [r7, #12]
 80030de:	84da      	strh	r2, [r3, #38]	; 0x26
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80030e4:	b29b      	uxth	r3, r3
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d1cf      	bne.n	800308a <HAL_UART_Transmit+0x76>
 80030ea:	683b      	ldr	r3, [r7, #0]
 80030ec:	9300      	str	r3, [sp, #0]
 80030ee:	697b      	ldr	r3, [r7, #20]
 80030f0:	2200      	movs	r2, #0
 80030f2:	2140      	movs	r1, #64	; 0x40
 80030f4:	68f8      	ldr	r0, [r7, #12]
 80030f6:	f000 f810 	bl	800311a <UART_WaitOnFlagUntilTimeout>
 80030fa:	4603      	mov	r3, r0
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	d001      	beq.n	8003104 <HAL_UART_Transmit+0xf0>
 8003100:	2303      	movs	r3, #3
 8003102:	e006      	b.n	8003112 <HAL_UART_Transmit+0xfe>
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	2220      	movs	r2, #32
 8003108:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800310c:	2300      	movs	r3, #0
 800310e:	e000      	b.n	8003112 <HAL_UART_Transmit+0xfe>
 8003110:	2302      	movs	r3, #2
 8003112:	4618      	mov	r0, r3
 8003114:	3720      	adds	r7, #32
 8003116:	46bd      	mov	sp, r7
 8003118:	bd80      	pop	{r7, pc}

0800311a <UART_WaitOnFlagUntilTimeout>:
 800311a:	b580      	push	{r7, lr}
 800311c:	b090      	sub	sp, #64	; 0x40
 800311e:	af00      	add	r7, sp, #0
 8003120:	60f8      	str	r0, [r7, #12]
 8003122:	60b9      	str	r1, [r7, #8]
 8003124:	603b      	str	r3, [r7, #0]
 8003126:	4613      	mov	r3, r2
 8003128:	71fb      	strb	r3, [r7, #7]
 800312a:	e050      	b.n	80031ce <UART_WaitOnFlagUntilTimeout+0xb4>
 800312c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800312e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003132:	d04c      	beq.n	80031ce <UART_WaitOnFlagUntilTimeout+0xb4>
 8003134:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003136:	2b00      	cmp	r3, #0
 8003138:	d007      	beq.n	800314a <UART_WaitOnFlagUntilTimeout+0x30>
 800313a:	f7fe f811 	bl	8001160 <HAL_GetTick>
 800313e:	4602      	mov	r2, r0
 8003140:	683b      	ldr	r3, [r7, #0]
 8003142:	1ad3      	subs	r3, r2, r3
 8003144:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8003146:	429a      	cmp	r2, r3
 8003148:	d241      	bcs.n	80031ce <UART_WaitOnFlagUntilTimeout+0xb4>
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	330c      	adds	r3, #12
 8003150:	62bb      	str	r3, [r7, #40]	; 0x28
 8003152:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003154:	e853 3f00 	ldrex	r3, [r3]
 8003158:	627b      	str	r3, [r7, #36]	; 0x24
 800315a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800315c:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8003160:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003162:	68fb      	ldr	r3, [r7, #12]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	330c      	adds	r3, #12
 8003168:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800316a:	637a      	str	r2, [r7, #52]	; 0x34
 800316c:	633b      	str	r3, [r7, #48]	; 0x30
 800316e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003170:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003172:	e841 2300 	strex	r3, r2, [r1]
 8003176:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003178:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800317a:	2b00      	cmp	r3, #0
 800317c:	d1e5      	bne.n	800314a <UART_WaitOnFlagUntilTimeout+0x30>
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	3314      	adds	r3, #20
 8003184:	617b      	str	r3, [r7, #20]
 8003186:	697b      	ldr	r3, [r7, #20]
 8003188:	e853 3f00 	ldrex	r3, [r3]
 800318c:	613b      	str	r3, [r7, #16]
 800318e:	693b      	ldr	r3, [r7, #16]
 8003190:	f023 0301 	bic.w	r3, r3, #1
 8003194:	63bb      	str	r3, [r7, #56]	; 0x38
 8003196:	68fb      	ldr	r3, [r7, #12]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	3314      	adds	r3, #20
 800319c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800319e:	623a      	str	r2, [r7, #32]
 80031a0:	61fb      	str	r3, [r7, #28]
 80031a2:	69f9      	ldr	r1, [r7, #28]
 80031a4:	6a3a      	ldr	r2, [r7, #32]
 80031a6:	e841 2300 	strex	r3, r2, [r1]
 80031aa:	61bb      	str	r3, [r7, #24]
 80031ac:	69bb      	ldr	r3, [r7, #24]
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	d1e5      	bne.n	800317e <UART_WaitOnFlagUntilTimeout+0x64>
 80031b2:	68fb      	ldr	r3, [r7, #12]
 80031b4:	2220      	movs	r2, #32
 80031b6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80031ba:	68fb      	ldr	r3, [r7, #12]
 80031bc:	2220      	movs	r2, #32
 80031be:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80031c2:	68fb      	ldr	r3, [r7, #12]
 80031c4:	2200      	movs	r2, #0
 80031c6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80031ca:	2303      	movs	r3, #3
 80031cc:	e00f      	b.n	80031ee <UART_WaitOnFlagUntilTimeout+0xd4>
 80031ce:	68fb      	ldr	r3, [r7, #12]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	681a      	ldr	r2, [r3, #0]
 80031d4:	68bb      	ldr	r3, [r7, #8]
 80031d6:	4013      	ands	r3, r2
 80031d8:	68ba      	ldr	r2, [r7, #8]
 80031da:	429a      	cmp	r2, r3
 80031dc:	bf0c      	ite	eq
 80031de:	2301      	moveq	r3, #1
 80031e0:	2300      	movne	r3, #0
 80031e2:	b2db      	uxtb	r3, r3
 80031e4:	461a      	mov	r2, r3
 80031e6:	79fb      	ldrb	r3, [r7, #7]
 80031e8:	429a      	cmp	r2, r3
 80031ea:	d09f      	beq.n	800312c <UART_WaitOnFlagUntilTimeout+0x12>
 80031ec:	2300      	movs	r3, #0
 80031ee:	4618      	mov	r0, r3
 80031f0:	3740      	adds	r7, #64	; 0x40
 80031f2:	46bd      	mov	sp, r7
 80031f4:	bd80      	pop	{r7, pc}
	...

080031f8 <UART_SetConfig>:
 80031f8:	b580      	push	{r7, lr}
 80031fa:	b084      	sub	sp, #16
 80031fc:	af00      	add	r7, sp, #0
 80031fe:	6078      	str	r0, [r7, #4]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	691b      	ldr	r3, [r3, #16]
 8003206:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	68da      	ldr	r2, [r3, #12]
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	430a      	orrs	r2, r1
 8003214:	611a      	str	r2, [r3, #16]
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	689a      	ldr	r2, [r3, #8]
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	691b      	ldr	r3, [r3, #16]
 800321e:	431a      	orrs	r2, r3
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	695b      	ldr	r3, [r3, #20]
 8003224:	4313      	orrs	r3, r2
 8003226:	60bb      	str	r3, [r7, #8]
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	68db      	ldr	r3, [r3, #12]
 800322e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8003232:	f023 030c 	bic.w	r3, r3, #12
 8003236:	687a      	ldr	r2, [r7, #4]
 8003238:	6812      	ldr	r2, [r2, #0]
 800323a:	68b9      	ldr	r1, [r7, #8]
 800323c:	430b      	orrs	r3, r1
 800323e:	60d3      	str	r3, [r2, #12]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	695b      	ldr	r3, [r3, #20]
 8003246:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	699a      	ldr	r2, [r3, #24]
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	430a      	orrs	r2, r1
 8003254:	615a      	str	r2, [r3, #20]
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	681b      	ldr	r3, [r3, #0]
 800325a:	4a2c      	ldr	r2, [pc, #176]	; (800330c <UART_SetConfig+0x114>)
 800325c:	4293      	cmp	r3, r2
 800325e:	d103      	bne.n	8003268 <UART_SetConfig+0x70>
 8003260:	f7ff fbdc 	bl	8002a1c <HAL_RCC_GetPCLK2Freq>
 8003264:	60f8      	str	r0, [r7, #12]
 8003266:	e002      	b.n	800326e <UART_SetConfig+0x76>
 8003268:	f7ff fbc4 	bl	80029f4 <HAL_RCC_GetPCLK1Freq>
 800326c:	60f8      	str	r0, [r7, #12]
 800326e:	68fa      	ldr	r2, [r7, #12]
 8003270:	4613      	mov	r3, r2
 8003272:	009b      	lsls	r3, r3, #2
 8003274:	4413      	add	r3, r2
 8003276:	009a      	lsls	r2, r3, #2
 8003278:	441a      	add	r2, r3
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	685b      	ldr	r3, [r3, #4]
 800327e:	009b      	lsls	r3, r3, #2
 8003280:	fbb2 f3f3 	udiv	r3, r2, r3
 8003284:	4a22      	ldr	r2, [pc, #136]	; (8003310 <UART_SetConfig+0x118>)
 8003286:	fba2 2303 	umull	r2, r3, r2, r3
 800328a:	095b      	lsrs	r3, r3, #5
 800328c:	0119      	lsls	r1, r3, #4
 800328e:	68fa      	ldr	r2, [r7, #12]
 8003290:	4613      	mov	r3, r2
 8003292:	009b      	lsls	r3, r3, #2
 8003294:	4413      	add	r3, r2
 8003296:	009a      	lsls	r2, r3, #2
 8003298:	441a      	add	r2, r3
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	685b      	ldr	r3, [r3, #4]
 800329e:	009b      	lsls	r3, r3, #2
 80032a0:	fbb2 f2f3 	udiv	r2, r2, r3
 80032a4:	4b1a      	ldr	r3, [pc, #104]	; (8003310 <UART_SetConfig+0x118>)
 80032a6:	fba3 0302 	umull	r0, r3, r3, r2
 80032aa:	095b      	lsrs	r3, r3, #5
 80032ac:	2064      	movs	r0, #100	; 0x64
 80032ae:	fb00 f303 	mul.w	r3, r0, r3
 80032b2:	1ad3      	subs	r3, r2, r3
 80032b4:	011b      	lsls	r3, r3, #4
 80032b6:	3332      	adds	r3, #50	; 0x32
 80032b8:	4a15      	ldr	r2, [pc, #84]	; (8003310 <UART_SetConfig+0x118>)
 80032ba:	fba2 2303 	umull	r2, r3, r2, r3
 80032be:	095b      	lsrs	r3, r3, #5
 80032c0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80032c4:	4419      	add	r1, r3
 80032c6:	68fa      	ldr	r2, [r7, #12]
 80032c8:	4613      	mov	r3, r2
 80032ca:	009b      	lsls	r3, r3, #2
 80032cc:	4413      	add	r3, r2
 80032ce:	009a      	lsls	r2, r3, #2
 80032d0:	441a      	add	r2, r3
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	685b      	ldr	r3, [r3, #4]
 80032d6:	009b      	lsls	r3, r3, #2
 80032d8:	fbb2 f2f3 	udiv	r2, r2, r3
 80032dc:	4b0c      	ldr	r3, [pc, #48]	; (8003310 <UART_SetConfig+0x118>)
 80032de:	fba3 0302 	umull	r0, r3, r3, r2
 80032e2:	095b      	lsrs	r3, r3, #5
 80032e4:	2064      	movs	r0, #100	; 0x64
 80032e6:	fb00 f303 	mul.w	r3, r0, r3
 80032ea:	1ad3      	subs	r3, r2, r3
 80032ec:	011b      	lsls	r3, r3, #4
 80032ee:	3332      	adds	r3, #50	; 0x32
 80032f0:	4a07      	ldr	r2, [pc, #28]	; (8003310 <UART_SetConfig+0x118>)
 80032f2:	fba2 2303 	umull	r2, r3, r2, r3
 80032f6:	095b      	lsrs	r3, r3, #5
 80032f8:	f003 020f 	and.w	r2, r3, #15
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	440a      	add	r2, r1
 8003302:	609a      	str	r2, [r3, #8]
 8003304:	bf00      	nop
 8003306:	3710      	adds	r7, #16
 8003308:	46bd      	mov	sp, r7
 800330a:	bd80      	pop	{r7, pc}
 800330c:	40013800 	.word	0x40013800
 8003310:	51eb851f 	.word	0x51eb851f

08003314 <vListInitialise>:
 8003314:	b480      	push	{r7}
 8003316:	b083      	sub	sp, #12
 8003318:	af00      	add	r7, sp, #0
 800331a:	6078      	str	r0, [r7, #4]
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	f103 0208 	add.w	r2, r3, #8
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	605a      	str	r2, [r3, #4]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	f04f 32ff 	mov.w	r2, #4294967295
 800332c:	609a      	str	r2, [r3, #8]
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	f103 0208 	add.w	r2, r3, #8
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	60da      	str	r2, [r3, #12]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	f103 0208 	add.w	r2, r3, #8
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	611a      	str	r2, [r3, #16]
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	2200      	movs	r2, #0
 8003346:	601a      	str	r2, [r3, #0]
 8003348:	bf00      	nop
 800334a:	370c      	adds	r7, #12
 800334c:	46bd      	mov	sp, r7
 800334e:	bc80      	pop	{r7}
 8003350:	4770      	bx	lr

08003352 <vListInitialiseItem>:
 8003352:	b480      	push	{r7}
 8003354:	b083      	sub	sp, #12
 8003356:	af00      	add	r7, sp, #0
 8003358:	6078      	str	r0, [r7, #4]
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	2200      	movs	r2, #0
 800335e:	611a      	str	r2, [r3, #16]
 8003360:	bf00      	nop
 8003362:	370c      	adds	r7, #12
 8003364:	46bd      	mov	sp, r7
 8003366:	bc80      	pop	{r7}
 8003368:	4770      	bx	lr

0800336a <vListInsertEnd>:
 800336a:	b480      	push	{r7}
 800336c:	b085      	sub	sp, #20
 800336e:	af00      	add	r7, sp, #0
 8003370:	6078      	str	r0, [r7, #4]
 8003372:	6039      	str	r1, [r7, #0]
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	685b      	ldr	r3, [r3, #4]
 8003378:	60fb      	str	r3, [r7, #12]
 800337a:	683b      	ldr	r3, [r7, #0]
 800337c:	68fa      	ldr	r2, [r7, #12]
 800337e:	605a      	str	r2, [r3, #4]
 8003380:	68fb      	ldr	r3, [r7, #12]
 8003382:	689a      	ldr	r2, [r3, #8]
 8003384:	683b      	ldr	r3, [r7, #0]
 8003386:	609a      	str	r2, [r3, #8]
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	689b      	ldr	r3, [r3, #8]
 800338c:	683a      	ldr	r2, [r7, #0]
 800338e:	605a      	str	r2, [r3, #4]
 8003390:	68fb      	ldr	r3, [r7, #12]
 8003392:	683a      	ldr	r2, [r7, #0]
 8003394:	609a      	str	r2, [r3, #8]
 8003396:	683b      	ldr	r3, [r7, #0]
 8003398:	687a      	ldr	r2, [r7, #4]
 800339a:	611a      	str	r2, [r3, #16]
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	1c5a      	adds	r2, r3, #1
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	601a      	str	r2, [r3, #0]
 80033a6:	bf00      	nop
 80033a8:	3714      	adds	r7, #20
 80033aa:	46bd      	mov	sp, r7
 80033ac:	bc80      	pop	{r7}
 80033ae:	4770      	bx	lr

080033b0 <vListInsert>:
 80033b0:	b480      	push	{r7}
 80033b2:	b085      	sub	sp, #20
 80033b4:	af00      	add	r7, sp, #0
 80033b6:	6078      	str	r0, [r7, #4]
 80033b8:	6039      	str	r1, [r7, #0]
 80033ba:	683b      	ldr	r3, [r7, #0]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	60bb      	str	r3, [r7, #8]
 80033c0:	68bb      	ldr	r3, [r7, #8]
 80033c2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80033c6:	d103      	bne.n	80033d0 <vListInsert+0x20>
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	691b      	ldr	r3, [r3, #16]
 80033cc:	60fb      	str	r3, [r7, #12]
 80033ce:	e00c      	b.n	80033ea <vListInsert+0x3a>
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	3308      	adds	r3, #8
 80033d4:	60fb      	str	r3, [r7, #12]
 80033d6:	e002      	b.n	80033de <vListInsert+0x2e>
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	685b      	ldr	r3, [r3, #4]
 80033dc:	60fb      	str	r3, [r7, #12]
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	685b      	ldr	r3, [r3, #4]
 80033e2:	681b      	ldr	r3, [r3, #0]
 80033e4:	68ba      	ldr	r2, [r7, #8]
 80033e6:	429a      	cmp	r2, r3
 80033e8:	d2f6      	bcs.n	80033d8 <vListInsert+0x28>
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	685a      	ldr	r2, [r3, #4]
 80033ee:	683b      	ldr	r3, [r7, #0]
 80033f0:	605a      	str	r2, [r3, #4]
 80033f2:	683b      	ldr	r3, [r7, #0]
 80033f4:	685b      	ldr	r3, [r3, #4]
 80033f6:	683a      	ldr	r2, [r7, #0]
 80033f8:	609a      	str	r2, [r3, #8]
 80033fa:	683b      	ldr	r3, [r7, #0]
 80033fc:	68fa      	ldr	r2, [r7, #12]
 80033fe:	609a      	str	r2, [r3, #8]
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	683a      	ldr	r2, [r7, #0]
 8003404:	605a      	str	r2, [r3, #4]
 8003406:	683b      	ldr	r3, [r7, #0]
 8003408:	687a      	ldr	r2, [r7, #4]
 800340a:	611a      	str	r2, [r3, #16]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	1c5a      	adds	r2, r3, #1
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	601a      	str	r2, [r3, #0]
 8003416:	bf00      	nop
 8003418:	3714      	adds	r7, #20
 800341a:	46bd      	mov	sp, r7
 800341c:	bc80      	pop	{r7}
 800341e:	4770      	bx	lr

08003420 <uxListRemove>:
 8003420:	b480      	push	{r7}
 8003422:	b085      	sub	sp, #20
 8003424:	af00      	add	r7, sp, #0
 8003426:	6078      	str	r0, [r7, #4]
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	691b      	ldr	r3, [r3, #16]
 800342c:	60fb      	str	r3, [r7, #12]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	685b      	ldr	r3, [r3, #4]
 8003432:	687a      	ldr	r2, [r7, #4]
 8003434:	6892      	ldr	r2, [r2, #8]
 8003436:	609a      	str	r2, [r3, #8]
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	689b      	ldr	r3, [r3, #8]
 800343c:	687a      	ldr	r2, [r7, #4]
 800343e:	6852      	ldr	r2, [r2, #4]
 8003440:	605a      	str	r2, [r3, #4]
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	685b      	ldr	r3, [r3, #4]
 8003446:	687a      	ldr	r2, [r7, #4]
 8003448:	429a      	cmp	r2, r3
 800344a:	d103      	bne.n	8003454 <uxListRemove+0x34>
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	689a      	ldr	r2, [r3, #8]
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	605a      	str	r2, [r3, #4]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	2200      	movs	r2, #0
 8003458:	611a      	str	r2, [r3, #16]
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	1e5a      	subs	r2, r3, #1
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	601a      	str	r2, [r3, #0]
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	4618      	mov	r0, r3
 800346a:	3714      	adds	r7, #20
 800346c:	46bd      	mov	sp, r7
 800346e:	bc80      	pop	{r7}
 8003470:	4770      	bx	lr
	...

08003474 <xQueueGenericReset>:
 8003474:	b580      	push	{r7, lr}
 8003476:	b084      	sub	sp, #16
 8003478:	af00      	add	r7, sp, #0
 800347a:	6078      	str	r0, [r7, #4]
 800347c:	6039      	str	r1, [r7, #0]
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	60fb      	str	r3, [r7, #12]
 8003482:	68fb      	ldr	r3, [r7, #12]
 8003484:	2b00      	cmp	r3, #0
 8003486:	d10a      	bne.n	800349e <xQueueGenericReset+0x2a>
 8003488:	f04f 0350 	mov.w	r3, #80	; 0x50
 800348c:	f383 8811 	msr	BASEPRI, r3
 8003490:	f3bf 8f6f 	isb	sy
 8003494:	f3bf 8f4f 	dsb	sy
 8003498:	60bb      	str	r3, [r7, #8]
 800349a:	bf00      	nop
 800349c:	e7fe      	b.n	800349c <xQueueGenericReset+0x28>
 800349e:	f001 fc1d 	bl	8004cdc <vPortEnterCritical>
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	681a      	ldr	r2, [r3, #0]
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80034aa:	68f9      	ldr	r1, [r7, #12]
 80034ac:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80034ae:	fb01 f303 	mul.w	r3, r1, r3
 80034b2:	441a      	add	r2, r3
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	605a      	str	r2, [r3, #4]
 80034b8:	68fb      	ldr	r3, [r7, #12]
 80034ba:	2200      	movs	r2, #0
 80034bc:	639a      	str	r2, [r3, #56]	; 0x38
 80034be:	68fb      	ldr	r3, [r7, #12]
 80034c0:	681a      	ldr	r2, [r3, #0]
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	609a      	str	r2, [r3, #8]
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	681a      	ldr	r2, [r3, #0]
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80034ce:	3b01      	subs	r3, #1
 80034d0:	68f9      	ldr	r1, [r7, #12]
 80034d2:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80034d4:	fb01 f303 	mul.w	r3, r1, r3
 80034d8:	441a      	add	r2, r3
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	60da      	str	r2, [r3, #12]
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	22ff      	movs	r2, #255	; 0xff
 80034e2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	22ff      	movs	r2, #255	; 0xff
 80034ea:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80034ee:	683b      	ldr	r3, [r7, #0]
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	d114      	bne.n	800351e <xQueueGenericReset+0xaa>
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	691b      	ldr	r3, [r3, #16]
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	d01a      	beq.n	8003532 <xQueueGenericReset+0xbe>
 80034fc:	68fb      	ldr	r3, [r7, #12]
 80034fe:	3310      	adds	r3, #16
 8003500:	4618      	mov	r0, r3
 8003502:	f001 f833 	bl	800456c <xTaskRemoveFromEventList>
 8003506:	4603      	mov	r3, r0
 8003508:	2b00      	cmp	r3, #0
 800350a:	d012      	beq.n	8003532 <xQueueGenericReset+0xbe>
 800350c:	4b0c      	ldr	r3, [pc, #48]	; (8003540 <xQueueGenericReset+0xcc>)
 800350e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003512:	601a      	str	r2, [r3, #0]
 8003514:	f3bf 8f4f 	dsb	sy
 8003518:	f3bf 8f6f 	isb	sy
 800351c:	e009      	b.n	8003532 <xQueueGenericReset+0xbe>
 800351e:	68fb      	ldr	r3, [r7, #12]
 8003520:	3310      	adds	r3, #16
 8003522:	4618      	mov	r0, r3
 8003524:	f7ff fef6 	bl	8003314 <vListInitialise>
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	3324      	adds	r3, #36	; 0x24
 800352c:	4618      	mov	r0, r3
 800352e:	f7ff fef1 	bl	8003314 <vListInitialise>
 8003532:	f001 fc03 	bl	8004d3c <vPortExitCritical>
 8003536:	2301      	movs	r3, #1
 8003538:	4618      	mov	r0, r3
 800353a:	3710      	adds	r7, #16
 800353c:	46bd      	mov	sp, r7
 800353e:	bd80      	pop	{r7, pc}
 8003540:	e000ed04 	.word	0xe000ed04

08003544 <xQueueGenericCreate>:
 8003544:	b580      	push	{r7, lr}
 8003546:	b08a      	sub	sp, #40	; 0x28
 8003548:	af02      	add	r7, sp, #8
 800354a:	60f8      	str	r0, [r7, #12]
 800354c:	60b9      	str	r1, [r7, #8]
 800354e:	4613      	mov	r3, r2
 8003550:	71fb      	strb	r3, [r7, #7]
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	2b00      	cmp	r3, #0
 8003556:	d10a      	bne.n	800356e <xQueueGenericCreate+0x2a>
 8003558:	f04f 0350 	mov.w	r3, #80	; 0x50
 800355c:	f383 8811 	msr	BASEPRI, r3
 8003560:	f3bf 8f6f 	isb	sy
 8003564:	f3bf 8f4f 	dsb	sy
 8003568:	613b      	str	r3, [r7, #16]
 800356a:	bf00      	nop
 800356c:	e7fe      	b.n	800356c <xQueueGenericCreate+0x28>
 800356e:	68bb      	ldr	r3, [r7, #8]
 8003570:	2b00      	cmp	r3, #0
 8003572:	d102      	bne.n	800357a <xQueueGenericCreate+0x36>
 8003574:	2300      	movs	r3, #0
 8003576:	61fb      	str	r3, [r7, #28]
 8003578:	e004      	b.n	8003584 <xQueueGenericCreate+0x40>
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	68ba      	ldr	r2, [r7, #8]
 800357e:	fb02 f303 	mul.w	r3, r2, r3
 8003582:	61fb      	str	r3, [r7, #28]
 8003584:	69fb      	ldr	r3, [r7, #28]
 8003586:	3348      	adds	r3, #72	; 0x48
 8003588:	4618      	mov	r0, r3
 800358a:	f001 fc69 	bl	8004e60 <pvPortMalloc>
 800358e:	61b8      	str	r0, [r7, #24]
 8003590:	69bb      	ldr	r3, [r7, #24]
 8003592:	2b00      	cmp	r3, #0
 8003594:	d00f      	beq.n	80035b6 <xQueueGenericCreate+0x72>
 8003596:	69bb      	ldr	r3, [r7, #24]
 8003598:	3348      	adds	r3, #72	; 0x48
 800359a:	617b      	str	r3, [r7, #20]
 800359c:	69bb      	ldr	r3, [r7, #24]
 800359e:	2200      	movs	r2, #0
 80035a0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80035a4:	79fa      	ldrb	r2, [r7, #7]
 80035a6:	69bb      	ldr	r3, [r7, #24]
 80035a8:	9300      	str	r3, [sp, #0]
 80035aa:	4613      	mov	r3, r2
 80035ac:	697a      	ldr	r2, [r7, #20]
 80035ae:	68b9      	ldr	r1, [r7, #8]
 80035b0:	68f8      	ldr	r0, [r7, #12]
 80035b2:	f000 f805 	bl	80035c0 <prvInitialiseNewQueue>
 80035b6:	69bb      	ldr	r3, [r7, #24]
 80035b8:	4618      	mov	r0, r3
 80035ba:	3720      	adds	r7, #32
 80035bc:	46bd      	mov	sp, r7
 80035be:	bd80      	pop	{r7, pc}

080035c0 <prvInitialiseNewQueue>:
 80035c0:	b580      	push	{r7, lr}
 80035c2:	b084      	sub	sp, #16
 80035c4:	af00      	add	r7, sp, #0
 80035c6:	60f8      	str	r0, [r7, #12]
 80035c8:	60b9      	str	r1, [r7, #8]
 80035ca:	607a      	str	r2, [r7, #4]
 80035cc:	70fb      	strb	r3, [r7, #3]
 80035ce:	68bb      	ldr	r3, [r7, #8]
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	d103      	bne.n	80035dc <prvInitialiseNewQueue+0x1c>
 80035d4:	69bb      	ldr	r3, [r7, #24]
 80035d6:	69ba      	ldr	r2, [r7, #24]
 80035d8:	601a      	str	r2, [r3, #0]
 80035da:	e002      	b.n	80035e2 <prvInitialiseNewQueue+0x22>
 80035dc:	69bb      	ldr	r3, [r7, #24]
 80035de:	687a      	ldr	r2, [r7, #4]
 80035e0:	601a      	str	r2, [r3, #0]
 80035e2:	69bb      	ldr	r3, [r7, #24]
 80035e4:	68fa      	ldr	r2, [r7, #12]
 80035e6:	63da      	str	r2, [r3, #60]	; 0x3c
 80035e8:	69bb      	ldr	r3, [r7, #24]
 80035ea:	68ba      	ldr	r2, [r7, #8]
 80035ec:	641a      	str	r2, [r3, #64]	; 0x40
 80035ee:	2101      	movs	r1, #1
 80035f0:	69b8      	ldr	r0, [r7, #24]
 80035f2:	f7ff ff3f 	bl	8003474 <xQueueGenericReset>
 80035f6:	bf00      	nop
 80035f8:	3710      	adds	r7, #16
 80035fa:	46bd      	mov	sp, r7
 80035fc:	bd80      	pop	{r7, pc}
	...

08003600 <xQueueGenericSend>:
 8003600:	b580      	push	{r7, lr}
 8003602:	b08e      	sub	sp, #56	; 0x38
 8003604:	af00      	add	r7, sp, #0
 8003606:	60f8      	str	r0, [r7, #12]
 8003608:	60b9      	str	r1, [r7, #8]
 800360a:	607a      	str	r2, [r7, #4]
 800360c:	603b      	str	r3, [r7, #0]
 800360e:	2300      	movs	r3, #0
 8003610:	637b      	str	r3, [r7, #52]	; 0x34
 8003612:	68fb      	ldr	r3, [r7, #12]
 8003614:	633b      	str	r3, [r7, #48]	; 0x30
 8003616:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003618:	2b00      	cmp	r3, #0
 800361a:	d10a      	bne.n	8003632 <xQueueGenericSend+0x32>
 800361c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003620:	f383 8811 	msr	BASEPRI, r3
 8003624:	f3bf 8f6f 	isb	sy
 8003628:	f3bf 8f4f 	dsb	sy
 800362c:	62bb      	str	r3, [r7, #40]	; 0x28
 800362e:	bf00      	nop
 8003630:	e7fe      	b.n	8003630 <xQueueGenericSend+0x30>
 8003632:	68bb      	ldr	r3, [r7, #8]
 8003634:	2b00      	cmp	r3, #0
 8003636:	d103      	bne.n	8003640 <xQueueGenericSend+0x40>
 8003638:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800363a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800363c:	2b00      	cmp	r3, #0
 800363e:	d101      	bne.n	8003644 <xQueueGenericSend+0x44>
 8003640:	2301      	movs	r3, #1
 8003642:	e000      	b.n	8003646 <xQueueGenericSend+0x46>
 8003644:	2300      	movs	r3, #0
 8003646:	2b00      	cmp	r3, #0
 8003648:	d10a      	bne.n	8003660 <xQueueGenericSend+0x60>
 800364a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800364e:	f383 8811 	msr	BASEPRI, r3
 8003652:	f3bf 8f6f 	isb	sy
 8003656:	f3bf 8f4f 	dsb	sy
 800365a:	627b      	str	r3, [r7, #36]	; 0x24
 800365c:	bf00      	nop
 800365e:	e7fe      	b.n	800365e <xQueueGenericSend+0x5e>
 8003660:	683b      	ldr	r3, [r7, #0]
 8003662:	2b02      	cmp	r3, #2
 8003664:	d103      	bne.n	800366e <xQueueGenericSend+0x6e>
 8003666:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003668:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800366a:	2b01      	cmp	r3, #1
 800366c:	d101      	bne.n	8003672 <xQueueGenericSend+0x72>
 800366e:	2301      	movs	r3, #1
 8003670:	e000      	b.n	8003674 <xQueueGenericSend+0x74>
 8003672:	2300      	movs	r3, #0
 8003674:	2b00      	cmp	r3, #0
 8003676:	d10a      	bne.n	800368e <xQueueGenericSend+0x8e>
 8003678:	f04f 0350 	mov.w	r3, #80	; 0x50
 800367c:	f383 8811 	msr	BASEPRI, r3
 8003680:	f3bf 8f6f 	isb	sy
 8003684:	f3bf 8f4f 	dsb	sy
 8003688:	623b      	str	r3, [r7, #32]
 800368a:	bf00      	nop
 800368c:	e7fe      	b.n	800368c <xQueueGenericSend+0x8c>
 800368e:	f001 f92d 	bl	80048ec <xTaskGetSchedulerState>
 8003692:	4603      	mov	r3, r0
 8003694:	2b00      	cmp	r3, #0
 8003696:	d102      	bne.n	800369e <xQueueGenericSend+0x9e>
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	2b00      	cmp	r3, #0
 800369c:	d101      	bne.n	80036a2 <xQueueGenericSend+0xa2>
 800369e:	2301      	movs	r3, #1
 80036a0:	e000      	b.n	80036a4 <xQueueGenericSend+0xa4>
 80036a2:	2300      	movs	r3, #0
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d10a      	bne.n	80036be <xQueueGenericSend+0xbe>
 80036a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036ac:	f383 8811 	msr	BASEPRI, r3
 80036b0:	f3bf 8f6f 	isb	sy
 80036b4:	f3bf 8f4f 	dsb	sy
 80036b8:	61fb      	str	r3, [r7, #28]
 80036ba:	bf00      	nop
 80036bc:	e7fe      	b.n	80036bc <xQueueGenericSend+0xbc>
 80036be:	f001 fb0d 	bl	8004cdc <vPortEnterCritical>
 80036c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80036c4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80036c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80036c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80036ca:	429a      	cmp	r2, r3
 80036cc:	d302      	bcc.n	80036d4 <xQueueGenericSend+0xd4>
 80036ce:	683b      	ldr	r3, [r7, #0]
 80036d0:	2b02      	cmp	r3, #2
 80036d2:	d129      	bne.n	8003728 <xQueueGenericSend+0x128>
 80036d4:	683a      	ldr	r2, [r7, #0]
 80036d6:	68b9      	ldr	r1, [r7, #8]
 80036d8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80036da:	f000 f96f 	bl	80039bc <prvCopyDataToQueue>
 80036de:	62f8      	str	r0, [r7, #44]	; 0x2c
 80036e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80036e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036e4:	2b00      	cmp	r3, #0
 80036e6:	d010      	beq.n	800370a <xQueueGenericSend+0x10a>
 80036e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80036ea:	3324      	adds	r3, #36	; 0x24
 80036ec:	4618      	mov	r0, r3
 80036ee:	f000 ff3d 	bl	800456c <xTaskRemoveFromEventList>
 80036f2:	4603      	mov	r3, r0
 80036f4:	2b00      	cmp	r3, #0
 80036f6:	d013      	beq.n	8003720 <xQueueGenericSend+0x120>
 80036f8:	4b3f      	ldr	r3, [pc, #252]	; (80037f8 <xQueueGenericSend+0x1f8>)
 80036fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80036fe:	601a      	str	r2, [r3, #0]
 8003700:	f3bf 8f4f 	dsb	sy
 8003704:	f3bf 8f6f 	isb	sy
 8003708:	e00a      	b.n	8003720 <xQueueGenericSend+0x120>
 800370a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800370c:	2b00      	cmp	r3, #0
 800370e:	d007      	beq.n	8003720 <xQueueGenericSend+0x120>
 8003710:	4b39      	ldr	r3, [pc, #228]	; (80037f8 <xQueueGenericSend+0x1f8>)
 8003712:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003716:	601a      	str	r2, [r3, #0]
 8003718:	f3bf 8f4f 	dsb	sy
 800371c:	f3bf 8f6f 	isb	sy
 8003720:	f001 fb0c 	bl	8004d3c <vPortExitCritical>
 8003724:	2301      	movs	r3, #1
 8003726:	e063      	b.n	80037f0 <xQueueGenericSend+0x1f0>
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	2b00      	cmp	r3, #0
 800372c:	d103      	bne.n	8003736 <xQueueGenericSend+0x136>
 800372e:	f001 fb05 	bl	8004d3c <vPortExitCritical>
 8003732:	2300      	movs	r3, #0
 8003734:	e05c      	b.n	80037f0 <xQueueGenericSend+0x1f0>
 8003736:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003738:	2b00      	cmp	r3, #0
 800373a:	d106      	bne.n	800374a <xQueueGenericSend+0x14a>
 800373c:	f107 0314 	add.w	r3, r7, #20
 8003740:	4618      	mov	r0, r3
 8003742:	f000 ff75 	bl	8004630 <vTaskInternalSetTimeOutState>
 8003746:	2301      	movs	r3, #1
 8003748:	637b      	str	r3, [r7, #52]	; 0x34
 800374a:	f001 faf7 	bl	8004d3c <vPortExitCritical>
 800374e:	f000 fced 	bl	800412c <vTaskSuspendAll>
 8003752:	f001 fac3 	bl	8004cdc <vPortEnterCritical>
 8003756:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003758:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800375c:	b25b      	sxtb	r3, r3
 800375e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003762:	d103      	bne.n	800376c <xQueueGenericSend+0x16c>
 8003764:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003766:	2200      	movs	r2, #0
 8003768:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800376c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800376e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8003772:	b25b      	sxtb	r3, r3
 8003774:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003778:	d103      	bne.n	8003782 <xQueueGenericSend+0x182>
 800377a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800377c:	2200      	movs	r2, #0
 800377e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003782:	f001 fadb 	bl	8004d3c <vPortExitCritical>
 8003786:	1d3a      	adds	r2, r7, #4
 8003788:	f107 0314 	add.w	r3, r7, #20
 800378c:	4611      	mov	r1, r2
 800378e:	4618      	mov	r0, r3
 8003790:	f000 ff64 	bl	800465c <xTaskCheckForTimeOut>
 8003794:	4603      	mov	r3, r0
 8003796:	2b00      	cmp	r3, #0
 8003798:	d124      	bne.n	80037e4 <xQueueGenericSend+0x1e4>
 800379a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800379c:	f000 fa06 	bl	8003bac <prvIsQueueFull>
 80037a0:	4603      	mov	r3, r0
 80037a2:	2b00      	cmp	r3, #0
 80037a4:	d018      	beq.n	80037d8 <xQueueGenericSend+0x1d8>
 80037a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80037a8:	3310      	adds	r3, #16
 80037aa:	687a      	ldr	r2, [r7, #4]
 80037ac:	4611      	mov	r1, r2
 80037ae:	4618      	mov	r0, r3
 80037b0:	f000 feb8 	bl	8004524 <vTaskPlaceOnEventList>
 80037b4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80037b6:	f000 f991 	bl	8003adc <prvUnlockQueue>
 80037ba:	f000 fcc5 	bl	8004148 <xTaskResumeAll>
 80037be:	4603      	mov	r3, r0
 80037c0:	2b00      	cmp	r3, #0
 80037c2:	f47f af7c 	bne.w	80036be <xQueueGenericSend+0xbe>
 80037c6:	4b0c      	ldr	r3, [pc, #48]	; (80037f8 <xQueueGenericSend+0x1f8>)
 80037c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80037cc:	601a      	str	r2, [r3, #0]
 80037ce:	f3bf 8f4f 	dsb	sy
 80037d2:	f3bf 8f6f 	isb	sy
 80037d6:	e772      	b.n	80036be <xQueueGenericSend+0xbe>
 80037d8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80037da:	f000 f97f 	bl	8003adc <prvUnlockQueue>
 80037de:	f000 fcb3 	bl	8004148 <xTaskResumeAll>
 80037e2:	e76c      	b.n	80036be <xQueueGenericSend+0xbe>
 80037e4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80037e6:	f000 f979 	bl	8003adc <prvUnlockQueue>
 80037ea:	f000 fcad 	bl	8004148 <xTaskResumeAll>
 80037ee:	2300      	movs	r3, #0
 80037f0:	4618      	mov	r0, r3
 80037f2:	3738      	adds	r7, #56	; 0x38
 80037f4:	46bd      	mov	sp, r7
 80037f6:	bd80      	pop	{r7, pc}
 80037f8:	e000ed04 	.word	0xe000ed04

080037fc <xQueueReceive>:
 80037fc:	b580      	push	{r7, lr}
 80037fe:	b08c      	sub	sp, #48	; 0x30
 8003800:	af00      	add	r7, sp, #0
 8003802:	60f8      	str	r0, [r7, #12]
 8003804:	60b9      	str	r1, [r7, #8]
 8003806:	607a      	str	r2, [r7, #4]
 8003808:	2300      	movs	r3, #0
 800380a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800380c:	68fb      	ldr	r3, [r7, #12]
 800380e:	62bb      	str	r3, [r7, #40]	; 0x28
 8003810:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003812:	2b00      	cmp	r3, #0
 8003814:	d10a      	bne.n	800382c <xQueueReceive+0x30>
 8003816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800381a:	f383 8811 	msr	BASEPRI, r3
 800381e:	f3bf 8f6f 	isb	sy
 8003822:	f3bf 8f4f 	dsb	sy
 8003826:	623b      	str	r3, [r7, #32]
 8003828:	bf00      	nop
 800382a:	e7fe      	b.n	800382a <xQueueReceive+0x2e>
 800382c:	68bb      	ldr	r3, [r7, #8]
 800382e:	2b00      	cmp	r3, #0
 8003830:	d103      	bne.n	800383a <xQueueReceive+0x3e>
 8003832:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003834:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003836:	2b00      	cmp	r3, #0
 8003838:	d101      	bne.n	800383e <xQueueReceive+0x42>
 800383a:	2301      	movs	r3, #1
 800383c:	e000      	b.n	8003840 <xQueueReceive+0x44>
 800383e:	2300      	movs	r3, #0
 8003840:	2b00      	cmp	r3, #0
 8003842:	d10a      	bne.n	800385a <xQueueReceive+0x5e>
 8003844:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003848:	f383 8811 	msr	BASEPRI, r3
 800384c:	f3bf 8f6f 	isb	sy
 8003850:	f3bf 8f4f 	dsb	sy
 8003854:	61fb      	str	r3, [r7, #28]
 8003856:	bf00      	nop
 8003858:	e7fe      	b.n	8003858 <xQueueReceive+0x5c>
 800385a:	f001 f847 	bl	80048ec <xTaskGetSchedulerState>
 800385e:	4603      	mov	r3, r0
 8003860:	2b00      	cmp	r3, #0
 8003862:	d102      	bne.n	800386a <xQueueReceive+0x6e>
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	2b00      	cmp	r3, #0
 8003868:	d101      	bne.n	800386e <xQueueReceive+0x72>
 800386a:	2301      	movs	r3, #1
 800386c:	e000      	b.n	8003870 <xQueueReceive+0x74>
 800386e:	2300      	movs	r3, #0
 8003870:	2b00      	cmp	r3, #0
 8003872:	d10a      	bne.n	800388a <xQueueReceive+0x8e>
 8003874:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003878:	f383 8811 	msr	BASEPRI, r3
 800387c:	f3bf 8f6f 	isb	sy
 8003880:	f3bf 8f4f 	dsb	sy
 8003884:	61bb      	str	r3, [r7, #24]
 8003886:	bf00      	nop
 8003888:	e7fe      	b.n	8003888 <xQueueReceive+0x8c>
 800388a:	f001 fa27 	bl	8004cdc <vPortEnterCritical>
 800388e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003890:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003892:	627b      	str	r3, [r7, #36]	; 0x24
 8003894:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003896:	2b00      	cmp	r3, #0
 8003898:	d01f      	beq.n	80038da <xQueueReceive+0xde>
 800389a:	68b9      	ldr	r1, [r7, #8]
 800389c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800389e:	f000 f8f7 	bl	8003a90 <prvCopyDataFromQueue>
 80038a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038a4:	1e5a      	subs	r2, r3, #1
 80038a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80038a8:	639a      	str	r2, [r3, #56]	; 0x38
 80038aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80038ac:	691b      	ldr	r3, [r3, #16]
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d00f      	beq.n	80038d2 <xQueueReceive+0xd6>
 80038b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80038b4:	3310      	adds	r3, #16
 80038b6:	4618      	mov	r0, r3
 80038b8:	f000 fe58 	bl	800456c <xTaskRemoveFromEventList>
 80038bc:	4603      	mov	r3, r0
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d007      	beq.n	80038d2 <xQueueReceive+0xd6>
 80038c2:	4b3d      	ldr	r3, [pc, #244]	; (80039b8 <xQueueReceive+0x1bc>)
 80038c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80038c8:	601a      	str	r2, [r3, #0]
 80038ca:	f3bf 8f4f 	dsb	sy
 80038ce:	f3bf 8f6f 	isb	sy
 80038d2:	f001 fa33 	bl	8004d3c <vPortExitCritical>
 80038d6:	2301      	movs	r3, #1
 80038d8:	e069      	b.n	80039ae <xQueueReceive+0x1b2>
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d103      	bne.n	80038e8 <xQueueReceive+0xec>
 80038e0:	f001 fa2c 	bl	8004d3c <vPortExitCritical>
 80038e4:	2300      	movs	r3, #0
 80038e6:	e062      	b.n	80039ae <xQueueReceive+0x1b2>
 80038e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d106      	bne.n	80038fc <xQueueReceive+0x100>
 80038ee:	f107 0310 	add.w	r3, r7, #16
 80038f2:	4618      	mov	r0, r3
 80038f4:	f000 fe9c 	bl	8004630 <vTaskInternalSetTimeOutState>
 80038f8:	2301      	movs	r3, #1
 80038fa:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038fc:	f001 fa1e 	bl	8004d3c <vPortExitCritical>
 8003900:	f000 fc14 	bl	800412c <vTaskSuspendAll>
 8003904:	f001 f9ea 	bl	8004cdc <vPortEnterCritical>
 8003908:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800390a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800390e:	b25b      	sxtb	r3, r3
 8003910:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003914:	d103      	bne.n	800391e <xQueueReceive+0x122>
 8003916:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003918:	2200      	movs	r2, #0
 800391a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800391e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003920:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8003924:	b25b      	sxtb	r3, r3
 8003926:	f1b3 3fff 	cmp.w	r3, #4294967295
 800392a:	d103      	bne.n	8003934 <xQueueReceive+0x138>
 800392c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800392e:	2200      	movs	r2, #0
 8003930:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003934:	f001 fa02 	bl	8004d3c <vPortExitCritical>
 8003938:	1d3a      	adds	r2, r7, #4
 800393a:	f107 0310 	add.w	r3, r7, #16
 800393e:	4611      	mov	r1, r2
 8003940:	4618      	mov	r0, r3
 8003942:	f000 fe8b 	bl	800465c <xTaskCheckForTimeOut>
 8003946:	4603      	mov	r3, r0
 8003948:	2b00      	cmp	r3, #0
 800394a:	d123      	bne.n	8003994 <xQueueReceive+0x198>
 800394c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800394e:	f000 f917 	bl	8003b80 <prvIsQueueEmpty>
 8003952:	4603      	mov	r3, r0
 8003954:	2b00      	cmp	r3, #0
 8003956:	d017      	beq.n	8003988 <xQueueReceive+0x18c>
 8003958:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800395a:	3324      	adds	r3, #36	; 0x24
 800395c:	687a      	ldr	r2, [r7, #4]
 800395e:	4611      	mov	r1, r2
 8003960:	4618      	mov	r0, r3
 8003962:	f000 fddf 	bl	8004524 <vTaskPlaceOnEventList>
 8003966:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003968:	f000 f8b8 	bl	8003adc <prvUnlockQueue>
 800396c:	f000 fbec 	bl	8004148 <xTaskResumeAll>
 8003970:	4603      	mov	r3, r0
 8003972:	2b00      	cmp	r3, #0
 8003974:	d189      	bne.n	800388a <xQueueReceive+0x8e>
 8003976:	4b10      	ldr	r3, [pc, #64]	; (80039b8 <xQueueReceive+0x1bc>)
 8003978:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800397c:	601a      	str	r2, [r3, #0]
 800397e:	f3bf 8f4f 	dsb	sy
 8003982:	f3bf 8f6f 	isb	sy
 8003986:	e780      	b.n	800388a <xQueueReceive+0x8e>
 8003988:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800398a:	f000 f8a7 	bl	8003adc <prvUnlockQueue>
 800398e:	f000 fbdb 	bl	8004148 <xTaskResumeAll>
 8003992:	e77a      	b.n	800388a <xQueueReceive+0x8e>
 8003994:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003996:	f000 f8a1 	bl	8003adc <prvUnlockQueue>
 800399a:	f000 fbd5 	bl	8004148 <xTaskResumeAll>
 800399e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80039a0:	f000 f8ee 	bl	8003b80 <prvIsQueueEmpty>
 80039a4:	4603      	mov	r3, r0
 80039a6:	2b00      	cmp	r3, #0
 80039a8:	f43f af6f 	beq.w	800388a <xQueueReceive+0x8e>
 80039ac:	2300      	movs	r3, #0
 80039ae:	4618      	mov	r0, r3
 80039b0:	3730      	adds	r7, #48	; 0x30
 80039b2:	46bd      	mov	sp, r7
 80039b4:	bd80      	pop	{r7, pc}
 80039b6:	bf00      	nop
 80039b8:	e000ed04 	.word	0xe000ed04

080039bc <prvCopyDataToQueue>:
 80039bc:	b580      	push	{r7, lr}
 80039be:	b086      	sub	sp, #24
 80039c0:	af00      	add	r7, sp, #0
 80039c2:	60f8      	str	r0, [r7, #12]
 80039c4:	60b9      	str	r1, [r7, #8]
 80039c6:	607a      	str	r2, [r7, #4]
 80039c8:	2300      	movs	r3, #0
 80039ca:	617b      	str	r3, [r7, #20]
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80039d0:	613b      	str	r3, [r7, #16]
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d10d      	bne.n	80039f6 <prvCopyDataToQueue+0x3a>
 80039da:	68fb      	ldr	r3, [r7, #12]
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d14d      	bne.n	8003a7e <prvCopyDataToQueue+0xc2>
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	685b      	ldr	r3, [r3, #4]
 80039e6:	4618      	mov	r0, r3
 80039e8:	f000 ff9e 	bl	8004928 <xTaskPriorityDisinherit>
 80039ec:	6178      	str	r0, [r7, #20]
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	2200      	movs	r2, #0
 80039f2:	605a      	str	r2, [r3, #4]
 80039f4:	e043      	b.n	8003a7e <prvCopyDataToQueue+0xc2>
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d119      	bne.n	8003a30 <prvCopyDataToQueue+0x74>
 80039fc:	68fb      	ldr	r3, [r7, #12]
 80039fe:	6898      	ldr	r0, [r3, #8]
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a04:	461a      	mov	r2, r3
 8003a06:	68b9      	ldr	r1, [r7, #8]
 8003a08:	f001 fe8b 	bl	8005722 <memcpy>
 8003a0c:	68fb      	ldr	r3, [r7, #12]
 8003a0e:	689a      	ldr	r2, [r3, #8]
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a14:	441a      	add	r2, r3
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	609a      	str	r2, [r3, #8]
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	689a      	ldr	r2, [r3, #8]
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	685b      	ldr	r3, [r3, #4]
 8003a22:	429a      	cmp	r2, r3
 8003a24:	d32b      	bcc.n	8003a7e <prvCopyDataToQueue+0xc2>
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	681a      	ldr	r2, [r3, #0]
 8003a2a:	68fb      	ldr	r3, [r7, #12]
 8003a2c:	609a      	str	r2, [r3, #8]
 8003a2e:	e026      	b.n	8003a7e <prvCopyDataToQueue+0xc2>
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	68d8      	ldr	r0, [r3, #12]
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a38:	461a      	mov	r2, r3
 8003a3a:	68b9      	ldr	r1, [r7, #8]
 8003a3c:	f001 fe71 	bl	8005722 <memcpy>
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	68da      	ldr	r2, [r3, #12]
 8003a44:	68fb      	ldr	r3, [r7, #12]
 8003a46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a48:	425b      	negs	r3, r3
 8003a4a:	441a      	add	r2, r3
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	60da      	str	r2, [r3, #12]
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	68da      	ldr	r2, [r3, #12]
 8003a54:	68fb      	ldr	r3, [r7, #12]
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	429a      	cmp	r2, r3
 8003a5a:	d207      	bcs.n	8003a6c <prvCopyDataToQueue+0xb0>
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	685a      	ldr	r2, [r3, #4]
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a64:	425b      	negs	r3, r3
 8003a66:	441a      	add	r2, r3
 8003a68:	68fb      	ldr	r3, [r7, #12]
 8003a6a:	60da      	str	r2, [r3, #12]
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	2b02      	cmp	r3, #2
 8003a70:	d105      	bne.n	8003a7e <prvCopyDataToQueue+0xc2>
 8003a72:	693b      	ldr	r3, [r7, #16]
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d002      	beq.n	8003a7e <prvCopyDataToQueue+0xc2>
 8003a78:	693b      	ldr	r3, [r7, #16]
 8003a7a:	3b01      	subs	r3, #1
 8003a7c:	613b      	str	r3, [r7, #16]
 8003a7e:	693b      	ldr	r3, [r7, #16]
 8003a80:	1c5a      	adds	r2, r3, #1
 8003a82:	68fb      	ldr	r3, [r7, #12]
 8003a84:	639a      	str	r2, [r3, #56]	; 0x38
 8003a86:	697b      	ldr	r3, [r7, #20]
 8003a88:	4618      	mov	r0, r3
 8003a8a:	3718      	adds	r7, #24
 8003a8c:	46bd      	mov	sp, r7
 8003a8e:	bd80      	pop	{r7, pc}

08003a90 <prvCopyDataFromQueue>:
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b082      	sub	sp, #8
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]
 8003a98:	6039      	str	r1, [r7, #0]
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d018      	beq.n	8003ad4 <prvCopyDataFromQueue+0x44>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	68da      	ldr	r2, [r3, #12]
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003aaa:	441a      	add	r2, r3
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	60da      	str	r2, [r3, #12]
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	68da      	ldr	r2, [r3, #12]
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	685b      	ldr	r3, [r3, #4]
 8003ab8:	429a      	cmp	r2, r3
 8003aba:	d303      	bcc.n	8003ac4 <prvCopyDataFromQueue+0x34>
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	681a      	ldr	r2, [r3, #0]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	60da      	str	r2, [r3, #12]
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	68d9      	ldr	r1, [r3, #12]
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003acc:	461a      	mov	r2, r3
 8003ace:	6838      	ldr	r0, [r7, #0]
 8003ad0:	f001 fe27 	bl	8005722 <memcpy>
 8003ad4:	bf00      	nop
 8003ad6:	3708      	adds	r7, #8
 8003ad8:	46bd      	mov	sp, r7
 8003ada:	bd80      	pop	{r7, pc}

08003adc <prvUnlockQueue>:
 8003adc:	b580      	push	{r7, lr}
 8003ade:	b084      	sub	sp, #16
 8003ae0:	af00      	add	r7, sp, #0
 8003ae2:	6078      	str	r0, [r7, #4]
 8003ae4:	f001 f8fa 	bl	8004cdc <vPortEnterCritical>
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8003aee:	73fb      	strb	r3, [r7, #15]
 8003af0:	e011      	b.n	8003b16 <prvUnlockQueue+0x3a>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d012      	beq.n	8003b20 <prvUnlockQueue+0x44>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	3324      	adds	r3, #36	; 0x24
 8003afe:	4618      	mov	r0, r3
 8003b00:	f000 fd34 	bl	800456c <xTaskRemoveFromEventList>
 8003b04:	4603      	mov	r3, r0
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d001      	beq.n	8003b0e <prvUnlockQueue+0x32>
 8003b0a:	f000 fe09 	bl	8004720 <vTaskMissedYield>
 8003b0e:	7bfb      	ldrb	r3, [r7, #15]
 8003b10:	3b01      	subs	r3, #1
 8003b12:	b2db      	uxtb	r3, r3
 8003b14:	73fb      	strb	r3, [r7, #15]
 8003b16:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	dce9      	bgt.n	8003af2 <prvUnlockQueue+0x16>
 8003b1e:	e000      	b.n	8003b22 <prvUnlockQueue+0x46>
 8003b20:	bf00      	nop
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	22ff      	movs	r2, #255	; 0xff
 8003b26:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003b2a:	f001 f907 	bl	8004d3c <vPortExitCritical>
 8003b2e:	f001 f8d5 	bl	8004cdc <vPortEnterCritical>
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8003b38:	73bb      	strb	r3, [r7, #14]
 8003b3a:	e011      	b.n	8003b60 <prvUnlockQueue+0x84>
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	691b      	ldr	r3, [r3, #16]
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	d012      	beq.n	8003b6a <prvUnlockQueue+0x8e>
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	3310      	adds	r3, #16
 8003b48:	4618      	mov	r0, r3
 8003b4a:	f000 fd0f 	bl	800456c <xTaskRemoveFromEventList>
 8003b4e:	4603      	mov	r3, r0
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d001      	beq.n	8003b58 <prvUnlockQueue+0x7c>
 8003b54:	f000 fde4 	bl	8004720 <vTaskMissedYield>
 8003b58:	7bbb      	ldrb	r3, [r7, #14]
 8003b5a:	3b01      	subs	r3, #1
 8003b5c:	b2db      	uxtb	r3, r3
 8003b5e:	73bb      	strb	r3, [r7, #14]
 8003b60:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	dce9      	bgt.n	8003b3c <prvUnlockQueue+0x60>
 8003b68:	e000      	b.n	8003b6c <prvUnlockQueue+0x90>
 8003b6a:	bf00      	nop
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	22ff      	movs	r2, #255	; 0xff
 8003b70:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003b74:	f001 f8e2 	bl	8004d3c <vPortExitCritical>
 8003b78:	bf00      	nop
 8003b7a:	3710      	adds	r7, #16
 8003b7c:	46bd      	mov	sp, r7
 8003b7e:	bd80      	pop	{r7, pc}

08003b80 <prvIsQueueEmpty>:
 8003b80:	b580      	push	{r7, lr}
 8003b82:	b084      	sub	sp, #16
 8003b84:	af00      	add	r7, sp, #0
 8003b86:	6078      	str	r0, [r7, #4]
 8003b88:	f001 f8a8 	bl	8004cdc <vPortEnterCritical>
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	d102      	bne.n	8003b9a <prvIsQueueEmpty+0x1a>
 8003b94:	2301      	movs	r3, #1
 8003b96:	60fb      	str	r3, [r7, #12]
 8003b98:	e001      	b.n	8003b9e <prvIsQueueEmpty+0x1e>
 8003b9a:	2300      	movs	r3, #0
 8003b9c:	60fb      	str	r3, [r7, #12]
 8003b9e:	f001 f8cd 	bl	8004d3c <vPortExitCritical>
 8003ba2:	68fb      	ldr	r3, [r7, #12]
 8003ba4:	4618      	mov	r0, r3
 8003ba6:	3710      	adds	r7, #16
 8003ba8:	46bd      	mov	sp, r7
 8003baa:	bd80      	pop	{r7, pc}

08003bac <prvIsQueueFull>:
 8003bac:	b580      	push	{r7, lr}
 8003bae:	b084      	sub	sp, #16
 8003bb0:	af00      	add	r7, sp, #0
 8003bb2:	6078      	str	r0, [r7, #4]
 8003bb4:	f001 f892 	bl	8004cdc <vPortEnterCritical>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003bc0:	429a      	cmp	r2, r3
 8003bc2:	d102      	bne.n	8003bca <prvIsQueueFull+0x1e>
 8003bc4:	2301      	movs	r3, #1
 8003bc6:	60fb      	str	r3, [r7, #12]
 8003bc8:	e001      	b.n	8003bce <prvIsQueueFull+0x22>
 8003bca:	2300      	movs	r3, #0
 8003bcc:	60fb      	str	r3, [r7, #12]
 8003bce:	f001 f8b5 	bl	8004d3c <vPortExitCritical>
 8003bd2:	68fb      	ldr	r3, [r7, #12]
 8003bd4:	4618      	mov	r0, r3
 8003bd6:	3710      	adds	r7, #16
 8003bd8:	46bd      	mov	sp, r7
 8003bda:	bd80      	pop	{r7, pc}

08003bdc <xTaskCreateStatic>:
 8003bdc:	b580      	push	{r7, lr}
 8003bde:	b08e      	sub	sp, #56	; 0x38
 8003be0:	af04      	add	r7, sp, #16
 8003be2:	60f8      	str	r0, [r7, #12]
 8003be4:	60b9      	str	r1, [r7, #8]
 8003be6:	607a      	str	r2, [r7, #4]
 8003be8:	603b      	str	r3, [r7, #0]
 8003bea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d10a      	bne.n	8003c06 <xTaskCreateStatic+0x2a>
 8003bf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bf4:	f383 8811 	msr	BASEPRI, r3
 8003bf8:	f3bf 8f6f 	isb	sy
 8003bfc:	f3bf 8f4f 	dsb	sy
 8003c00:	623b      	str	r3, [r7, #32]
 8003c02:	bf00      	nop
 8003c04:	e7fe      	b.n	8003c04 <xTaskCreateStatic+0x28>
 8003c06:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d10a      	bne.n	8003c22 <xTaskCreateStatic+0x46>
 8003c0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c10:	f383 8811 	msr	BASEPRI, r3
 8003c14:	f3bf 8f6f 	isb	sy
 8003c18:	f3bf 8f4f 	dsb	sy
 8003c1c:	61fb      	str	r3, [r7, #28]
 8003c1e:	bf00      	nop
 8003c20:	e7fe      	b.n	8003c20 <xTaskCreateStatic+0x44>
 8003c22:	2358      	movs	r3, #88	; 0x58
 8003c24:	613b      	str	r3, [r7, #16]
 8003c26:	693b      	ldr	r3, [r7, #16]
 8003c28:	2b58      	cmp	r3, #88	; 0x58
 8003c2a:	d00a      	beq.n	8003c42 <xTaskCreateStatic+0x66>
 8003c2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c30:	f383 8811 	msr	BASEPRI, r3
 8003c34:	f3bf 8f6f 	isb	sy
 8003c38:	f3bf 8f4f 	dsb	sy
 8003c3c:	61bb      	str	r3, [r7, #24]
 8003c3e:	bf00      	nop
 8003c40:	e7fe      	b.n	8003c40 <xTaskCreateStatic+0x64>
 8003c42:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d01e      	beq.n	8003c86 <xTaskCreateStatic+0xaa>
 8003c48:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003c4a:	2b00      	cmp	r3, #0
 8003c4c:	d01b      	beq.n	8003c86 <xTaskCreateStatic+0xaa>
 8003c4e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003c50:	627b      	str	r3, [r7, #36]	; 0x24
 8003c52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c54:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003c56:	631a      	str	r2, [r3, #48]	; 0x30
 8003c58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c5a:	2202      	movs	r2, #2
 8003c5c:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 8003c60:	2300      	movs	r3, #0
 8003c62:	9303      	str	r3, [sp, #12]
 8003c64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c66:	9302      	str	r3, [sp, #8]
 8003c68:	f107 0314 	add.w	r3, r7, #20
 8003c6c:	9301      	str	r3, [sp, #4]
 8003c6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003c70:	9300      	str	r3, [sp, #0]
 8003c72:	683b      	ldr	r3, [r7, #0]
 8003c74:	687a      	ldr	r2, [r7, #4]
 8003c76:	68b9      	ldr	r1, [r7, #8]
 8003c78:	68f8      	ldr	r0, [r7, #12]
 8003c7a:	f000 f850 	bl	8003d1e <prvInitialiseNewTask>
 8003c7e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003c80:	f000 f8d8 	bl	8003e34 <prvAddNewTaskToReadyList>
 8003c84:	e001      	b.n	8003c8a <xTaskCreateStatic+0xae>
 8003c86:	2300      	movs	r3, #0
 8003c88:	617b      	str	r3, [r7, #20]
 8003c8a:	697b      	ldr	r3, [r7, #20]
 8003c8c:	4618      	mov	r0, r3
 8003c8e:	3728      	adds	r7, #40	; 0x28
 8003c90:	46bd      	mov	sp, r7
 8003c92:	bd80      	pop	{r7, pc}

08003c94 <xTaskCreate>:
 8003c94:	b580      	push	{r7, lr}
 8003c96:	b08c      	sub	sp, #48	; 0x30
 8003c98:	af04      	add	r7, sp, #16
 8003c9a:	60f8      	str	r0, [r7, #12]
 8003c9c:	60b9      	str	r1, [r7, #8]
 8003c9e:	603b      	str	r3, [r7, #0]
 8003ca0:	4613      	mov	r3, r2
 8003ca2:	80fb      	strh	r3, [r7, #6]
 8003ca4:	88fb      	ldrh	r3, [r7, #6]
 8003ca6:	009b      	lsls	r3, r3, #2
 8003ca8:	4618      	mov	r0, r3
 8003caa:	f001 f8d9 	bl	8004e60 <pvPortMalloc>
 8003cae:	6178      	str	r0, [r7, #20]
 8003cb0:	697b      	ldr	r3, [r7, #20]
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	d00e      	beq.n	8003cd4 <xTaskCreate+0x40>
 8003cb6:	2058      	movs	r0, #88	; 0x58
 8003cb8:	f001 f8d2 	bl	8004e60 <pvPortMalloc>
 8003cbc:	61f8      	str	r0, [r7, #28]
 8003cbe:	69fb      	ldr	r3, [r7, #28]
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d003      	beq.n	8003ccc <xTaskCreate+0x38>
 8003cc4:	69fb      	ldr	r3, [r7, #28]
 8003cc6:	697a      	ldr	r2, [r7, #20]
 8003cc8:	631a      	str	r2, [r3, #48]	; 0x30
 8003cca:	e005      	b.n	8003cd8 <xTaskCreate+0x44>
 8003ccc:	6978      	ldr	r0, [r7, #20]
 8003cce:	f001 f991 	bl	8004ff4 <vPortFree>
 8003cd2:	e001      	b.n	8003cd8 <xTaskCreate+0x44>
 8003cd4:	2300      	movs	r3, #0
 8003cd6:	61fb      	str	r3, [r7, #28]
 8003cd8:	69fb      	ldr	r3, [r7, #28]
 8003cda:	2b00      	cmp	r3, #0
 8003cdc:	d017      	beq.n	8003d0e <xTaskCreate+0x7a>
 8003cde:	69fb      	ldr	r3, [r7, #28]
 8003ce0:	2200      	movs	r2, #0
 8003ce2:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 8003ce6:	88fa      	ldrh	r2, [r7, #6]
 8003ce8:	2300      	movs	r3, #0
 8003cea:	9303      	str	r3, [sp, #12]
 8003cec:	69fb      	ldr	r3, [r7, #28]
 8003cee:	9302      	str	r3, [sp, #8]
 8003cf0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003cf2:	9301      	str	r3, [sp, #4]
 8003cf4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003cf6:	9300      	str	r3, [sp, #0]
 8003cf8:	683b      	ldr	r3, [r7, #0]
 8003cfa:	68b9      	ldr	r1, [r7, #8]
 8003cfc:	68f8      	ldr	r0, [r7, #12]
 8003cfe:	f000 f80e 	bl	8003d1e <prvInitialiseNewTask>
 8003d02:	69f8      	ldr	r0, [r7, #28]
 8003d04:	f000 f896 	bl	8003e34 <prvAddNewTaskToReadyList>
 8003d08:	2301      	movs	r3, #1
 8003d0a:	61bb      	str	r3, [r7, #24]
 8003d0c:	e002      	b.n	8003d14 <xTaskCreate+0x80>
 8003d0e:	f04f 33ff 	mov.w	r3, #4294967295
 8003d12:	61bb      	str	r3, [r7, #24]
 8003d14:	69bb      	ldr	r3, [r7, #24]
 8003d16:	4618      	mov	r0, r3
 8003d18:	3720      	adds	r7, #32
 8003d1a:	46bd      	mov	sp, r7
 8003d1c:	bd80      	pop	{r7, pc}

08003d1e <prvInitialiseNewTask>:
 8003d1e:	b580      	push	{r7, lr}
 8003d20:	b088      	sub	sp, #32
 8003d22:	af00      	add	r7, sp, #0
 8003d24:	60f8      	str	r0, [r7, #12]
 8003d26:	60b9      	str	r1, [r7, #8]
 8003d28:	607a      	str	r2, [r7, #4]
 8003d2a:	603b      	str	r3, [r7, #0]
 8003d2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d2e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	009b      	lsls	r3, r3, #2
 8003d34:	461a      	mov	r2, r3
 8003d36:	21a5      	movs	r1, #165	; 0xa5
 8003d38:	f001 fc78 	bl	800562c <memset>
 8003d3c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003d46:	3b01      	subs	r3, #1
 8003d48:	009b      	lsls	r3, r3, #2
 8003d4a:	4413      	add	r3, r2
 8003d4c:	61bb      	str	r3, [r7, #24]
 8003d4e:	69bb      	ldr	r3, [r7, #24]
 8003d50:	f023 0307 	bic.w	r3, r3, #7
 8003d54:	61bb      	str	r3, [r7, #24]
 8003d56:	69bb      	ldr	r3, [r7, #24]
 8003d58:	f003 0307 	and.w	r3, r3, #7
 8003d5c:	2b00      	cmp	r3, #0
 8003d5e:	d00a      	beq.n	8003d76 <prvInitialiseNewTask+0x58>
 8003d60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d64:	f383 8811 	msr	BASEPRI, r3
 8003d68:	f3bf 8f6f 	isb	sy
 8003d6c:	f3bf 8f4f 	dsb	sy
 8003d70:	617b      	str	r3, [r7, #20]
 8003d72:	bf00      	nop
 8003d74:	e7fe      	b.n	8003d74 <prvInitialiseNewTask+0x56>
 8003d76:	2300      	movs	r3, #0
 8003d78:	61fb      	str	r3, [r7, #28]
 8003d7a:	e012      	b.n	8003da2 <prvInitialiseNewTask+0x84>
 8003d7c:	68ba      	ldr	r2, [r7, #8]
 8003d7e:	69fb      	ldr	r3, [r7, #28]
 8003d80:	4413      	add	r3, r2
 8003d82:	7819      	ldrb	r1, [r3, #0]
 8003d84:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003d86:	69fb      	ldr	r3, [r7, #28]
 8003d88:	4413      	add	r3, r2
 8003d8a:	3334      	adds	r3, #52	; 0x34
 8003d8c:	460a      	mov	r2, r1
 8003d8e:	701a      	strb	r2, [r3, #0]
 8003d90:	68ba      	ldr	r2, [r7, #8]
 8003d92:	69fb      	ldr	r3, [r7, #28]
 8003d94:	4413      	add	r3, r2
 8003d96:	781b      	ldrb	r3, [r3, #0]
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	d006      	beq.n	8003daa <prvInitialiseNewTask+0x8c>
 8003d9c:	69fb      	ldr	r3, [r7, #28]
 8003d9e:	3301      	adds	r3, #1
 8003da0:	61fb      	str	r3, [r7, #28]
 8003da2:	69fb      	ldr	r3, [r7, #28]
 8003da4:	2b0f      	cmp	r3, #15
 8003da6:	d9e9      	bls.n	8003d7c <prvInitialiseNewTask+0x5e>
 8003da8:	e000      	b.n	8003dac <prvInitialiseNewTask+0x8e>
 8003daa:	bf00      	nop
 8003dac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dae:	2200      	movs	r2, #0
 8003db0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003db4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003db6:	2b06      	cmp	r3, #6
 8003db8:	d901      	bls.n	8003dbe <prvInitialiseNewTask+0xa0>
 8003dba:	2306      	movs	r3, #6
 8003dbc:	62bb      	str	r3, [r7, #40]	; 0x28
 8003dbe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dc0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003dc2:	62da      	str	r2, [r3, #44]	; 0x2c
 8003dc4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dc6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003dc8:	645a      	str	r2, [r3, #68]	; 0x44
 8003dca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dcc:	2200      	movs	r2, #0
 8003dce:	649a      	str	r2, [r3, #72]	; 0x48
 8003dd0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dd2:	3304      	adds	r3, #4
 8003dd4:	4618      	mov	r0, r3
 8003dd6:	f7ff fabc 	bl	8003352 <vListInitialiseItem>
 8003dda:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ddc:	3318      	adds	r3, #24
 8003dde:	4618      	mov	r0, r3
 8003de0:	f7ff fab7 	bl	8003352 <vListInitialiseItem>
 8003de4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003de6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003de8:	611a      	str	r2, [r3, #16]
 8003dea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003dec:	f1c3 0207 	rsb	r2, r3, #7
 8003df0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003df2:	619a      	str	r2, [r3, #24]
 8003df4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003df6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003df8:	625a      	str	r2, [r3, #36]	; 0x24
 8003dfa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dfc:	2200      	movs	r2, #0
 8003dfe:	64da      	str	r2, [r3, #76]	; 0x4c
 8003e00:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e02:	2200      	movs	r2, #0
 8003e04:	651a      	str	r2, [r3, #80]	; 0x50
 8003e06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e08:	2200      	movs	r2, #0
 8003e0a:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8003e0e:	683a      	ldr	r2, [r7, #0]
 8003e10:	68f9      	ldr	r1, [r7, #12]
 8003e12:	69b8      	ldr	r0, [r7, #24]
 8003e14:	f000 fe74 	bl	8004b00 <pxPortInitialiseStack>
 8003e18:	4602      	mov	r2, r0
 8003e1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e1c:	601a      	str	r2, [r3, #0]
 8003e1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d002      	beq.n	8003e2a <prvInitialiseNewTask+0x10c>
 8003e24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003e26:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003e28:	601a      	str	r2, [r3, #0]
 8003e2a:	bf00      	nop
 8003e2c:	3720      	adds	r7, #32
 8003e2e:	46bd      	mov	sp, r7
 8003e30:	bd80      	pop	{r7, pc}
	...

08003e34 <prvAddNewTaskToReadyList>:
 8003e34:	b580      	push	{r7, lr}
 8003e36:	b082      	sub	sp, #8
 8003e38:	af00      	add	r7, sp, #0
 8003e3a:	6078      	str	r0, [r7, #4]
 8003e3c:	f000 ff4e 	bl	8004cdc <vPortEnterCritical>
 8003e40:	4b2a      	ldr	r3, [pc, #168]	; (8003eec <prvAddNewTaskToReadyList+0xb8>)
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	3301      	adds	r3, #1
 8003e46:	4a29      	ldr	r2, [pc, #164]	; (8003eec <prvAddNewTaskToReadyList+0xb8>)
 8003e48:	6013      	str	r3, [r2, #0]
 8003e4a:	4b29      	ldr	r3, [pc, #164]	; (8003ef0 <prvAddNewTaskToReadyList+0xbc>)
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d109      	bne.n	8003e66 <prvAddNewTaskToReadyList+0x32>
 8003e52:	4a27      	ldr	r2, [pc, #156]	; (8003ef0 <prvAddNewTaskToReadyList+0xbc>)
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	6013      	str	r3, [r2, #0]
 8003e58:	4b24      	ldr	r3, [pc, #144]	; (8003eec <prvAddNewTaskToReadyList+0xb8>)
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	2b01      	cmp	r3, #1
 8003e5e:	d110      	bne.n	8003e82 <prvAddNewTaskToReadyList+0x4e>
 8003e60:	f000 fc82 	bl	8004768 <prvInitialiseTaskLists>
 8003e64:	e00d      	b.n	8003e82 <prvAddNewTaskToReadyList+0x4e>
 8003e66:	4b23      	ldr	r3, [pc, #140]	; (8003ef4 <prvAddNewTaskToReadyList+0xc0>)
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d109      	bne.n	8003e82 <prvAddNewTaskToReadyList+0x4e>
 8003e6e:	4b20      	ldr	r3, [pc, #128]	; (8003ef0 <prvAddNewTaskToReadyList+0xbc>)
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e78:	429a      	cmp	r2, r3
 8003e7a:	d802      	bhi.n	8003e82 <prvAddNewTaskToReadyList+0x4e>
 8003e7c:	4a1c      	ldr	r2, [pc, #112]	; (8003ef0 <prvAddNewTaskToReadyList+0xbc>)
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	6013      	str	r3, [r2, #0]
 8003e82:	4b1d      	ldr	r3, [pc, #116]	; (8003ef8 <prvAddNewTaskToReadyList+0xc4>)
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	3301      	adds	r3, #1
 8003e88:	4a1b      	ldr	r2, [pc, #108]	; (8003ef8 <prvAddNewTaskToReadyList+0xc4>)
 8003e8a:	6013      	str	r3, [r2, #0]
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e90:	2201      	movs	r2, #1
 8003e92:	409a      	lsls	r2, r3
 8003e94:	4b19      	ldr	r3, [pc, #100]	; (8003efc <prvAddNewTaskToReadyList+0xc8>)
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	4313      	orrs	r3, r2
 8003e9a:	4a18      	ldr	r2, [pc, #96]	; (8003efc <prvAddNewTaskToReadyList+0xc8>)
 8003e9c:	6013      	str	r3, [r2, #0]
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003ea2:	4613      	mov	r3, r2
 8003ea4:	009b      	lsls	r3, r3, #2
 8003ea6:	4413      	add	r3, r2
 8003ea8:	009b      	lsls	r3, r3, #2
 8003eaa:	4a15      	ldr	r2, [pc, #84]	; (8003f00 <prvAddNewTaskToReadyList+0xcc>)
 8003eac:	441a      	add	r2, r3
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	3304      	adds	r3, #4
 8003eb2:	4619      	mov	r1, r3
 8003eb4:	4610      	mov	r0, r2
 8003eb6:	f7ff fa58 	bl	800336a <vListInsertEnd>
 8003eba:	f000 ff3f 	bl	8004d3c <vPortExitCritical>
 8003ebe:	4b0d      	ldr	r3, [pc, #52]	; (8003ef4 <prvAddNewTaskToReadyList+0xc0>)
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	2b00      	cmp	r3, #0
 8003ec4:	d00e      	beq.n	8003ee4 <prvAddNewTaskToReadyList+0xb0>
 8003ec6:	4b0a      	ldr	r3, [pc, #40]	; (8003ef0 <prvAddNewTaskToReadyList+0xbc>)
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ed0:	429a      	cmp	r2, r3
 8003ed2:	d207      	bcs.n	8003ee4 <prvAddNewTaskToReadyList+0xb0>
 8003ed4:	4b0b      	ldr	r3, [pc, #44]	; (8003f04 <prvAddNewTaskToReadyList+0xd0>)
 8003ed6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003eda:	601a      	str	r2, [r3, #0]
 8003edc:	f3bf 8f4f 	dsb	sy
 8003ee0:	f3bf 8f6f 	isb	sy
 8003ee4:	bf00      	nop
 8003ee6:	3708      	adds	r7, #8
 8003ee8:	46bd      	mov	sp, r7
 8003eea:	bd80      	pop	{r7, pc}
 8003eec:	200008e4 	.word	0x200008e4
 8003ef0:	200007e4 	.word	0x200007e4
 8003ef4:	200008f0 	.word	0x200008f0
 8003ef8:	20000900 	.word	0x20000900
 8003efc:	200008ec 	.word	0x200008ec
 8003f00:	200007e8 	.word	0x200007e8
 8003f04:	e000ed04 	.word	0xe000ed04

08003f08 <vTaskDelayUntil>:
 8003f08:	b580      	push	{r7, lr}
 8003f0a:	b08a      	sub	sp, #40	; 0x28
 8003f0c:	af00      	add	r7, sp, #0
 8003f0e:	6078      	str	r0, [r7, #4]
 8003f10:	6039      	str	r1, [r7, #0]
 8003f12:	2300      	movs	r3, #0
 8003f14:	627b      	str	r3, [r7, #36]	; 0x24
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	d10a      	bne.n	8003f32 <vTaskDelayUntil+0x2a>
 8003f1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f20:	f383 8811 	msr	BASEPRI, r3
 8003f24:	f3bf 8f6f 	isb	sy
 8003f28:	f3bf 8f4f 	dsb	sy
 8003f2c:	617b      	str	r3, [r7, #20]
 8003f2e:	bf00      	nop
 8003f30:	e7fe      	b.n	8003f30 <vTaskDelayUntil+0x28>
 8003f32:	683b      	ldr	r3, [r7, #0]
 8003f34:	2b00      	cmp	r3, #0
 8003f36:	d10a      	bne.n	8003f4e <vTaskDelayUntil+0x46>
 8003f38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f3c:	f383 8811 	msr	BASEPRI, r3
 8003f40:	f3bf 8f6f 	isb	sy
 8003f44:	f3bf 8f4f 	dsb	sy
 8003f48:	613b      	str	r3, [r7, #16]
 8003f4a:	bf00      	nop
 8003f4c:	e7fe      	b.n	8003f4c <vTaskDelayUntil+0x44>
 8003f4e:	4b2a      	ldr	r3, [pc, #168]	; (8003ff8 <vTaskDelayUntil+0xf0>)
 8003f50:	681b      	ldr	r3, [r3, #0]
 8003f52:	2b00      	cmp	r3, #0
 8003f54:	d00a      	beq.n	8003f6c <vTaskDelayUntil+0x64>
 8003f56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f5a:	f383 8811 	msr	BASEPRI, r3
 8003f5e:	f3bf 8f6f 	isb	sy
 8003f62:	f3bf 8f4f 	dsb	sy
 8003f66:	60fb      	str	r3, [r7, #12]
 8003f68:	bf00      	nop
 8003f6a:	e7fe      	b.n	8003f6a <vTaskDelayUntil+0x62>
 8003f6c:	f000 f8de 	bl	800412c <vTaskSuspendAll>
 8003f70:	4b22      	ldr	r3, [pc, #136]	; (8003ffc <vTaskDelayUntil+0xf4>)
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	623b      	str	r3, [r7, #32]
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	683a      	ldr	r2, [r7, #0]
 8003f7c:	4413      	add	r3, r2
 8003f7e:	61fb      	str	r3, [r7, #28]
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	6a3a      	ldr	r2, [r7, #32]
 8003f86:	429a      	cmp	r2, r3
 8003f88:	d20b      	bcs.n	8003fa2 <vTaskDelayUntil+0x9a>
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	69fa      	ldr	r2, [r7, #28]
 8003f90:	429a      	cmp	r2, r3
 8003f92:	d211      	bcs.n	8003fb8 <vTaskDelayUntil+0xb0>
 8003f94:	69fa      	ldr	r2, [r7, #28]
 8003f96:	6a3b      	ldr	r3, [r7, #32]
 8003f98:	429a      	cmp	r2, r3
 8003f9a:	d90d      	bls.n	8003fb8 <vTaskDelayUntil+0xb0>
 8003f9c:	2301      	movs	r3, #1
 8003f9e:	627b      	str	r3, [r7, #36]	; 0x24
 8003fa0:	e00a      	b.n	8003fb8 <vTaskDelayUntil+0xb0>
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	69fa      	ldr	r2, [r7, #28]
 8003fa8:	429a      	cmp	r2, r3
 8003faa:	d303      	bcc.n	8003fb4 <vTaskDelayUntil+0xac>
 8003fac:	69fa      	ldr	r2, [r7, #28]
 8003fae:	6a3b      	ldr	r3, [r7, #32]
 8003fb0:	429a      	cmp	r2, r3
 8003fb2:	d901      	bls.n	8003fb8 <vTaskDelayUntil+0xb0>
 8003fb4:	2301      	movs	r3, #1
 8003fb6:	627b      	str	r3, [r7, #36]	; 0x24
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	69fa      	ldr	r2, [r7, #28]
 8003fbc:	601a      	str	r2, [r3, #0]
 8003fbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d006      	beq.n	8003fd2 <vTaskDelayUntil+0xca>
 8003fc4:	69fa      	ldr	r2, [r7, #28]
 8003fc6:	6a3b      	ldr	r3, [r7, #32]
 8003fc8:	1ad3      	subs	r3, r2, r3
 8003fca:	2100      	movs	r1, #0
 8003fcc:	4618      	mov	r0, r3
 8003fce:	f000 fd31 	bl	8004a34 <prvAddCurrentTaskToDelayedList>
 8003fd2:	f000 f8b9 	bl	8004148 <xTaskResumeAll>
 8003fd6:	61b8      	str	r0, [r7, #24]
 8003fd8:	69bb      	ldr	r3, [r7, #24]
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	d107      	bne.n	8003fee <vTaskDelayUntil+0xe6>
 8003fde:	4b08      	ldr	r3, [pc, #32]	; (8004000 <vTaskDelayUntil+0xf8>)
 8003fe0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003fe4:	601a      	str	r2, [r3, #0]
 8003fe6:	f3bf 8f4f 	dsb	sy
 8003fea:	f3bf 8f6f 	isb	sy
 8003fee:	bf00      	nop
 8003ff0:	3728      	adds	r7, #40	; 0x28
 8003ff2:	46bd      	mov	sp, r7
 8003ff4:	bd80      	pop	{r7, pc}
 8003ff6:	bf00      	nop
 8003ff8:	2000090c 	.word	0x2000090c
 8003ffc:	200008e8 	.word	0x200008e8
 8004000:	e000ed04 	.word	0xe000ed04

08004004 <vTaskDelay>:
 8004004:	b580      	push	{r7, lr}
 8004006:	b084      	sub	sp, #16
 8004008:	af00      	add	r7, sp, #0
 800400a:	6078      	str	r0, [r7, #4]
 800400c:	2300      	movs	r3, #0
 800400e:	60fb      	str	r3, [r7, #12]
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	2b00      	cmp	r3, #0
 8004014:	d017      	beq.n	8004046 <vTaskDelay+0x42>
 8004016:	4b13      	ldr	r3, [pc, #76]	; (8004064 <vTaskDelay+0x60>)
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	2b00      	cmp	r3, #0
 800401c:	d00a      	beq.n	8004034 <vTaskDelay+0x30>
 800401e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004022:	f383 8811 	msr	BASEPRI, r3
 8004026:	f3bf 8f6f 	isb	sy
 800402a:	f3bf 8f4f 	dsb	sy
 800402e:	60bb      	str	r3, [r7, #8]
 8004030:	bf00      	nop
 8004032:	e7fe      	b.n	8004032 <vTaskDelay+0x2e>
 8004034:	f000 f87a 	bl	800412c <vTaskSuspendAll>
 8004038:	2100      	movs	r1, #0
 800403a:	6878      	ldr	r0, [r7, #4]
 800403c:	f000 fcfa 	bl	8004a34 <prvAddCurrentTaskToDelayedList>
 8004040:	f000 f882 	bl	8004148 <xTaskResumeAll>
 8004044:	60f8      	str	r0, [r7, #12]
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	2b00      	cmp	r3, #0
 800404a:	d107      	bne.n	800405c <vTaskDelay+0x58>
 800404c:	4b06      	ldr	r3, [pc, #24]	; (8004068 <vTaskDelay+0x64>)
 800404e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004052:	601a      	str	r2, [r3, #0]
 8004054:	f3bf 8f4f 	dsb	sy
 8004058:	f3bf 8f6f 	isb	sy
 800405c:	bf00      	nop
 800405e:	3710      	adds	r7, #16
 8004060:	46bd      	mov	sp, r7
 8004062:	bd80      	pop	{r7, pc}
 8004064:	2000090c 	.word	0x2000090c
 8004068:	e000ed04 	.word	0xe000ed04

0800406c <vTaskStartScheduler>:
 800406c:	b580      	push	{r7, lr}
 800406e:	b08a      	sub	sp, #40	; 0x28
 8004070:	af04      	add	r7, sp, #16
 8004072:	2300      	movs	r3, #0
 8004074:	60bb      	str	r3, [r7, #8]
 8004076:	2300      	movs	r3, #0
 8004078:	607b      	str	r3, [r7, #4]
 800407a:	463a      	mov	r2, r7
 800407c:	1d39      	adds	r1, r7, #4
 800407e:	f107 0308 	add.w	r3, r7, #8
 8004082:	4618      	mov	r0, r3
 8004084:	f7fc f874 	bl	8000170 <vApplicationGetIdleTaskMemory>
 8004088:	6839      	ldr	r1, [r7, #0]
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	68ba      	ldr	r2, [r7, #8]
 800408e:	9202      	str	r2, [sp, #8]
 8004090:	9301      	str	r3, [sp, #4]
 8004092:	2300      	movs	r3, #0
 8004094:	9300      	str	r3, [sp, #0]
 8004096:	2300      	movs	r3, #0
 8004098:	460a      	mov	r2, r1
 800409a:	491e      	ldr	r1, [pc, #120]	; (8004114 <vTaskStartScheduler+0xa8>)
 800409c:	481e      	ldr	r0, [pc, #120]	; (8004118 <vTaskStartScheduler+0xac>)
 800409e:	f7ff fd9d 	bl	8003bdc <xTaskCreateStatic>
 80040a2:	4603      	mov	r3, r0
 80040a4:	4a1d      	ldr	r2, [pc, #116]	; (800411c <vTaskStartScheduler+0xb0>)
 80040a6:	6013      	str	r3, [r2, #0]
 80040a8:	4b1c      	ldr	r3, [pc, #112]	; (800411c <vTaskStartScheduler+0xb0>)
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	d002      	beq.n	80040b6 <vTaskStartScheduler+0x4a>
 80040b0:	2301      	movs	r3, #1
 80040b2:	617b      	str	r3, [r7, #20]
 80040b4:	e001      	b.n	80040ba <vTaskStartScheduler+0x4e>
 80040b6:	2300      	movs	r3, #0
 80040b8:	617b      	str	r3, [r7, #20]
 80040ba:	697b      	ldr	r3, [r7, #20]
 80040bc:	2b01      	cmp	r3, #1
 80040be:	d116      	bne.n	80040ee <vTaskStartScheduler+0x82>
 80040c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040c4:	f383 8811 	msr	BASEPRI, r3
 80040c8:	f3bf 8f6f 	isb	sy
 80040cc:	f3bf 8f4f 	dsb	sy
 80040d0:	613b      	str	r3, [r7, #16]
 80040d2:	bf00      	nop
 80040d4:	4b12      	ldr	r3, [pc, #72]	; (8004120 <vTaskStartScheduler+0xb4>)
 80040d6:	f04f 32ff 	mov.w	r2, #4294967295
 80040da:	601a      	str	r2, [r3, #0]
 80040dc:	4b11      	ldr	r3, [pc, #68]	; (8004124 <vTaskStartScheduler+0xb8>)
 80040de:	2201      	movs	r2, #1
 80040e0:	601a      	str	r2, [r3, #0]
 80040e2:	4b11      	ldr	r3, [pc, #68]	; (8004128 <vTaskStartScheduler+0xbc>)
 80040e4:	2200      	movs	r2, #0
 80040e6:	601a      	str	r2, [r3, #0]
 80040e8:	f000 fd86 	bl	8004bf8 <xPortStartScheduler>
 80040ec:	e00e      	b.n	800410c <vTaskStartScheduler+0xa0>
 80040ee:	697b      	ldr	r3, [r7, #20]
 80040f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80040f4:	d10a      	bne.n	800410c <vTaskStartScheduler+0xa0>
 80040f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040fa:	f383 8811 	msr	BASEPRI, r3
 80040fe:	f3bf 8f6f 	isb	sy
 8004102:	f3bf 8f4f 	dsb	sy
 8004106:	60fb      	str	r3, [r7, #12]
 8004108:	bf00      	nop
 800410a:	e7fe      	b.n	800410a <vTaskStartScheduler+0x9e>
 800410c:	bf00      	nop
 800410e:	3718      	adds	r7, #24
 8004110:	46bd      	mov	sp, r7
 8004112:	bd80      	pop	{r7, pc}
 8004114:	0800627c 	.word	0x0800627c
 8004118:	08004739 	.word	0x08004739
 800411c:	20000908 	.word	0x20000908
 8004120:	20000904 	.word	0x20000904
 8004124:	200008f0 	.word	0x200008f0
 8004128:	200008e8 	.word	0x200008e8

0800412c <vTaskSuspendAll>:
 800412c:	b480      	push	{r7}
 800412e:	af00      	add	r7, sp, #0
 8004130:	4b04      	ldr	r3, [pc, #16]	; (8004144 <vTaskSuspendAll+0x18>)
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	3301      	adds	r3, #1
 8004136:	4a03      	ldr	r2, [pc, #12]	; (8004144 <vTaskSuspendAll+0x18>)
 8004138:	6013      	str	r3, [r2, #0]
 800413a:	bf00      	nop
 800413c:	46bd      	mov	sp, r7
 800413e:	bc80      	pop	{r7}
 8004140:	4770      	bx	lr
 8004142:	bf00      	nop
 8004144:	2000090c 	.word	0x2000090c

08004148 <xTaskResumeAll>:
 8004148:	b580      	push	{r7, lr}
 800414a:	b084      	sub	sp, #16
 800414c:	af00      	add	r7, sp, #0
 800414e:	2300      	movs	r3, #0
 8004150:	60fb      	str	r3, [r7, #12]
 8004152:	2300      	movs	r3, #0
 8004154:	60bb      	str	r3, [r7, #8]
 8004156:	4b41      	ldr	r3, [pc, #260]	; (800425c <xTaskResumeAll+0x114>)
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	2b00      	cmp	r3, #0
 800415c:	d10a      	bne.n	8004174 <xTaskResumeAll+0x2c>
 800415e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004162:	f383 8811 	msr	BASEPRI, r3
 8004166:	f3bf 8f6f 	isb	sy
 800416a:	f3bf 8f4f 	dsb	sy
 800416e:	603b      	str	r3, [r7, #0]
 8004170:	bf00      	nop
 8004172:	e7fe      	b.n	8004172 <xTaskResumeAll+0x2a>
 8004174:	f000 fdb2 	bl	8004cdc <vPortEnterCritical>
 8004178:	4b38      	ldr	r3, [pc, #224]	; (800425c <xTaskResumeAll+0x114>)
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	3b01      	subs	r3, #1
 800417e:	4a37      	ldr	r2, [pc, #220]	; (800425c <xTaskResumeAll+0x114>)
 8004180:	6013      	str	r3, [r2, #0]
 8004182:	4b36      	ldr	r3, [pc, #216]	; (800425c <xTaskResumeAll+0x114>)
 8004184:	681b      	ldr	r3, [r3, #0]
 8004186:	2b00      	cmp	r3, #0
 8004188:	d161      	bne.n	800424e <xTaskResumeAll+0x106>
 800418a:	4b35      	ldr	r3, [pc, #212]	; (8004260 <xTaskResumeAll+0x118>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	2b00      	cmp	r3, #0
 8004190:	d05d      	beq.n	800424e <xTaskResumeAll+0x106>
 8004192:	e02e      	b.n	80041f2 <xTaskResumeAll+0xaa>
 8004194:	4b33      	ldr	r3, [pc, #204]	; (8004264 <xTaskResumeAll+0x11c>)
 8004196:	68db      	ldr	r3, [r3, #12]
 8004198:	68db      	ldr	r3, [r3, #12]
 800419a:	60fb      	str	r3, [r7, #12]
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	3318      	adds	r3, #24
 80041a0:	4618      	mov	r0, r3
 80041a2:	f7ff f93d 	bl	8003420 <uxListRemove>
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	3304      	adds	r3, #4
 80041aa:	4618      	mov	r0, r3
 80041ac:	f7ff f938 	bl	8003420 <uxListRemove>
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80041b4:	2201      	movs	r2, #1
 80041b6:	409a      	lsls	r2, r3
 80041b8:	4b2b      	ldr	r3, [pc, #172]	; (8004268 <xTaskResumeAll+0x120>)
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	4313      	orrs	r3, r2
 80041be:	4a2a      	ldr	r2, [pc, #168]	; (8004268 <xTaskResumeAll+0x120>)
 80041c0:	6013      	str	r3, [r2, #0]
 80041c2:	68fb      	ldr	r3, [r7, #12]
 80041c4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80041c6:	4613      	mov	r3, r2
 80041c8:	009b      	lsls	r3, r3, #2
 80041ca:	4413      	add	r3, r2
 80041cc:	009b      	lsls	r3, r3, #2
 80041ce:	4a27      	ldr	r2, [pc, #156]	; (800426c <xTaskResumeAll+0x124>)
 80041d0:	441a      	add	r2, r3
 80041d2:	68fb      	ldr	r3, [r7, #12]
 80041d4:	3304      	adds	r3, #4
 80041d6:	4619      	mov	r1, r3
 80041d8:	4610      	mov	r0, r2
 80041da:	f7ff f8c6 	bl	800336a <vListInsertEnd>
 80041de:	68fb      	ldr	r3, [r7, #12]
 80041e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80041e2:	4b23      	ldr	r3, [pc, #140]	; (8004270 <xTaskResumeAll+0x128>)
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80041e8:	429a      	cmp	r2, r3
 80041ea:	d302      	bcc.n	80041f2 <xTaskResumeAll+0xaa>
 80041ec:	4b21      	ldr	r3, [pc, #132]	; (8004274 <xTaskResumeAll+0x12c>)
 80041ee:	2201      	movs	r2, #1
 80041f0:	601a      	str	r2, [r3, #0]
 80041f2:	4b1c      	ldr	r3, [pc, #112]	; (8004264 <xTaskResumeAll+0x11c>)
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	d1cc      	bne.n	8004194 <xTaskResumeAll+0x4c>
 80041fa:	68fb      	ldr	r3, [r7, #12]
 80041fc:	2b00      	cmp	r3, #0
 80041fe:	d001      	beq.n	8004204 <xTaskResumeAll+0xbc>
 8004200:	f000 fb50 	bl	80048a4 <prvResetNextTaskUnblockTime>
 8004204:	4b1c      	ldr	r3, [pc, #112]	; (8004278 <xTaskResumeAll+0x130>)
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	607b      	str	r3, [r7, #4]
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	2b00      	cmp	r3, #0
 800420e:	d010      	beq.n	8004232 <xTaskResumeAll+0xea>
 8004210:	f000 f844 	bl	800429c <xTaskIncrementTick>
 8004214:	4603      	mov	r3, r0
 8004216:	2b00      	cmp	r3, #0
 8004218:	d002      	beq.n	8004220 <xTaskResumeAll+0xd8>
 800421a:	4b16      	ldr	r3, [pc, #88]	; (8004274 <xTaskResumeAll+0x12c>)
 800421c:	2201      	movs	r2, #1
 800421e:	601a      	str	r2, [r3, #0]
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	3b01      	subs	r3, #1
 8004224:	607b      	str	r3, [r7, #4]
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	2b00      	cmp	r3, #0
 800422a:	d1f1      	bne.n	8004210 <xTaskResumeAll+0xc8>
 800422c:	4b12      	ldr	r3, [pc, #72]	; (8004278 <xTaskResumeAll+0x130>)
 800422e:	2200      	movs	r2, #0
 8004230:	601a      	str	r2, [r3, #0]
 8004232:	4b10      	ldr	r3, [pc, #64]	; (8004274 <xTaskResumeAll+0x12c>)
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	2b00      	cmp	r3, #0
 8004238:	d009      	beq.n	800424e <xTaskResumeAll+0x106>
 800423a:	2301      	movs	r3, #1
 800423c:	60bb      	str	r3, [r7, #8]
 800423e:	4b0f      	ldr	r3, [pc, #60]	; (800427c <xTaskResumeAll+0x134>)
 8004240:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	f3bf 8f4f 	dsb	sy
 800424a:	f3bf 8f6f 	isb	sy
 800424e:	f000 fd75 	bl	8004d3c <vPortExitCritical>
 8004252:	68bb      	ldr	r3, [r7, #8]
 8004254:	4618      	mov	r0, r3
 8004256:	3710      	adds	r7, #16
 8004258:	46bd      	mov	sp, r7
 800425a:	bd80      	pop	{r7, pc}
 800425c:	2000090c 	.word	0x2000090c
 8004260:	200008e4 	.word	0x200008e4
 8004264:	200008a4 	.word	0x200008a4
 8004268:	200008ec 	.word	0x200008ec
 800426c:	200007e8 	.word	0x200007e8
 8004270:	200007e4 	.word	0x200007e4
 8004274:	200008f8 	.word	0x200008f8
 8004278:	200008f4 	.word	0x200008f4
 800427c:	e000ed04 	.word	0xe000ed04

08004280 <xTaskGetTickCount>:
 8004280:	b480      	push	{r7}
 8004282:	b083      	sub	sp, #12
 8004284:	af00      	add	r7, sp, #0
 8004286:	4b04      	ldr	r3, [pc, #16]	; (8004298 <xTaskGetTickCount+0x18>)
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	607b      	str	r3, [r7, #4]
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	4618      	mov	r0, r3
 8004290:	370c      	adds	r7, #12
 8004292:	46bd      	mov	sp, r7
 8004294:	bc80      	pop	{r7}
 8004296:	4770      	bx	lr
 8004298:	200008e8 	.word	0x200008e8

0800429c <xTaskIncrementTick>:
 800429c:	b580      	push	{r7, lr}
 800429e:	b086      	sub	sp, #24
 80042a0:	af00      	add	r7, sp, #0
 80042a2:	2300      	movs	r3, #0
 80042a4:	617b      	str	r3, [r7, #20]
 80042a6:	4b51      	ldr	r3, [pc, #324]	; (80043ec <xTaskIncrementTick+0x150>)
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	2b00      	cmp	r3, #0
 80042ac:	f040 808d 	bne.w	80043ca <xTaskIncrementTick+0x12e>
 80042b0:	4b4f      	ldr	r3, [pc, #316]	; (80043f0 <xTaskIncrementTick+0x154>)
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	3301      	adds	r3, #1
 80042b6:	613b      	str	r3, [r7, #16]
 80042b8:	4a4d      	ldr	r2, [pc, #308]	; (80043f0 <xTaskIncrementTick+0x154>)
 80042ba:	693b      	ldr	r3, [r7, #16]
 80042bc:	6013      	str	r3, [r2, #0]
 80042be:	693b      	ldr	r3, [r7, #16]
 80042c0:	2b00      	cmp	r3, #0
 80042c2:	d120      	bne.n	8004306 <xTaskIncrementTick+0x6a>
 80042c4:	4b4b      	ldr	r3, [pc, #300]	; (80043f4 <xTaskIncrementTick+0x158>)
 80042c6:	681b      	ldr	r3, [r3, #0]
 80042c8:	681b      	ldr	r3, [r3, #0]
 80042ca:	2b00      	cmp	r3, #0
 80042cc:	d00a      	beq.n	80042e4 <xTaskIncrementTick+0x48>
 80042ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80042d2:	f383 8811 	msr	BASEPRI, r3
 80042d6:	f3bf 8f6f 	isb	sy
 80042da:	f3bf 8f4f 	dsb	sy
 80042de:	603b      	str	r3, [r7, #0]
 80042e0:	bf00      	nop
 80042e2:	e7fe      	b.n	80042e2 <xTaskIncrementTick+0x46>
 80042e4:	4b43      	ldr	r3, [pc, #268]	; (80043f4 <xTaskIncrementTick+0x158>)
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	60fb      	str	r3, [r7, #12]
 80042ea:	4b43      	ldr	r3, [pc, #268]	; (80043f8 <xTaskIncrementTick+0x15c>)
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	4a41      	ldr	r2, [pc, #260]	; (80043f4 <xTaskIncrementTick+0x158>)
 80042f0:	6013      	str	r3, [r2, #0]
 80042f2:	4a41      	ldr	r2, [pc, #260]	; (80043f8 <xTaskIncrementTick+0x15c>)
 80042f4:	68fb      	ldr	r3, [r7, #12]
 80042f6:	6013      	str	r3, [r2, #0]
 80042f8:	4b40      	ldr	r3, [pc, #256]	; (80043fc <xTaskIncrementTick+0x160>)
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	3301      	adds	r3, #1
 80042fe:	4a3f      	ldr	r2, [pc, #252]	; (80043fc <xTaskIncrementTick+0x160>)
 8004300:	6013      	str	r3, [r2, #0]
 8004302:	f000 facf 	bl	80048a4 <prvResetNextTaskUnblockTime>
 8004306:	4b3e      	ldr	r3, [pc, #248]	; (8004400 <xTaskIncrementTick+0x164>)
 8004308:	681b      	ldr	r3, [r3, #0]
 800430a:	693a      	ldr	r2, [r7, #16]
 800430c:	429a      	cmp	r2, r3
 800430e:	d34d      	bcc.n	80043ac <xTaskIncrementTick+0x110>
 8004310:	4b38      	ldr	r3, [pc, #224]	; (80043f4 <xTaskIncrementTick+0x158>)
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	2b00      	cmp	r3, #0
 8004318:	d101      	bne.n	800431e <xTaskIncrementTick+0x82>
 800431a:	2301      	movs	r3, #1
 800431c:	e000      	b.n	8004320 <xTaskIncrementTick+0x84>
 800431e:	2300      	movs	r3, #0
 8004320:	2b00      	cmp	r3, #0
 8004322:	d004      	beq.n	800432e <xTaskIncrementTick+0x92>
 8004324:	4b36      	ldr	r3, [pc, #216]	; (8004400 <xTaskIncrementTick+0x164>)
 8004326:	f04f 32ff 	mov.w	r2, #4294967295
 800432a:	601a      	str	r2, [r3, #0]
 800432c:	e03e      	b.n	80043ac <xTaskIncrementTick+0x110>
 800432e:	4b31      	ldr	r3, [pc, #196]	; (80043f4 <xTaskIncrementTick+0x158>)
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	68db      	ldr	r3, [r3, #12]
 8004334:	68db      	ldr	r3, [r3, #12]
 8004336:	60bb      	str	r3, [r7, #8]
 8004338:	68bb      	ldr	r3, [r7, #8]
 800433a:	685b      	ldr	r3, [r3, #4]
 800433c:	607b      	str	r3, [r7, #4]
 800433e:	693a      	ldr	r2, [r7, #16]
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	429a      	cmp	r2, r3
 8004344:	d203      	bcs.n	800434e <xTaskIncrementTick+0xb2>
 8004346:	4a2e      	ldr	r2, [pc, #184]	; (8004400 <xTaskIncrementTick+0x164>)
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	6013      	str	r3, [r2, #0]
 800434c:	e02e      	b.n	80043ac <xTaskIncrementTick+0x110>
 800434e:	68bb      	ldr	r3, [r7, #8]
 8004350:	3304      	adds	r3, #4
 8004352:	4618      	mov	r0, r3
 8004354:	f7ff f864 	bl	8003420 <uxListRemove>
 8004358:	68bb      	ldr	r3, [r7, #8]
 800435a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800435c:	2b00      	cmp	r3, #0
 800435e:	d004      	beq.n	800436a <xTaskIncrementTick+0xce>
 8004360:	68bb      	ldr	r3, [r7, #8]
 8004362:	3318      	adds	r3, #24
 8004364:	4618      	mov	r0, r3
 8004366:	f7ff f85b 	bl	8003420 <uxListRemove>
 800436a:	68bb      	ldr	r3, [r7, #8]
 800436c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800436e:	2201      	movs	r2, #1
 8004370:	409a      	lsls	r2, r3
 8004372:	4b24      	ldr	r3, [pc, #144]	; (8004404 <xTaskIncrementTick+0x168>)
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	4313      	orrs	r3, r2
 8004378:	4a22      	ldr	r2, [pc, #136]	; (8004404 <xTaskIncrementTick+0x168>)
 800437a:	6013      	str	r3, [r2, #0]
 800437c:	68bb      	ldr	r3, [r7, #8]
 800437e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004380:	4613      	mov	r3, r2
 8004382:	009b      	lsls	r3, r3, #2
 8004384:	4413      	add	r3, r2
 8004386:	009b      	lsls	r3, r3, #2
 8004388:	4a1f      	ldr	r2, [pc, #124]	; (8004408 <xTaskIncrementTick+0x16c>)
 800438a:	441a      	add	r2, r3
 800438c:	68bb      	ldr	r3, [r7, #8]
 800438e:	3304      	adds	r3, #4
 8004390:	4619      	mov	r1, r3
 8004392:	4610      	mov	r0, r2
 8004394:	f7fe ffe9 	bl	800336a <vListInsertEnd>
 8004398:	68bb      	ldr	r3, [r7, #8]
 800439a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800439c:	4b1b      	ldr	r3, [pc, #108]	; (800440c <xTaskIncrementTick+0x170>)
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043a2:	429a      	cmp	r2, r3
 80043a4:	d3b4      	bcc.n	8004310 <xTaskIncrementTick+0x74>
 80043a6:	2301      	movs	r3, #1
 80043a8:	617b      	str	r3, [r7, #20]
 80043aa:	e7b1      	b.n	8004310 <xTaskIncrementTick+0x74>
 80043ac:	4b17      	ldr	r3, [pc, #92]	; (800440c <xTaskIncrementTick+0x170>)
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80043b2:	4915      	ldr	r1, [pc, #84]	; (8004408 <xTaskIncrementTick+0x16c>)
 80043b4:	4613      	mov	r3, r2
 80043b6:	009b      	lsls	r3, r3, #2
 80043b8:	4413      	add	r3, r2
 80043ba:	009b      	lsls	r3, r3, #2
 80043bc:	440b      	add	r3, r1
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	2b01      	cmp	r3, #1
 80043c2:	d907      	bls.n	80043d4 <xTaskIncrementTick+0x138>
 80043c4:	2301      	movs	r3, #1
 80043c6:	617b      	str	r3, [r7, #20]
 80043c8:	e004      	b.n	80043d4 <xTaskIncrementTick+0x138>
 80043ca:	4b11      	ldr	r3, [pc, #68]	; (8004410 <xTaskIncrementTick+0x174>)
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	3301      	adds	r3, #1
 80043d0:	4a0f      	ldr	r2, [pc, #60]	; (8004410 <xTaskIncrementTick+0x174>)
 80043d2:	6013      	str	r3, [r2, #0]
 80043d4:	4b0f      	ldr	r3, [pc, #60]	; (8004414 <xTaskIncrementTick+0x178>)
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	2b00      	cmp	r3, #0
 80043da:	d001      	beq.n	80043e0 <xTaskIncrementTick+0x144>
 80043dc:	2301      	movs	r3, #1
 80043de:	617b      	str	r3, [r7, #20]
 80043e0:	697b      	ldr	r3, [r7, #20]
 80043e2:	4618      	mov	r0, r3
 80043e4:	3718      	adds	r7, #24
 80043e6:	46bd      	mov	sp, r7
 80043e8:	bd80      	pop	{r7, pc}
 80043ea:	bf00      	nop
 80043ec:	2000090c 	.word	0x2000090c
 80043f0:	200008e8 	.word	0x200008e8
 80043f4:	2000089c 	.word	0x2000089c
 80043f8:	200008a0 	.word	0x200008a0
 80043fc:	200008fc 	.word	0x200008fc
 8004400:	20000904 	.word	0x20000904
 8004404:	200008ec 	.word	0x200008ec
 8004408:	200007e8 	.word	0x200007e8
 800440c:	200007e4 	.word	0x200007e4
 8004410:	200008f4 	.word	0x200008f4
 8004414:	200008f8 	.word	0x200008f8

08004418 <vTaskSetApplicationTaskTag>:
 8004418:	b580      	push	{r7, lr}
 800441a:	b084      	sub	sp, #16
 800441c:	af00      	add	r7, sp, #0
 800441e:	6078      	str	r0, [r7, #4]
 8004420:	6039      	str	r1, [r7, #0]
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	2b00      	cmp	r3, #0
 8004426:	d103      	bne.n	8004430 <vTaskSetApplicationTaskTag+0x18>
 8004428:	4b08      	ldr	r3, [pc, #32]	; (800444c <vTaskSetApplicationTaskTag+0x34>)
 800442a:	681b      	ldr	r3, [r3, #0]
 800442c:	60fb      	str	r3, [r7, #12]
 800442e:	e001      	b.n	8004434 <vTaskSetApplicationTaskTag+0x1c>
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	60fb      	str	r3, [r7, #12]
 8004434:	f000 fc52 	bl	8004cdc <vPortEnterCritical>
 8004438:	68fb      	ldr	r3, [r7, #12]
 800443a:	683a      	ldr	r2, [r7, #0]
 800443c:	64da      	str	r2, [r3, #76]	; 0x4c
 800443e:	f000 fc7d 	bl	8004d3c <vPortExitCritical>
 8004442:	bf00      	nop
 8004444:	3710      	adds	r7, #16
 8004446:	46bd      	mov	sp, r7
 8004448:	bd80      	pop	{r7, pc}
 800444a:	bf00      	nop
 800444c:	200007e4 	.word	0x200007e4

08004450 <vTaskSwitchContext>:
 8004450:	b580      	push	{r7, lr}
 8004452:	b086      	sub	sp, #24
 8004454:	af00      	add	r7, sp, #0
 8004456:	4b2e      	ldr	r3, [pc, #184]	; (8004510 <vTaskSwitchContext+0xc0>)
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	2b00      	cmp	r3, #0
 800445c:	d003      	beq.n	8004466 <vTaskSwitchContext+0x16>
 800445e:	4b2d      	ldr	r3, [pc, #180]	; (8004514 <vTaskSwitchContext+0xc4>)
 8004460:	2201      	movs	r2, #1
 8004462:	601a      	str	r2, [r3, #0]
 8004464:	e050      	b.n	8004508 <vTaskSwitchContext+0xb8>
 8004466:	4b2b      	ldr	r3, [pc, #172]	; (8004514 <vTaskSwitchContext+0xc4>)
 8004468:	2200      	movs	r2, #0
 800446a:	601a      	str	r2, [r3, #0]
 800446c:	4b2a      	ldr	r3, [pc, #168]	; (8004518 <vTaskSwitchContext+0xc8>)
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	681a      	ldr	r2, [r3, #0]
 8004472:	4b29      	ldr	r3, [pc, #164]	; (8004518 <vTaskSwitchContext+0xc8>)
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004478:	429a      	cmp	r2, r3
 800447a:	d808      	bhi.n	800448e <vTaskSwitchContext+0x3e>
 800447c:	4b26      	ldr	r3, [pc, #152]	; (8004518 <vTaskSwitchContext+0xc8>)
 800447e:	681a      	ldr	r2, [r3, #0]
 8004480:	4b25      	ldr	r3, [pc, #148]	; (8004518 <vTaskSwitchContext+0xc8>)
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	3334      	adds	r3, #52	; 0x34
 8004486:	4619      	mov	r1, r3
 8004488:	4610      	mov	r0, r2
 800448a:	f7fb fe61 	bl	8000150 <vApplicationStackOverflowHook>
 800448e:	4b23      	ldr	r3, [pc, #140]	; (800451c <vTaskSwitchContext+0xcc>)
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	60fb      	str	r3, [r7, #12]
 8004494:	68fb      	ldr	r3, [r7, #12]
 8004496:	fab3 f383 	clz	r3, r3
 800449a:	72fb      	strb	r3, [r7, #11]
 800449c:	7afb      	ldrb	r3, [r7, #11]
 800449e:	f1c3 031f 	rsb	r3, r3, #31
 80044a2:	617b      	str	r3, [r7, #20]
 80044a4:	491e      	ldr	r1, [pc, #120]	; (8004520 <vTaskSwitchContext+0xd0>)
 80044a6:	697a      	ldr	r2, [r7, #20]
 80044a8:	4613      	mov	r3, r2
 80044aa:	009b      	lsls	r3, r3, #2
 80044ac:	4413      	add	r3, r2
 80044ae:	009b      	lsls	r3, r3, #2
 80044b0:	440b      	add	r3, r1
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	d10a      	bne.n	80044ce <vTaskSwitchContext+0x7e>
 80044b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80044bc:	f383 8811 	msr	BASEPRI, r3
 80044c0:	f3bf 8f6f 	isb	sy
 80044c4:	f3bf 8f4f 	dsb	sy
 80044c8:	607b      	str	r3, [r7, #4]
 80044ca:	bf00      	nop
 80044cc:	e7fe      	b.n	80044cc <vTaskSwitchContext+0x7c>
 80044ce:	697a      	ldr	r2, [r7, #20]
 80044d0:	4613      	mov	r3, r2
 80044d2:	009b      	lsls	r3, r3, #2
 80044d4:	4413      	add	r3, r2
 80044d6:	009b      	lsls	r3, r3, #2
 80044d8:	4a11      	ldr	r2, [pc, #68]	; (8004520 <vTaskSwitchContext+0xd0>)
 80044da:	4413      	add	r3, r2
 80044dc:	613b      	str	r3, [r7, #16]
 80044de:	693b      	ldr	r3, [r7, #16]
 80044e0:	685b      	ldr	r3, [r3, #4]
 80044e2:	685a      	ldr	r2, [r3, #4]
 80044e4:	693b      	ldr	r3, [r7, #16]
 80044e6:	605a      	str	r2, [r3, #4]
 80044e8:	693b      	ldr	r3, [r7, #16]
 80044ea:	685a      	ldr	r2, [r3, #4]
 80044ec:	693b      	ldr	r3, [r7, #16]
 80044ee:	3308      	adds	r3, #8
 80044f0:	429a      	cmp	r2, r3
 80044f2:	d104      	bne.n	80044fe <vTaskSwitchContext+0xae>
 80044f4:	693b      	ldr	r3, [r7, #16]
 80044f6:	685b      	ldr	r3, [r3, #4]
 80044f8:	685a      	ldr	r2, [r3, #4]
 80044fa:	693b      	ldr	r3, [r7, #16]
 80044fc:	605a      	str	r2, [r3, #4]
 80044fe:	693b      	ldr	r3, [r7, #16]
 8004500:	685b      	ldr	r3, [r3, #4]
 8004502:	68db      	ldr	r3, [r3, #12]
 8004504:	4a04      	ldr	r2, [pc, #16]	; (8004518 <vTaskSwitchContext+0xc8>)
 8004506:	6013      	str	r3, [r2, #0]
 8004508:	bf00      	nop
 800450a:	3718      	adds	r7, #24
 800450c:	46bd      	mov	sp, r7
 800450e:	bd80      	pop	{r7, pc}
 8004510:	2000090c 	.word	0x2000090c
 8004514:	200008f8 	.word	0x200008f8
 8004518:	200007e4 	.word	0x200007e4
 800451c:	200008ec 	.word	0x200008ec
 8004520:	200007e8 	.word	0x200007e8

08004524 <vTaskPlaceOnEventList>:
 8004524:	b580      	push	{r7, lr}
 8004526:	b084      	sub	sp, #16
 8004528:	af00      	add	r7, sp, #0
 800452a:	6078      	str	r0, [r7, #4]
 800452c:	6039      	str	r1, [r7, #0]
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	2b00      	cmp	r3, #0
 8004532:	d10a      	bne.n	800454a <vTaskPlaceOnEventList+0x26>
 8004534:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004538:	f383 8811 	msr	BASEPRI, r3
 800453c:	f3bf 8f6f 	isb	sy
 8004540:	f3bf 8f4f 	dsb	sy
 8004544:	60fb      	str	r3, [r7, #12]
 8004546:	bf00      	nop
 8004548:	e7fe      	b.n	8004548 <vTaskPlaceOnEventList+0x24>
 800454a:	4b07      	ldr	r3, [pc, #28]	; (8004568 <vTaskPlaceOnEventList+0x44>)
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	3318      	adds	r3, #24
 8004550:	4619      	mov	r1, r3
 8004552:	6878      	ldr	r0, [r7, #4]
 8004554:	f7fe ff2c 	bl	80033b0 <vListInsert>
 8004558:	2101      	movs	r1, #1
 800455a:	6838      	ldr	r0, [r7, #0]
 800455c:	f000 fa6a 	bl	8004a34 <prvAddCurrentTaskToDelayedList>
 8004560:	bf00      	nop
 8004562:	3710      	adds	r7, #16
 8004564:	46bd      	mov	sp, r7
 8004566:	bd80      	pop	{r7, pc}
 8004568:	200007e4 	.word	0x200007e4

0800456c <xTaskRemoveFromEventList>:
 800456c:	b580      	push	{r7, lr}
 800456e:	b086      	sub	sp, #24
 8004570:	af00      	add	r7, sp, #0
 8004572:	6078      	str	r0, [r7, #4]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	68db      	ldr	r3, [r3, #12]
 8004578:	68db      	ldr	r3, [r3, #12]
 800457a:	613b      	str	r3, [r7, #16]
 800457c:	693b      	ldr	r3, [r7, #16]
 800457e:	2b00      	cmp	r3, #0
 8004580:	d10a      	bne.n	8004598 <xTaskRemoveFromEventList+0x2c>
 8004582:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004586:	f383 8811 	msr	BASEPRI, r3
 800458a:	f3bf 8f6f 	isb	sy
 800458e:	f3bf 8f4f 	dsb	sy
 8004592:	60fb      	str	r3, [r7, #12]
 8004594:	bf00      	nop
 8004596:	e7fe      	b.n	8004596 <xTaskRemoveFromEventList+0x2a>
 8004598:	693b      	ldr	r3, [r7, #16]
 800459a:	3318      	adds	r3, #24
 800459c:	4618      	mov	r0, r3
 800459e:	f7fe ff3f 	bl	8003420 <uxListRemove>
 80045a2:	4b1d      	ldr	r3, [pc, #116]	; (8004618 <xTaskRemoveFromEventList+0xac>)
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	2b00      	cmp	r3, #0
 80045a8:	d11c      	bne.n	80045e4 <xTaskRemoveFromEventList+0x78>
 80045aa:	693b      	ldr	r3, [r7, #16]
 80045ac:	3304      	adds	r3, #4
 80045ae:	4618      	mov	r0, r3
 80045b0:	f7fe ff36 	bl	8003420 <uxListRemove>
 80045b4:	693b      	ldr	r3, [r7, #16]
 80045b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80045b8:	2201      	movs	r2, #1
 80045ba:	409a      	lsls	r2, r3
 80045bc:	4b17      	ldr	r3, [pc, #92]	; (800461c <xTaskRemoveFromEventList+0xb0>)
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	4313      	orrs	r3, r2
 80045c2:	4a16      	ldr	r2, [pc, #88]	; (800461c <xTaskRemoveFromEventList+0xb0>)
 80045c4:	6013      	str	r3, [r2, #0]
 80045c6:	693b      	ldr	r3, [r7, #16]
 80045c8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80045ca:	4613      	mov	r3, r2
 80045cc:	009b      	lsls	r3, r3, #2
 80045ce:	4413      	add	r3, r2
 80045d0:	009b      	lsls	r3, r3, #2
 80045d2:	4a13      	ldr	r2, [pc, #76]	; (8004620 <xTaskRemoveFromEventList+0xb4>)
 80045d4:	441a      	add	r2, r3
 80045d6:	693b      	ldr	r3, [r7, #16]
 80045d8:	3304      	adds	r3, #4
 80045da:	4619      	mov	r1, r3
 80045dc:	4610      	mov	r0, r2
 80045de:	f7fe fec4 	bl	800336a <vListInsertEnd>
 80045e2:	e005      	b.n	80045f0 <xTaskRemoveFromEventList+0x84>
 80045e4:	693b      	ldr	r3, [r7, #16]
 80045e6:	3318      	adds	r3, #24
 80045e8:	4619      	mov	r1, r3
 80045ea:	480e      	ldr	r0, [pc, #56]	; (8004624 <xTaskRemoveFromEventList+0xb8>)
 80045ec:	f7fe febd 	bl	800336a <vListInsertEnd>
 80045f0:	693b      	ldr	r3, [r7, #16]
 80045f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80045f4:	4b0c      	ldr	r3, [pc, #48]	; (8004628 <xTaskRemoveFromEventList+0xbc>)
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80045fa:	429a      	cmp	r2, r3
 80045fc:	d905      	bls.n	800460a <xTaskRemoveFromEventList+0x9e>
 80045fe:	2301      	movs	r3, #1
 8004600:	617b      	str	r3, [r7, #20]
 8004602:	4b0a      	ldr	r3, [pc, #40]	; (800462c <xTaskRemoveFromEventList+0xc0>)
 8004604:	2201      	movs	r2, #1
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	e001      	b.n	800460e <xTaskRemoveFromEventList+0xa2>
 800460a:	2300      	movs	r3, #0
 800460c:	617b      	str	r3, [r7, #20]
 800460e:	697b      	ldr	r3, [r7, #20]
 8004610:	4618      	mov	r0, r3
 8004612:	3718      	adds	r7, #24
 8004614:	46bd      	mov	sp, r7
 8004616:	bd80      	pop	{r7, pc}
 8004618:	2000090c 	.word	0x2000090c
 800461c:	200008ec 	.word	0x200008ec
 8004620:	200007e8 	.word	0x200007e8
 8004624:	200008a4 	.word	0x200008a4
 8004628:	200007e4 	.word	0x200007e4
 800462c:	200008f8 	.word	0x200008f8

08004630 <vTaskInternalSetTimeOutState>:
 8004630:	b480      	push	{r7}
 8004632:	b083      	sub	sp, #12
 8004634:	af00      	add	r7, sp, #0
 8004636:	6078      	str	r0, [r7, #4]
 8004638:	4b06      	ldr	r3, [pc, #24]	; (8004654 <vTaskInternalSetTimeOutState+0x24>)
 800463a:	681a      	ldr	r2, [r3, #0]
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	601a      	str	r2, [r3, #0]
 8004640:	4b05      	ldr	r3, [pc, #20]	; (8004658 <vTaskInternalSetTimeOutState+0x28>)
 8004642:	681a      	ldr	r2, [r3, #0]
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	605a      	str	r2, [r3, #4]
 8004648:	bf00      	nop
 800464a:	370c      	adds	r7, #12
 800464c:	46bd      	mov	sp, r7
 800464e:	bc80      	pop	{r7}
 8004650:	4770      	bx	lr
 8004652:	bf00      	nop
 8004654:	200008fc 	.word	0x200008fc
 8004658:	200008e8 	.word	0x200008e8

0800465c <xTaskCheckForTimeOut>:
 800465c:	b580      	push	{r7, lr}
 800465e:	b088      	sub	sp, #32
 8004660:	af00      	add	r7, sp, #0
 8004662:	6078      	str	r0, [r7, #4]
 8004664:	6039      	str	r1, [r7, #0]
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	2b00      	cmp	r3, #0
 800466a:	d10a      	bne.n	8004682 <xTaskCheckForTimeOut+0x26>
 800466c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004670:	f383 8811 	msr	BASEPRI, r3
 8004674:	f3bf 8f6f 	isb	sy
 8004678:	f3bf 8f4f 	dsb	sy
 800467c:	613b      	str	r3, [r7, #16]
 800467e:	bf00      	nop
 8004680:	e7fe      	b.n	8004680 <xTaskCheckForTimeOut+0x24>
 8004682:	683b      	ldr	r3, [r7, #0]
 8004684:	2b00      	cmp	r3, #0
 8004686:	d10a      	bne.n	800469e <xTaskCheckForTimeOut+0x42>
 8004688:	f04f 0350 	mov.w	r3, #80	; 0x50
 800468c:	f383 8811 	msr	BASEPRI, r3
 8004690:	f3bf 8f6f 	isb	sy
 8004694:	f3bf 8f4f 	dsb	sy
 8004698:	60fb      	str	r3, [r7, #12]
 800469a:	bf00      	nop
 800469c:	e7fe      	b.n	800469c <xTaskCheckForTimeOut+0x40>
 800469e:	f000 fb1d 	bl	8004cdc <vPortEnterCritical>
 80046a2:	4b1d      	ldr	r3, [pc, #116]	; (8004718 <xTaskCheckForTimeOut+0xbc>)
 80046a4:	681b      	ldr	r3, [r3, #0]
 80046a6:	61bb      	str	r3, [r7, #24]
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	685b      	ldr	r3, [r3, #4]
 80046ac:	69ba      	ldr	r2, [r7, #24]
 80046ae:	1ad3      	subs	r3, r2, r3
 80046b0:	617b      	str	r3, [r7, #20]
 80046b2:	683b      	ldr	r3, [r7, #0]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80046ba:	d102      	bne.n	80046c2 <xTaskCheckForTimeOut+0x66>
 80046bc:	2300      	movs	r3, #0
 80046be:	61fb      	str	r3, [r7, #28]
 80046c0:	e023      	b.n	800470a <xTaskCheckForTimeOut+0xae>
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	681a      	ldr	r2, [r3, #0]
 80046c6:	4b15      	ldr	r3, [pc, #84]	; (800471c <xTaskCheckForTimeOut+0xc0>)
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	429a      	cmp	r2, r3
 80046cc:	d007      	beq.n	80046de <xTaskCheckForTimeOut+0x82>
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	685b      	ldr	r3, [r3, #4]
 80046d2:	69ba      	ldr	r2, [r7, #24]
 80046d4:	429a      	cmp	r2, r3
 80046d6:	d302      	bcc.n	80046de <xTaskCheckForTimeOut+0x82>
 80046d8:	2301      	movs	r3, #1
 80046da:	61fb      	str	r3, [r7, #28]
 80046dc:	e015      	b.n	800470a <xTaskCheckForTimeOut+0xae>
 80046de:	683b      	ldr	r3, [r7, #0]
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	697a      	ldr	r2, [r7, #20]
 80046e4:	429a      	cmp	r2, r3
 80046e6:	d20b      	bcs.n	8004700 <xTaskCheckForTimeOut+0xa4>
 80046e8:	683b      	ldr	r3, [r7, #0]
 80046ea:	681a      	ldr	r2, [r3, #0]
 80046ec:	697b      	ldr	r3, [r7, #20]
 80046ee:	1ad2      	subs	r2, r2, r3
 80046f0:	683b      	ldr	r3, [r7, #0]
 80046f2:	601a      	str	r2, [r3, #0]
 80046f4:	6878      	ldr	r0, [r7, #4]
 80046f6:	f7ff ff9b 	bl	8004630 <vTaskInternalSetTimeOutState>
 80046fa:	2300      	movs	r3, #0
 80046fc:	61fb      	str	r3, [r7, #28]
 80046fe:	e004      	b.n	800470a <xTaskCheckForTimeOut+0xae>
 8004700:	683b      	ldr	r3, [r7, #0]
 8004702:	2200      	movs	r2, #0
 8004704:	601a      	str	r2, [r3, #0]
 8004706:	2301      	movs	r3, #1
 8004708:	61fb      	str	r3, [r7, #28]
 800470a:	f000 fb17 	bl	8004d3c <vPortExitCritical>
 800470e:	69fb      	ldr	r3, [r7, #28]
 8004710:	4618      	mov	r0, r3
 8004712:	3720      	adds	r7, #32
 8004714:	46bd      	mov	sp, r7
 8004716:	bd80      	pop	{r7, pc}
 8004718:	200008e8 	.word	0x200008e8
 800471c:	200008fc 	.word	0x200008fc

08004720 <vTaskMissedYield>:
 8004720:	b480      	push	{r7}
 8004722:	af00      	add	r7, sp, #0
 8004724:	4b03      	ldr	r3, [pc, #12]	; (8004734 <vTaskMissedYield+0x14>)
 8004726:	2201      	movs	r2, #1
 8004728:	601a      	str	r2, [r3, #0]
 800472a:	bf00      	nop
 800472c:	46bd      	mov	sp, r7
 800472e:	bc80      	pop	{r7}
 8004730:	4770      	bx	lr
 8004732:	bf00      	nop
 8004734:	200008f8 	.word	0x200008f8

08004738 <prvIdleTask>:
 8004738:	b580      	push	{r7, lr}
 800473a:	b082      	sub	sp, #8
 800473c:	af00      	add	r7, sp, #0
 800473e:	6078      	str	r0, [r7, #4]
 8004740:	f000 f852 	bl	80047e8 <prvCheckTasksWaitingTermination>
 8004744:	4b06      	ldr	r3, [pc, #24]	; (8004760 <prvIdleTask+0x28>)
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	2b01      	cmp	r3, #1
 800474a:	d9f9      	bls.n	8004740 <prvIdleTask+0x8>
 800474c:	4b05      	ldr	r3, [pc, #20]	; (8004764 <prvIdleTask+0x2c>)
 800474e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004752:	601a      	str	r2, [r3, #0]
 8004754:	f3bf 8f4f 	dsb	sy
 8004758:	f3bf 8f6f 	isb	sy
 800475c:	e7f0      	b.n	8004740 <prvIdleTask+0x8>
 800475e:	bf00      	nop
 8004760:	200007e8 	.word	0x200007e8
 8004764:	e000ed04 	.word	0xe000ed04

08004768 <prvInitialiseTaskLists>:
 8004768:	b580      	push	{r7, lr}
 800476a:	b082      	sub	sp, #8
 800476c:	af00      	add	r7, sp, #0
 800476e:	2300      	movs	r3, #0
 8004770:	607b      	str	r3, [r7, #4]
 8004772:	e00c      	b.n	800478e <prvInitialiseTaskLists+0x26>
 8004774:	687a      	ldr	r2, [r7, #4]
 8004776:	4613      	mov	r3, r2
 8004778:	009b      	lsls	r3, r3, #2
 800477a:	4413      	add	r3, r2
 800477c:	009b      	lsls	r3, r3, #2
 800477e:	4a12      	ldr	r2, [pc, #72]	; (80047c8 <prvInitialiseTaskLists+0x60>)
 8004780:	4413      	add	r3, r2
 8004782:	4618      	mov	r0, r3
 8004784:	f7fe fdc6 	bl	8003314 <vListInitialise>
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	3301      	adds	r3, #1
 800478c:	607b      	str	r3, [r7, #4]
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	2b06      	cmp	r3, #6
 8004792:	d9ef      	bls.n	8004774 <prvInitialiseTaskLists+0xc>
 8004794:	480d      	ldr	r0, [pc, #52]	; (80047cc <prvInitialiseTaskLists+0x64>)
 8004796:	f7fe fdbd 	bl	8003314 <vListInitialise>
 800479a:	480d      	ldr	r0, [pc, #52]	; (80047d0 <prvInitialiseTaskLists+0x68>)
 800479c:	f7fe fdba 	bl	8003314 <vListInitialise>
 80047a0:	480c      	ldr	r0, [pc, #48]	; (80047d4 <prvInitialiseTaskLists+0x6c>)
 80047a2:	f7fe fdb7 	bl	8003314 <vListInitialise>
 80047a6:	480c      	ldr	r0, [pc, #48]	; (80047d8 <prvInitialiseTaskLists+0x70>)
 80047a8:	f7fe fdb4 	bl	8003314 <vListInitialise>
 80047ac:	480b      	ldr	r0, [pc, #44]	; (80047dc <prvInitialiseTaskLists+0x74>)
 80047ae:	f7fe fdb1 	bl	8003314 <vListInitialise>
 80047b2:	4b0b      	ldr	r3, [pc, #44]	; (80047e0 <prvInitialiseTaskLists+0x78>)
 80047b4:	4a05      	ldr	r2, [pc, #20]	; (80047cc <prvInitialiseTaskLists+0x64>)
 80047b6:	601a      	str	r2, [r3, #0]
 80047b8:	4b0a      	ldr	r3, [pc, #40]	; (80047e4 <prvInitialiseTaskLists+0x7c>)
 80047ba:	4a05      	ldr	r2, [pc, #20]	; (80047d0 <prvInitialiseTaskLists+0x68>)
 80047bc:	601a      	str	r2, [r3, #0]
 80047be:	bf00      	nop
 80047c0:	3708      	adds	r7, #8
 80047c2:	46bd      	mov	sp, r7
 80047c4:	bd80      	pop	{r7, pc}
 80047c6:	bf00      	nop
 80047c8:	200007e8 	.word	0x200007e8
 80047cc:	20000874 	.word	0x20000874
 80047d0:	20000888 	.word	0x20000888
 80047d4:	200008a4 	.word	0x200008a4
 80047d8:	200008b8 	.word	0x200008b8
 80047dc:	200008d0 	.word	0x200008d0
 80047e0:	2000089c 	.word	0x2000089c
 80047e4:	200008a0 	.word	0x200008a0

080047e8 <prvCheckTasksWaitingTermination>:
 80047e8:	b580      	push	{r7, lr}
 80047ea:	b082      	sub	sp, #8
 80047ec:	af00      	add	r7, sp, #0
 80047ee:	e019      	b.n	8004824 <prvCheckTasksWaitingTermination+0x3c>
 80047f0:	f000 fa74 	bl	8004cdc <vPortEnterCritical>
 80047f4:	4b10      	ldr	r3, [pc, #64]	; (8004838 <prvCheckTasksWaitingTermination+0x50>)
 80047f6:	68db      	ldr	r3, [r3, #12]
 80047f8:	68db      	ldr	r3, [r3, #12]
 80047fa:	607b      	str	r3, [r7, #4]
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	3304      	adds	r3, #4
 8004800:	4618      	mov	r0, r3
 8004802:	f7fe fe0d 	bl	8003420 <uxListRemove>
 8004806:	4b0d      	ldr	r3, [pc, #52]	; (800483c <prvCheckTasksWaitingTermination+0x54>)
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	3b01      	subs	r3, #1
 800480c:	4a0b      	ldr	r2, [pc, #44]	; (800483c <prvCheckTasksWaitingTermination+0x54>)
 800480e:	6013      	str	r3, [r2, #0]
 8004810:	4b0b      	ldr	r3, [pc, #44]	; (8004840 <prvCheckTasksWaitingTermination+0x58>)
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	3b01      	subs	r3, #1
 8004816:	4a0a      	ldr	r2, [pc, #40]	; (8004840 <prvCheckTasksWaitingTermination+0x58>)
 8004818:	6013      	str	r3, [r2, #0]
 800481a:	f000 fa8f 	bl	8004d3c <vPortExitCritical>
 800481e:	6878      	ldr	r0, [r7, #4]
 8004820:	f000 f810 	bl	8004844 <prvDeleteTCB>
 8004824:	4b06      	ldr	r3, [pc, #24]	; (8004840 <prvCheckTasksWaitingTermination+0x58>)
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	2b00      	cmp	r3, #0
 800482a:	d1e1      	bne.n	80047f0 <prvCheckTasksWaitingTermination+0x8>
 800482c:	bf00      	nop
 800482e:	bf00      	nop
 8004830:	3708      	adds	r7, #8
 8004832:	46bd      	mov	sp, r7
 8004834:	bd80      	pop	{r7, pc}
 8004836:	bf00      	nop
 8004838:	200008b8 	.word	0x200008b8
 800483c:	200008e4 	.word	0x200008e4
 8004840:	200008cc 	.word	0x200008cc

08004844 <prvDeleteTCB>:
 8004844:	b580      	push	{r7, lr}
 8004846:	b084      	sub	sp, #16
 8004848:	af00      	add	r7, sp, #0
 800484a:	6078      	str	r0, [r7, #4]
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 8004852:	2b00      	cmp	r3, #0
 8004854:	d108      	bne.n	8004868 <prvDeleteTCB+0x24>
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800485a:	4618      	mov	r0, r3
 800485c:	f000 fbca 	bl	8004ff4 <vPortFree>
 8004860:	6878      	ldr	r0, [r7, #4]
 8004862:	f000 fbc7 	bl	8004ff4 <vPortFree>
 8004866:	e018      	b.n	800489a <prvDeleteTCB+0x56>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800486e:	2b01      	cmp	r3, #1
 8004870:	d103      	bne.n	800487a <prvDeleteTCB+0x36>
 8004872:	6878      	ldr	r0, [r7, #4]
 8004874:	f000 fbbe 	bl	8004ff4 <vPortFree>
 8004878:	e00f      	b.n	800489a <prvDeleteTCB+0x56>
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 8004880:	2b02      	cmp	r3, #2
 8004882:	d00a      	beq.n	800489a <prvDeleteTCB+0x56>
 8004884:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004888:	f383 8811 	msr	BASEPRI, r3
 800488c:	f3bf 8f6f 	isb	sy
 8004890:	f3bf 8f4f 	dsb	sy
 8004894:	60fb      	str	r3, [r7, #12]
 8004896:	bf00      	nop
 8004898:	e7fe      	b.n	8004898 <prvDeleteTCB+0x54>
 800489a:	bf00      	nop
 800489c:	3710      	adds	r7, #16
 800489e:	46bd      	mov	sp, r7
 80048a0:	bd80      	pop	{r7, pc}
	...

080048a4 <prvResetNextTaskUnblockTime>:
 80048a4:	b480      	push	{r7}
 80048a6:	b083      	sub	sp, #12
 80048a8:	af00      	add	r7, sp, #0
 80048aa:	4b0e      	ldr	r3, [pc, #56]	; (80048e4 <prvResetNextTaskUnblockTime+0x40>)
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	2b00      	cmp	r3, #0
 80048b2:	d101      	bne.n	80048b8 <prvResetNextTaskUnblockTime+0x14>
 80048b4:	2301      	movs	r3, #1
 80048b6:	e000      	b.n	80048ba <prvResetNextTaskUnblockTime+0x16>
 80048b8:	2300      	movs	r3, #0
 80048ba:	2b00      	cmp	r3, #0
 80048bc:	d004      	beq.n	80048c8 <prvResetNextTaskUnblockTime+0x24>
 80048be:	4b0a      	ldr	r3, [pc, #40]	; (80048e8 <prvResetNextTaskUnblockTime+0x44>)
 80048c0:	f04f 32ff 	mov.w	r2, #4294967295
 80048c4:	601a      	str	r2, [r3, #0]
 80048c6:	e008      	b.n	80048da <prvResetNextTaskUnblockTime+0x36>
 80048c8:	4b06      	ldr	r3, [pc, #24]	; (80048e4 <prvResetNextTaskUnblockTime+0x40>)
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	68db      	ldr	r3, [r3, #12]
 80048ce:	68db      	ldr	r3, [r3, #12]
 80048d0:	607b      	str	r3, [r7, #4]
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	685b      	ldr	r3, [r3, #4]
 80048d6:	4a04      	ldr	r2, [pc, #16]	; (80048e8 <prvResetNextTaskUnblockTime+0x44>)
 80048d8:	6013      	str	r3, [r2, #0]
 80048da:	bf00      	nop
 80048dc:	370c      	adds	r7, #12
 80048de:	46bd      	mov	sp, r7
 80048e0:	bc80      	pop	{r7}
 80048e2:	4770      	bx	lr
 80048e4:	2000089c 	.word	0x2000089c
 80048e8:	20000904 	.word	0x20000904

080048ec <xTaskGetSchedulerState>:
 80048ec:	b480      	push	{r7}
 80048ee:	b083      	sub	sp, #12
 80048f0:	af00      	add	r7, sp, #0
 80048f2:	4b0b      	ldr	r3, [pc, #44]	; (8004920 <xTaskGetSchedulerState+0x34>)
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d102      	bne.n	8004900 <xTaskGetSchedulerState+0x14>
 80048fa:	2301      	movs	r3, #1
 80048fc:	607b      	str	r3, [r7, #4]
 80048fe:	e008      	b.n	8004912 <xTaskGetSchedulerState+0x26>
 8004900:	4b08      	ldr	r3, [pc, #32]	; (8004924 <xTaskGetSchedulerState+0x38>)
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	2b00      	cmp	r3, #0
 8004906:	d102      	bne.n	800490e <xTaskGetSchedulerState+0x22>
 8004908:	2302      	movs	r3, #2
 800490a:	607b      	str	r3, [r7, #4]
 800490c:	e001      	b.n	8004912 <xTaskGetSchedulerState+0x26>
 800490e:	2300      	movs	r3, #0
 8004910:	607b      	str	r3, [r7, #4]
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	4618      	mov	r0, r3
 8004916:	370c      	adds	r7, #12
 8004918:	46bd      	mov	sp, r7
 800491a:	bc80      	pop	{r7}
 800491c:	4770      	bx	lr
 800491e:	bf00      	nop
 8004920:	200008f0 	.word	0x200008f0
 8004924:	2000090c 	.word	0x2000090c

08004928 <xTaskPriorityDisinherit>:
 8004928:	b580      	push	{r7, lr}
 800492a:	b086      	sub	sp, #24
 800492c:	af00      	add	r7, sp, #0
 800492e:	6078      	str	r0, [r7, #4]
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	613b      	str	r3, [r7, #16]
 8004934:	2300      	movs	r3, #0
 8004936:	617b      	str	r3, [r7, #20]
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	2b00      	cmp	r3, #0
 800493c:	d06e      	beq.n	8004a1c <xTaskPriorityDisinherit+0xf4>
 800493e:	4b3a      	ldr	r3, [pc, #232]	; (8004a28 <xTaskPriorityDisinherit+0x100>)
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	693a      	ldr	r2, [r7, #16]
 8004944:	429a      	cmp	r2, r3
 8004946:	d00a      	beq.n	800495e <xTaskPriorityDisinherit+0x36>
 8004948:	f04f 0350 	mov.w	r3, #80	; 0x50
 800494c:	f383 8811 	msr	BASEPRI, r3
 8004950:	f3bf 8f6f 	isb	sy
 8004954:	f3bf 8f4f 	dsb	sy
 8004958:	60fb      	str	r3, [r7, #12]
 800495a:	bf00      	nop
 800495c:	e7fe      	b.n	800495c <xTaskPriorityDisinherit+0x34>
 800495e:	693b      	ldr	r3, [r7, #16]
 8004960:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004962:	2b00      	cmp	r3, #0
 8004964:	d10a      	bne.n	800497c <xTaskPriorityDisinherit+0x54>
 8004966:	f04f 0350 	mov.w	r3, #80	; 0x50
 800496a:	f383 8811 	msr	BASEPRI, r3
 800496e:	f3bf 8f6f 	isb	sy
 8004972:	f3bf 8f4f 	dsb	sy
 8004976:	60bb      	str	r3, [r7, #8]
 8004978:	bf00      	nop
 800497a:	e7fe      	b.n	800497a <xTaskPriorityDisinherit+0x52>
 800497c:	693b      	ldr	r3, [r7, #16]
 800497e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004980:	1e5a      	subs	r2, r3, #1
 8004982:	693b      	ldr	r3, [r7, #16]
 8004984:	649a      	str	r2, [r3, #72]	; 0x48
 8004986:	693b      	ldr	r3, [r7, #16]
 8004988:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800498a:	693b      	ldr	r3, [r7, #16]
 800498c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800498e:	429a      	cmp	r2, r3
 8004990:	d044      	beq.n	8004a1c <xTaskPriorityDisinherit+0xf4>
 8004992:	693b      	ldr	r3, [r7, #16]
 8004994:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004996:	2b00      	cmp	r3, #0
 8004998:	d140      	bne.n	8004a1c <xTaskPriorityDisinherit+0xf4>
 800499a:	693b      	ldr	r3, [r7, #16]
 800499c:	3304      	adds	r3, #4
 800499e:	4618      	mov	r0, r3
 80049a0:	f7fe fd3e 	bl	8003420 <uxListRemove>
 80049a4:	4603      	mov	r3, r0
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d115      	bne.n	80049d6 <xTaskPriorityDisinherit+0xae>
 80049aa:	693b      	ldr	r3, [r7, #16]
 80049ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80049ae:	491f      	ldr	r1, [pc, #124]	; (8004a2c <xTaskPriorityDisinherit+0x104>)
 80049b0:	4613      	mov	r3, r2
 80049b2:	009b      	lsls	r3, r3, #2
 80049b4:	4413      	add	r3, r2
 80049b6:	009b      	lsls	r3, r3, #2
 80049b8:	440b      	add	r3, r1
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	2b00      	cmp	r3, #0
 80049be:	d10a      	bne.n	80049d6 <xTaskPriorityDisinherit+0xae>
 80049c0:	693b      	ldr	r3, [r7, #16]
 80049c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049c4:	2201      	movs	r2, #1
 80049c6:	fa02 f303 	lsl.w	r3, r2, r3
 80049ca:	43da      	mvns	r2, r3
 80049cc:	4b18      	ldr	r3, [pc, #96]	; (8004a30 <xTaskPriorityDisinherit+0x108>)
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	4013      	ands	r3, r2
 80049d2:	4a17      	ldr	r2, [pc, #92]	; (8004a30 <xTaskPriorityDisinherit+0x108>)
 80049d4:	6013      	str	r3, [r2, #0]
 80049d6:	693b      	ldr	r3, [r7, #16]
 80049d8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80049da:	693b      	ldr	r3, [r7, #16]
 80049dc:	62da      	str	r2, [r3, #44]	; 0x2c
 80049de:	693b      	ldr	r3, [r7, #16]
 80049e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049e2:	f1c3 0207 	rsb	r2, r3, #7
 80049e6:	693b      	ldr	r3, [r7, #16]
 80049e8:	619a      	str	r2, [r3, #24]
 80049ea:	693b      	ldr	r3, [r7, #16]
 80049ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80049ee:	2201      	movs	r2, #1
 80049f0:	409a      	lsls	r2, r3
 80049f2:	4b0f      	ldr	r3, [pc, #60]	; (8004a30 <xTaskPriorityDisinherit+0x108>)
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	4313      	orrs	r3, r2
 80049f8:	4a0d      	ldr	r2, [pc, #52]	; (8004a30 <xTaskPriorityDisinherit+0x108>)
 80049fa:	6013      	str	r3, [r2, #0]
 80049fc:	693b      	ldr	r3, [r7, #16]
 80049fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004a00:	4613      	mov	r3, r2
 8004a02:	009b      	lsls	r3, r3, #2
 8004a04:	4413      	add	r3, r2
 8004a06:	009b      	lsls	r3, r3, #2
 8004a08:	4a08      	ldr	r2, [pc, #32]	; (8004a2c <xTaskPriorityDisinherit+0x104>)
 8004a0a:	441a      	add	r2, r3
 8004a0c:	693b      	ldr	r3, [r7, #16]
 8004a0e:	3304      	adds	r3, #4
 8004a10:	4619      	mov	r1, r3
 8004a12:	4610      	mov	r0, r2
 8004a14:	f7fe fca9 	bl	800336a <vListInsertEnd>
 8004a18:	2301      	movs	r3, #1
 8004a1a:	617b      	str	r3, [r7, #20]
 8004a1c:	697b      	ldr	r3, [r7, #20]
 8004a1e:	4618      	mov	r0, r3
 8004a20:	3718      	adds	r7, #24
 8004a22:	46bd      	mov	sp, r7
 8004a24:	bd80      	pop	{r7, pc}
 8004a26:	bf00      	nop
 8004a28:	200007e4 	.word	0x200007e4
 8004a2c:	200007e8 	.word	0x200007e8
 8004a30:	200008ec 	.word	0x200008ec

08004a34 <prvAddCurrentTaskToDelayedList>:
 8004a34:	b580      	push	{r7, lr}
 8004a36:	b084      	sub	sp, #16
 8004a38:	af00      	add	r7, sp, #0
 8004a3a:	6078      	str	r0, [r7, #4]
 8004a3c:	6039      	str	r1, [r7, #0]
 8004a3e:	4b29      	ldr	r3, [pc, #164]	; (8004ae4 <prvAddCurrentTaskToDelayedList+0xb0>)
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	60fb      	str	r3, [r7, #12]
 8004a44:	4b28      	ldr	r3, [pc, #160]	; (8004ae8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004a46:	681b      	ldr	r3, [r3, #0]
 8004a48:	3304      	adds	r3, #4
 8004a4a:	4618      	mov	r0, r3
 8004a4c:	f7fe fce8 	bl	8003420 <uxListRemove>
 8004a50:	4603      	mov	r3, r0
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	d10b      	bne.n	8004a6e <prvAddCurrentTaskToDelayedList+0x3a>
 8004a56:	4b24      	ldr	r3, [pc, #144]	; (8004ae8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004a5c:	2201      	movs	r2, #1
 8004a5e:	fa02 f303 	lsl.w	r3, r2, r3
 8004a62:	43da      	mvns	r2, r3
 8004a64:	4b21      	ldr	r3, [pc, #132]	; (8004aec <prvAddCurrentTaskToDelayedList+0xb8>)
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	4013      	ands	r3, r2
 8004a6a:	4a20      	ldr	r2, [pc, #128]	; (8004aec <prvAddCurrentTaskToDelayedList+0xb8>)
 8004a6c:	6013      	str	r3, [r2, #0]
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a74:	d10a      	bne.n	8004a8c <prvAddCurrentTaskToDelayedList+0x58>
 8004a76:	683b      	ldr	r3, [r7, #0]
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	d007      	beq.n	8004a8c <prvAddCurrentTaskToDelayedList+0x58>
 8004a7c:	4b1a      	ldr	r3, [pc, #104]	; (8004ae8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	3304      	adds	r3, #4
 8004a82:	4619      	mov	r1, r3
 8004a84:	481a      	ldr	r0, [pc, #104]	; (8004af0 <prvAddCurrentTaskToDelayedList+0xbc>)
 8004a86:	f7fe fc70 	bl	800336a <vListInsertEnd>
 8004a8a:	e026      	b.n	8004ada <prvAddCurrentTaskToDelayedList+0xa6>
 8004a8c:	68fa      	ldr	r2, [r7, #12]
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	4413      	add	r3, r2
 8004a92:	60bb      	str	r3, [r7, #8]
 8004a94:	4b14      	ldr	r3, [pc, #80]	; (8004ae8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	68ba      	ldr	r2, [r7, #8]
 8004a9a:	605a      	str	r2, [r3, #4]
 8004a9c:	68ba      	ldr	r2, [r7, #8]
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	429a      	cmp	r2, r3
 8004aa2:	d209      	bcs.n	8004ab8 <prvAddCurrentTaskToDelayedList+0x84>
 8004aa4:	4b13      	ldr	r3, [pc, #76]	; (8004af4 <prvAddCurrentTaskToDelayedList+0xc0>)
 8004aa6:	681a      	ldr	r2, [r3, #0]
 8004aa8:	4b0f      	ldr	r3, [pc, #60]	; (8004ae8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	3304      	adds	r3, #4
 8004aae:	4619      	mov	r1, r3
 8004ab0:	4610      	mov	r0, r2
 8004ab2:	f7fe fc7d 	bl	80033b0 <vListInsert>
 8004ab6:	e010      	b.n	8004ada <prvAddCurrentTaskToDelayedList+0xa6>
 8004ab8:	4b0f      	ldr	r3, [pc, #60]	; (8004af8 <prvAddCurrentTaskToDelayedList+0xc4>)
 8004aba:	681a      	ldr	r2, [r3, #0]
 8004abc:	4b0a      	ldr	r3, [pc, #40]	; (8004ae8 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	3304      	adds	r3, #4
 8004ac2:	4619      	mov	r1, r3
 8004ac4:	4610      	mov	r0, r2
 8004ac6:	f7fe fc73 	bl	80033b0 <vListInsert>
 8004aca:	4b0c      	ldr	r3, [pc, #48]	; (8004afc <prvAddCurrentTaskToDelayedList+0xc8>)
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	68ba      	ldr	r2, [r7, #8]
 8004ad0:	429a      	cmp	r2, r3
 8004ad2:	d202      	bcs.n	8004ada <prvAddCurrentTaskToDelayedList+0xa6>
 8004ad4:	4a09      	ldr	r2, [pc, #36]	; (8004afc <prvAddCurrentTaskToDelayedList+0xc8>)
 8004ad6:	68bb      	ldr	r3, [r7, #8]
 8004ad8:	6013      	str	r3, [r2, #0]
 8004ada:	bf00      	nop
 8004adc:	3710      	adds	r7, #16
 8004ade:	46bd      	mov	sp, r7
 8004ae0:	bd80      	pop	{r7, pc}
 8004ae2:	bf00      	nop
 8004ae4:	200008e8 	.word	0x200008e8
 8004ae8:	200007e4 	.word	0x200007e4
 8004aec:	200008ec 	.word	0x200008ec
 8004af0:	200008d0 	.word	0x200008d0
 8004af4:	200008a0 	.word	0x200008a0
 8004af8:	2000089c 	.word	0x2000089c
 8004afc:	20000904 	.word	0x20000904

08004b00 <pxPortInitialiseStack>:
 8004b00:	b480      	push	{r7}
 8004b02:	b085      	sub	sp, #20
 8004b04:	af00      	add	r7, sp, #0
 8004b06:	60f8      	str	r0, [r7, #12]
 8004b08:	60b9      	str	r1, [r7, #8]
 8004b0a:	607a      	str	r2, [r7, #4]
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	3b04      	subs	r3, #4
 8004b10:	60fb      	str	r3, [r7, #12]
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8004b18:	601a      	str	r2, [r3, #0]
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	3b04      	subs	r3, #4
 8004b1e:	60fb      	str	r3, [r7, #12]
 8004b20:	68bb      	ldr	r3, [r7, #8]
 8004b22:	f023 0201 	bic.w	r2, r3, #1
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	601a      	str	r2, [r3, #0]
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	3b04      	subs	r3, #4
 8004b2e:	60fb      	str	r3, [r7, #12]
 8004b30:	4a08      	ldr	r2, [pc, #32]	; (8004b54 <pxPortInitialiseStack+0x54>)
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	601a      	str	r2, [r3, #0]
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	3b14      	subs	r3, #20
 8004b3a:	60fb      	str	r3, [r7, #12]
 8004b3c:	687a      	ldr	r2, [r7, #4]
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	601a      	str	r2, [r3, #0]
 8004b42:	68fb      	ldr	r3, [r7, #12]
 8004b44:	3b20      	subs	r3, #32
 8004b46:	60fb      	str	r3, [r7, #12]
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	4618      	mov	r0, r3
 8004b4c:	3714      	adds	r7, #20
 8004b4e:	46bd      	mov	sp, r7
 8004b50:	bc80      	pop	{r7}
 8004b52:	4770      	bx	lr
 8004b54:	08004b59 	.word	0x08004b59

08004b58 <prvTaskExitError>:
 8004b58:	b480      	push	{r7}
 8004b5a:	b085      	sub	sp, #20
 8004b5c:	af00      	add	r7, sp, #0
 8004b5e:	2300      	movs	r3, #0
 8004b60:	607b      	str	r3, [r7, #4]
 8004b62:	4b12      	ldr	r3, [pc, #72]	; (8004bac <prvTaskExitError+0x54>)
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b6a:	d00a      	beq.n	8004b82 <prvTaskExitError+0x2a>
 8004b6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b70:	f383 8811 	msr	BASEPRI, r3
 8004b74:	f3bf 8f6f 	isb	sy
 8004b78:	f3bf 8f4f 	dsb	sy
 8004b7c:	60fb      	str	r3, [r7, #12]
 8004b7e:	bf00      	nop
 8004b80:	e7fe      	b.n	8004b80 <prvTaskExitError+0x28>
 8004b82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b86:	f383 8811 	msr	BASEPRI, r3
 8004b8a:	f3bf 8f6f 	isb	sy
 8004b8e:	f3bf 8f4f 	dsb	sy
 8004b92:	60bb      	str	r3, [r7, #8]
 8004b94:	bf00      	nop
 8004b96:	bf00      	nop
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d0fc      	beq.n	8004b98 <prvTaskExitError+0x40>
 8004b9e:	bf00      	nop
 8004ba0:	bf00      	nop
 8004ba2:	3714      	adds	r7, #20
 8004ba4:	46bd      	mov	sp, r7
 8004ba6:	bc80      	pop	{r7}
 8004ba8:	4770      	bx	lr
 8004baa:	bf00      	nop
 8004bac:	20000014 	.word	0x20000014

08004bb0 <SVC_Handler>:
 8004bb0:	4b07      	ldr	r3, [pc, #28]	; (8004bd0 <pxCurrentTCBConst2>)
 8004bb2:	6819      	ldr	r1, [r3, #0]
 8004bb4:	6808      	ldr	r0, [r1, #0]
 8004bb6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8004bba:	f380 8809 	msr	PSP, r0
 8004bbe:	f3bf 8f6f 	isb	sy
 8004bc2:	f04f 0000 	mov.w	r0, #0
 8004bc6:	f380 8811 	msr	BASEPRI, r0
 8004bca:	f04e 0e0d 	orr.w	lr, lr, #13
 8004bce:	4770      	bx	lr

08004bd0 <pxCurrentTCBConst2>:
 8004bd0:	200007e4 	.word	0x200007e4
 8004bd4:	bf00      	nop
 8004bd6:	bf00      	nop

08004bd8 <prvPortStartFirstTask>:
 8004bd8:	4806      	ldr	r0, [pc, #24]	; (8004bf4 <prvPortStartFirstTask+0x1c>)
 8004bda:	6800      	ldr	r0, [r0, #0]
 8004bdc:	6800      	ldr	r0, [r0, #0]
 8004bde:	f380 8808 	msr	MSP, r0
 8004be2:	b662      	cpsie	i
 8004be4:	b661      	cpsie	f
 8004be6:	f3bf 8f4f 	dsb	sy
 8004bea:	f3bf 8f6f 	isb	sy
 8004bee:	df00      	svc	0
 8004bf0:	bf00      	nop
 8004bf2:	bf00      	nop
 8004bf4:	e000ed08 	.word	0xe000ed08

08004bf8 <xPortStartScheduler>:
 8004bf8:	b580      	push	{r7, lr}
 8004bfa:	b084      	sub	sp, #16
 8004bfc:	af00      	add	r7, sp, #0
 8004bfe:	4b32      	ldr	r3, [pc, #200]	; (8004cc8 <xPortStartScheduler+0xd0>)
 8004c00:	60fb      	str	r3, [r7, #12]
 8004c02:	68fb      	ldr	r3, [r7, #12]
 8004c04:	781b      	ldrb	r3, [r3, #0]
 8004c06:	b2db      	uxtb	r3, r3
 8004c08:	607b      	str	r3, [r7, #4]
 8004c0a:	68fb      	ldr	r3, [r7, #12]
 8004c0c:	22ff      	movs	r2, #255	; 0xff
 8004c0e:	701a      	strb	r2, [r3, #0]
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	781b      	ldrb	r3, [r3, #0]
 8004c14:	b2db      	uxtb	r3, r3
 8004c16:	70fb      	strb	r3, [r7, #3]
 8004c18:	78fb      	ldrb	r3, [r7, #3]
 8004c1a:	b2db      	uxtb	r3, r3
 8004c1c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8004c20:	b2da      	uxtb	r2, r3
 8004c22:	4b2a      	ldr	r3, [pc, #168]	; (8004ccc <xPortStartScheduler+0xd4>)
 8004c24:	701a      	strb	r2, [r3, #0]
 8004c26:	4b2a      	ldr	r3, [pc, #168]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c28:	2207      	movs	r2, #7
 8004c2a:	601a      	str	r2, [r3, #0]
 8004c2c:	e009      	b.n	8004c42 <xPortStartScheduler+0x4a>
 8004c2e:	4b28      	ldr	r3, [pc, #160]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c30:	681b      	ldr	r3, [r3, #0]
 8004c32:	3b01      	subs	r3, #1
 8004c34:	4a26      	ldr	r2, [pc, #152]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c36:	6013      	str	r3, [r2, #0]
 8004c38:	78fb      	ldrb	r3, [r7, #3]
 8004c3a:	b2db      	uxtb	r3, r3
 8004c3c:	005b      	lsls	r3, r3, #1
 8004c3e:	b2db      	uxtb	r3, r3
 8004c40:	70fb      	strb	r3, [r7, #3]
 8004c42:	78fb      	ldrb	r3, [r7, #3]
 8004c44:	b2db      	uxtb	r3, r3
 8004c46:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004c4a:	2b80      	cmp	r3, #128	; 0x80
 8004c4c:	d0ef      	beq.n	8004c2e <xPortStartScheduler+0x36>
 8004c4e:	4b20      	ldr	r3, [pc, #128]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	f1c3 0307 	rsb	r3, r3, #7
 8004c56:	2b04      	cmp	r3, #4
 8004c58:	d00a      	beq.n	8004c70 <xPortStartScheduler+0x78>
 8004c5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c5e:	f383 8811 	msr	BASEPRI, r3
 8004c62:	f3bf 8f6f 	isb	sy
 8004c66:	f3bf 8f4f 	dsb	sy
 8004c6a:	60bb      	str	r3, [r7, #8]
 8004c6c:	bf00      	nop
 8004c6e:	e7fe      	b.n	8004c6e <xPortStartScheduler+0x76>
 8004c70:	4b17      	ldr	r3, [pc, #92]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	021b      	lsls	r3, r3, #8
 8004c76:	4a16      	ldr	r2, [pc, #88]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c78:	6013      	str	r3, [r2, #0]
 8004c7a:	4b15      	ldr	r3, [pc, #84]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004c82:	4a13      	ldr	r2, [pc, #76]	; (8004cd0 <xPortStartScheduler+0xd8>)
 8004c84:	6013      	str	r3, [r2, #0]
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	b2da      	uxtb	r2, r3
 8004c8a:	68fb      	ldr	r3, [r7, #12]
 8004c8c:	701a      	strb	r2, [r3, #0]
 8004c8e:	4b11      	ldr	r3, [pc, #68]	; (8004cd4 <xPortStartScheduler+0xdc>)
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	4a10      	ldr	r2, [pc, #64]	; (8004cd4 <xPortStartScheduler+0xdc>)
 8004c94:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004c98:	6013      	str	r3, [r2, #0]
 8004c9a:	4b0e      	ldr	r3, [pc, #56]	; (8004cd4 <xPortStartScheduler+0xdc>)
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	4a0d      	ldr	r2, [pc, #52]	; (8004cd4 <xPortStartScheduler+0xdc>)
 8004ca0:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8004ca4:	6013      	str	r3, [r2, #0]
 8004ca6:	f000 f8b9 	bl	8004e1c <vPortSetupTimerInterrupt>
 8004caa:	4b0b      	ldr	r3, [pc, #44]	; (8004cd8 <xPortStartScheduler+0xe0>)
 8004cac:	2200      	movs	r2, #0
 8004cae:	601a      	str	r2, [r3, #0]
 8004cb0:	f7ff ff92 	bl	8004bd8 <prvPortStartFirstTask>
 8004cb4:	f7ff fbcc 	bl	8004450 <vTaskSwitchContext>
 8004cb8:	f7ff ff4e 	bl	8004b58 <prvTaskExitError>
 8004cbc:	2300      	movs	r3, #0
 8004cbe:	4618      	mov	r0, r3
 8004cc0:	3710      	adds	r7, #16
 8004cc2:	46bd      	mov	sp, r7
 8004cc4:	bd80      	pop	{r7, pc}
 8004cc6:	bf00      	nop
 8004cc8:	e000e400 	.word	0xe000e400
 8004ccc:	20000910 	.word	0x20000910
 8004cd0:	20000914 	.word	0x20000914
 8004cd4:	e000ed20 	.word	0xe000ed20
 8004cd8:	20000014 	.word	0x20000014

08004cdc <vPortEnterCritical>:
 8004cdc:	b480      	push	{r7}
 8004cde:	b083      	sub	sp, #12
 8004ce0:	af00      	add	r7, sp, #0
 8004ce2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004ce6:	f383 8811 	msr	BASEPRI, r3
 8004cea:	f3bf 8f6f 	isb	sy
 8004cee:	f3bf 8f4f 	dsb	sy
 8004cf2:	607b      	str	r3, [r7, #4]
 8004cf4:	bf00      	nop
 8004cf6:	4b0f      	ldr	r3, [pc, #60]	; (8004d34 <vPortEnterCritical+0x58>)
 8004cf8:	681b      	ldr	r3, [r3, #0]
 8004cfa:	3301      	adds	r3, #1
 8004cfc:	4a0d      	ldr	r2, [pc, #52]	; (8004d34 <vPortEnterCritical+0x58>)
 8004cfe:	6013      	str	r3, [r2, #0]
 8004d00:	4b0c      	ldr	r3, [pc, #48]	; (8004d34 <vPortEnterCritical+0x58>)
 8004d02:	681b      	ldr	r3, [r3, #0]
 8004d04:	2b01      	cmp	r3, #1
 8004d06:	d10f      	bne.n	8004d28 <vPortEnterCritical+0x4c>
 8004d08:	4b0b      	ldr	r3, [pc, #44]	; (8004d38 <vPortEnterCritical+0x5c>)
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	b2db      	uxtb	r3, r3
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d00a      	beq.n	8004d28 <vPortEnterCritical+0x4c>
 8004d12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004d16:	f383 8811 	msr	BASEPRI, r3
 8004d1a:	f3bf 8f6f 	isb	sy
 8004d1e:	f3bf 8f4f 	dsb	sy
 8004d22:	603b      	str	r3, [r7, #0]
 8004d24:	bf00      	nop
 8004d26:	e7fe      	b.n	8004d26 <vPortEnterCritical+0x4a>
 8004d28:	bf00      	nop
 8004d2a:	370c      	adds	r7, #12
 8004d2c:	46bd      	mov	sp, r7
 8004d2e:	bc80      	pop	{r7}
 8004d30:	4770      	bx	lr
 8004d32:	bf00      	nop
 8004d34:	20000014 	.word	0x20000014
 8004d38:	e000ed04 	.word	0xe000ed04

08004d3c <vPortExitCritical>:
 8004d3c:	b480      	push	{r7}
 8004d3e:	b083      	sub	sp, #12
 8004d40:	af00      	add	r7, sp, #0
 8004d42:	4b11      	ldr	r3, [pc, #68]	; (8004d88 <vPortExitCritical+0x4c>)
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	2b00      	cmp	r3, #0
 8004d48:	d10a      	bne.n	8004d60 <vPortExitCritical+0x24>
 8004d4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004d4e:	f383 8811 	msr	BASEPRI, r3
 8004d52:	f3bf 8f6f 	isb	sy
 8004d56:	f3bf 8f4f 	dsb	sy
 8004d5a:	607b      	str	r3, [r7, #4]
 8004d5c:	bf00      	nop
 8004d5e:	e7fe      	b.n	8004d5e <vPortExitCritical+0x22>
 8004d60:	4b09      	ldr	r3, [pc, #36]	; (8004d88 <vPortExitCritical+0x4c>)
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	3b01      	subs	r3, #1
 8004d66:	4a08      	ldr	r2, [pc, #32]	; (8004d88 <vPortExitCritical+0x4c>)
 8004d68:	6013      	str	r3, [r2, #0]
 8004d6a:	4b07      	ldr	r3, [pc, #28]	; (8004d88 <vPortExitCritical+0x4c>)
 8004d6c:	681b      	ldr	r3, [r3, #0]
 8004d6e:	2b00      	cmp	r3, #0
 8004d70:	d105      	bne.n	8004d7e <vPortExitCritical+0x42>
 8004d72:	2300      	movs	r3, #0
 8004d74:	603b      	str	r3, [r7, #0]
 8004d76:	683b      	ldr	r3, [r7, #0]
 8004d78:	f383 8811 	msr	BASEPRI, r3
 8004d7c:	bf00      	nop
 8004d7e:	bf00      	nop
 8004d80:	370c      	adds	r7, #12
 8004d82:	46bd      	mov	sp, r7
 8004d84:	bc80      	pop	{r7}
 8004d86:	4770      	bx	lr
 8004d88:	20000014 	.word	0x20000014
 8004d8c:	00000000 	.word	0x00000000

08004d90 <PendSV_Handler>:
 8004d90:	f3ef 8009 	mrs	r0, PSP
 8004d94:	f3bf 8f6f 	isb	sy
 8004d98:	4b0d      	ldr	r3, [pc, #52]	; (8004dd0 <pxCurrentTCBConst>)
 8004d9a:	681a      	ldr	r2, [r3, #0]
 8004d9c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8004da0:	6010      	str	r0, [r2, #0]
 8004da2:	e92d 4008 	stmdb	sp!, {r3, lr}
 8004da6:	f04f 0050 	mov.w	r0, #80	; 0x50
 8004daa:	f380 8811 	msr	BASEPRI, r0
 8004dae:	f7ff fb4f 	bl	8004450 <vTaskSwitchContext>
 8004db2:	f04f 0000 	mov.w	r0, #0
 8004db6:	f380 8811 	msr	BASEPRI, r0
 8004dba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004dbe:	6819      	ldr	r1, [r3, #0]
 8004dc0:	6808      	ldr	r0, [r1, #0]
 8004dc2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8004dc6:	f380 8809 	msr	PSP, r0
 8004dca:	f3bf 8f6f 	isb	sy
 8004dce:	4770      	bx	lr

08004dd0 <pxCurrentTCBConst>:
 8004dd0:	200007e4 	.word	0x200007e4
 8004dd4:	bf00      	nop
 8004dd6:	bf00      	nop

08004dd8 <SysTick_Handler>:
 8004dd8:	b580      	push	{r7, lr}
 8004dda:	b082      	sub	sp, #8
 8004ddc:	af00      	add	r7, sp, #0
 8004dde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004de2:	f383 8811 	msr	BASEPRI, r3
 8004de6:	f3bf 8f6f 	isb	sy
 8004dea:	f3bf 8f4f 	dsb	sy
 8004dee:	607b      	str	r3, [r7, #4]
 8004df0:	bf00      	nop
 8004df2:	f7ff fa53 	bl	800429c <xTaskIncrementTick>
 8004df6:	4603      	mov	r3, r0
 8004df8:	2b00      	cmp	r3, #0
 8004dfa:	d003      	beq.n	8004e04 <SysTick_Handler+0x2c>
 8004dfc:	4b06      	ldr	r3, [pc, #24]	; (8004e18 <SysTick_Handler+0x40>)
 8004dfe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004e02:	601a      	str	r2, [r3, #0]
 8004e04:	2300      	movs	r3, #0
 8004e06:	603b      	str	r3, [r7, #0]
 8004e08:	683b      	ldr	r3, [r7, #0]
 8004e0a:	f383 8811 	msr	BASEPRI, r3
 8004e0e:	bf00      	nop
 8004e10:	bf00      	nop
 8004e12:	3708      	adds	r7, #8
 8004e14:	46bd      	mov	sp, r7
 8004e16:	bd80      	pop	{r7, pc}
 8004e18:	e000ed04 	.word	0xe000ed04

08004e1c <vPortSetupTimerInterrupt>:
 8004e1c:	b480      	push	{r7}
 8004e1e:	af00      	add	r7, sp, #0
 8004e20:	4b0a      	ldr	r3, [pc, #40]	; (8004e4c <vPortSetupTimerInterrupt+0x30>)
 8004e22:	2200      	movs	r2, #0
 8004e24:	601a      	str	r2, [r3, #0]
 8004e26:	4b0a      	ldr	r3, [pc, #40]	; (8004e50 <vPortSetupTimerInterrupt+0x34>)
 8004e28:	2200      	movs	r2, #0
 8004e2a:	601a      	str	r2, [r3, #0]
 8004e2c:	4b09      	ldr	r3, [pc, #36]	; (8004e54 <vPortSetupTimerInterrupt+0x38>)
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	4a09      	ldr	r2, [pc, #36]	; (8004e58 <vPortSetupTimerInterrupt+0x3c>)
 8004e32:	fba2 2303 	umull	r2, r3, r2, r3
 8004e36:	099b      	lsrs	r3, r3, #6
 8004e38:	4a08      	ldr	r2, [pc, #32]	; (8004e5c <vPortSetupTimerInterrupt+0x40>)
 8004e3a:	3b01      	subs	r3, #1
 8004e3c:	6013      	str	r3, [r2, #0]
 8004e3e:	4b03      	ldr	r3, [pc, #12]	; (8004e4c <vPortSetupTimerInterrupt+0x30>)
 8004e40:	2207      	movs	r2, #7
 8004e42:	601a      	str	r2, [r3, #0]
 8004e44:	bf00      	nop
 8004e46:	46bd      	mov	sp, r7
 8004e48:	bc80      	pop	{r7}
 8004e4a:	4770      	bx	lr
 8004e4c:	e000e010 	.word	0xe000e010
 8004e50:	e000e018 	.word	0xe000e018
 8004e54:	20000000 	.word	0x20000000
 8004e58:	10624dd3 	.word	0x10624dd3
 8004e5c:	e000e014 	.word	0xe000e014

08004e60 <pvPortMalloc>:
 8004e60:	b580      	push	{r7, lr}
 8004e62:	b08a      	sub	sp, #40	; 0x28
 8004e64:	af00      	add	r7, sp, #0
 8004e66:	6078      	str	r0, [r7, #4]
 8004e68:	2300      	movs	r3, #0
 8004e6a:	61fb      	str	r3, [r7, #28]
 8004e6c:	f7ff f95e 	bl	800412c <vTaskSuspendAll>
 8004e70:	4b5b      	ldr	r3, [pc, #364]	; (8004fe0 <pvPortMalloc+0x180>)
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	2b00      	cmp	r3, #0
 8004e76:	d101      	bne.n	8004e7c <pvPortMalloc+0x1c>
 8004e78:	f000 f916 	bl	80050a8 <prvHeapInit>
 8004e7c:	4b59      	ldr	r3, [pc, #356]	; (8004fe4 <pvPortMalloc+0x184>)
 8004e7e:	681a      	ldr	r2, [r3, #0]
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	4013      	ands	r3, r2
 8004e84:	2b00      	cmp	r3, #0
 8004e86:	f040 808e 	bne.w	8004fa6 <pvPortMalloc+0x146>
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	d01d      	beq.n	8004ecc <pvPortMalloc+0x6c>
 8004e90:	2208      	movs	r2, #8
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	4413      	add	r3, r2
 8004e96:	607b      	str	r3, [r7, #4]
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	f003 0307 	and.w	r3, r3, #7
 8004e9e:	2b00      	cmp	r3, #0
 8004ea0:	d014      	beq.n	8004ecc <pvPortMalloc+0x6c>
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	f023 0307 	bic.w	r3, r3, #7
 8004ea8:	3308      	adds	r3, #8
 8004eaa:	607b      	str	r3, [r7, #4]
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	f003 0307 	and.w	r3, r3, #7
 8004eb2:	2b00      	cmp	r3, #0
 8004eb4:	d00a      	beq.n	8004ecc <pvPortMalloc+0x6c>
 8004eb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004eba:	f383 8811 	msr	BASEPRI, r3
 8004ebe:	f3bf 8f6f 	isb	sy
 8004ec2:	f3bf 8f4f 	dsb	sy
 8004ec6:	617b      	str	r3, [r7, #20]
 8004ec8:	bf00      	nop
 8004eca:	e7fe      	b.n	8004eca <pvPortMalloc+0x6a>
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	d069      	beq.n	8004fa6 <pvPortMalloc+0x146>
 8004ed2:	4b45      	ldr	r3, [pc, #276]	; (8004fe8 <pvPortMalloc+0x188>)
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	687a      	ldr	r2, [r7, #4]
 8004ed8:	429a      	cmp	r2, r3
 8004eda:	d864      	bhi.n	8004fa6 <pvPortMalloc+0x146>
 8004edc:	4b43      	ldr	r3, [pc, #268]	; (8004fec <pvPortMalloc+0x18c>)
 8004ede:	623b      	str	r3, [r7, #32]
 8004ee0:	4b42      	ldr	r3, [pc, #264]	; (8004fec <pvPortMalloc+0x18c>)
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	627b      	str	r3, [r7, #36]	; 0x24
 8004ee6:	e004      	b.n	8004ef2 <pvPortMalloc+0x92>
 8004ee8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eea:	623b      	str	r3, [r7, #32]
 8004eec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eee:	681b      	ldr	r3, [r3, #0]
 8004ef0:	627b      	str	r3, [r7, #36]	; 0x24
 8004ef2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ef4:	685b      	ldr	r3, [r3, #4]
 8004ef6:	687a      	ldr	r2, [r7, #4]
 8004ef8:	429a      	cmp	r2, r3
 8004efa:	d903      	bls.n	8004f04 <pvPortMalloc+0xa4>
 8004efc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	d1f1      	bne.n	8004ee8 <pvPortMalloc+0x88>
 8004f04:	4b36      	ldr	r3, [pc, #216]	; (8004fe0 <pvPortMalloc+0x180>)
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004f0a:	429a      	cmp	r2, r3
 8004f0c:	d04b      	beq.n	8004fa6 <pvPortMalloc+0x146>
 8004f0e:	6a3b      	ldr	r3, [r7, #32]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	2208      	movs	r2, #8
 8004f14:	4413      	add	r3, r2
 8004f16:	61fb      	str	r3, [r7, #28]
 8004f18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f1a:	681a      	ldr	r2, [r3, #0]
 8004f1c:	6a3b      	ldr	r3, [r7, #32]
 8004f1e:	601a      	str	r2, [r3, #0]
 8004f20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f22:	685a      	ldr	r2, [r3, #4]
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	1ad2      	subs	r2, r2, r3
 8004f28:	2308      	movs	r3, #8
 8004f2a:	005b      	lsls	r3, r3, #1
 8004f2c:	429a      	cmp	r2, r3
 8004f2e:	d91f      	bls.n	8004f70 <pvPortMalloc+0x110>
 8004f30:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004f32:	687b      	ldr	r3, [r7, #4]
 8004f34:	4413      	add	r3, r2
 8004f36:	61bb      	str	r3, [r7, #24]
 8004f38:	69bb      	ldr	r3, [r7, #24]
 8004f3a:	f003 0307 	and.w	r3, r3, #7
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d00a      	beq.n	8004f58 <pvPortMalloc+0xf8>
 8004f42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004f46:	f383 8811 	msr	BASEPRI, r3
 8004f4a:	f3bf 8f6f 	isb	sy
 8004f4e:	f3bf 8f4f 	dsb	sy
 8004f52:	613b      	str	r3, [r7, #16]
 8004f54:	bf00      	nop
 8004f56:	e7fe      	b.n	8004f56 <pvPortMalloc+0xf6>
 8004f58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f5a:	685a      	ldr	r2, [r3, #4]
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	1ad2      	subs	r2, r2, r3
 8004f60:	69bb      	ldr	r3, [r7, #24]
 8004f62:	605a      	str	r2, [r3, #4]
 8004f64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f66:	687a      	ldr	r2, [r7, #4]
 8004f68:	605a      	str	r2, [r3, #4]
 8004f6a:	69b8      	ldr	r0, [r7, #24]
 8004f6c:	f000 f8fe 	bl	800516c <prvInsertBlockIntoFreeList>
 8004f70:	4b1d      	ldr	r3, [pc, #116]	; (8004fe8 <pvPortMalloc+0x188>)
 8004f72:	681a      	ldr	r2, [r3, #0]
 8004f74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f76:	685b      	ldr	r3, [r3, #4]
 8004f78:	1ad3      	subs	r3, r2, r3
 8004f7a:	4a1b      	ldr	r2, [pc, #108]	; (8004fe8 <pvPortMalloc+0x188>)
 8004f7c:	6013      	str	r3, [r2, #0]
 8004f7e:	4b1a      	ldr	r3, [pc, #104]	; (8004fe8 <pvPortMalloc+0x188>)
 8004f80:	681a      	ldr	r2, [r3, #0]
 8004f82:	4b1b      	ldr	r3, [pc, #108]	; (8004ff0 <pvPortMalloc+0x190>)
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	429a      	cmp	r2, r3
 8004f88:	d203      	bcs.n	8004f92 <pvPortMalloc+0x132>
 8004f8a:	4b17      	ldr	r3, [pc, #92]	; (8004fe8 <pvPortMalloc+0x188>)
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	4a18      	ldr	r2, [pc, #96]	; (8004ff0 <pvPortMalloc+0x190>)
 8004f90:	6013      	str	r3, [r2, #0]
 8004f92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f94:	685a      	ldr	r2, [r3, #4]
 8004f96:	4b13      	ldr	r3, [pc, #76]	; (8004fe4 <pvPortMalloc+0x184>)
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	431a      	orrs	r2, r3
 8004f9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f9e:	605a      	str	r2, [r3, #4]
 8004fa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fa2:	2200      	movs	r2, #0
 8004fa4:	601a      	str	r2, [r3, #0]
 8004fa6:	f7ff f8cf 	bl	8004148 <xTaskResumeAll>
 8004faa:	69fb      	ldr	r3, [r7, #28]
 8004fac:	2b00      	cmp	r3, #0
 8004fae:	d101      	bne.n	8004fb4 <pvPortMalloc+0x154>
 8004fb0:	f7fb f8d8 	bl	8000164 <vApplicationMallocFailedHook>
 8004fb4:	69fb      	ldr	r3, [r7, #28]
 8004fb6:	f003 0307 	and.w	r3, r3, #7
 8004fba:	2b00      	cmp	r3, #0
 8004fbc:	d00a      	beq.n	8004fd4 <pvPortMalloc+0x174>
 8004fbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004fc2:	f383 8811 	msr	BASEPRI, r3
 8004fc6:	f3bf 8f6f 	isb	sy
 8004fca:	f3bf 8f4f 	dsb	sy
 8004fce:	60fb      	str	r3, [r7, #12]
 8004fd0:	bf00      	nop
 8004fd2:	e7fe      	b.n	8004fd2 <pvPortMalloc+0x172>
 8004fd4:	69fb      	ldr	r3, [r7, #28]
 8004fd6:	4618      	mov	r0, r3
 8004fd8:	3728      	adds	r7, #40	; 0x28
 8004fda:	46bd      	mov	sp, r7
 8004fdc:	bd80      	pop	{r7, pc}
 8004fde:	bf00      	nop
 8004fe0:	20001520 	.word	0x20001520
 8004fe4:	2000152c 	.word	0x2000152c
 8004fe8:	20001524 	.word	0x20001524
 8004fec:	20001518 	.word	0x20001518
 8004ff0:	20001528 	.word	0x20001528

08004ff4 <vPortFree>:
 8004ff4:	b580      	push	{r7, lr}
 8004ff6:	b086      	sub	sp, #24
 8004ff8:	af00      	add	r7, sp, #0
 8004ffa:	6078      	str	r0, [r7, #4]
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	617b      	str	r3, [r7, #20]
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	2b00      	cmp	r3, #0
 8005004:	d048      	beq.n	8005098 <vPortFree+0xa4>
 8005006:	2308      	movs	r3, #8
 8005008:	425b      	negs	r3, r3
 800500a:	697a      	ldr	r2, [r7, #20]
 800500c:	4413      	add	r3, r2
 800500e:	617b      	str	r3, [r7, #20]
 8005010:	697b      	ldr	r3, [r7, #20]
 8005012:	613b      	str	r3, [r7, #16]
 8005014:	693b      	ldr	r3, [r7, #16]
 8005016:	685a      	ldr	r2, [r3, #4]
 8005018:	4b21      	ldr	r3, [pc, #132]	; (80050a0 <vPortFree+0xac>)
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	4013      	ands	r3, r2
 800501e:	2b00      	cmp	r3, #0
 8005020:	d10a      	bne.n	8005038 <vPortFree+0x44>
 8005022:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005026:	f383 8811 	msr	BASEPRI, r3
 800502a:	f3bf 8f6f 	isb	sy
 800502e:	f3bf 8f4f 	dsb	sy
 8005032:	60fb      	str	r3, [r7, #12]
 8005034:	bf00      	nop
 8005036:	e7fe      	b.n	8005036 <vPortFree+0x42>
 8005038:	693b      	ldr	r3, [r7, #16]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	2b00      	cmp	r3, #0
 800503e:	d00a      	beq.n	8005056 <vPortFree+0x62>
 8005040:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005044:	f383 8811 	msr	BASEPRI, r3
 8005048:	f3bf 8f6f 	isb	sy
 800504c:	f3bf 8f4f 	dsb	sy
 8005050:	60bb      	str	r3, [r7, #8]
 8005052:	bf00      	nop
 8005054:	e7fe      	b.n	8005054 <vPortFree+0x60>
 8005056:	693b      	ldr	r3, [r7, #16]
 8005058:	685a      	ldr	r2, [r3, #4]
 800505a:	4b11      	ldr	r3, [pc, #68]	; (80050a0 <vPortFree+0xac>)
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	4013      	ands	r3, r2
 8005060:	2b00      	cmp	r3, #0
 8005062:	d019      	beq.n	8005098 <vPortFree+0xa4>
 8005064:	693b      	ldr	r3, [r7, #16]
 8005066:	681b      	ldr	r3, [r3, #0]
 8005068:	2b00      	cmp	r3, #0
 800506a:	d115      	bne.n	8005098 <vPortFree+0xa4>
 800506c:	693b      	ldr	r3, [r7, #16]
 800506e:	685a      	ldr	r2, [r3, #4]
 8005070:	4b0b      	ldr	r3, [pc, #44]	; (80050a0 <vPortFree+0xac>)
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	43db      	mvns	r3, r3
 8005076:	401a      	ands	r2, r3
 8005078:	693b      	ldr	r3, [r7, #16]
 800507a:	605a      	str	r2, [r3, #4]
 800507c:	f7ff f856 	bl	800412c <vTaskSuspendAll>
 8005080:	693b      	ldr	r3, [r7, #16]
 8005082:	685a      	ldr	r2, [r3, #4]
 8005084:	4b07      	ldr	r3, [pc, #28]	; (80050a4 <vPortFree+0xb0>)
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	4413      	add	r3, r2
 800508a:	4a06      	ldr	r2, [pc, #24]	; (80050a4 <vPortFree+0xb0>)
 800508c:	6013      	str	r3, [r2, #0]
 800508e:	6938      	ldr	r0, [r7, #16]
 8005090:	f000 f86c 	bl	800516c <prvInsertBlockIntoFreeList>
 8005094:	f7ff f858 	bl	8004148 <xTaskResumeAll>
 8005098:	bf00      	nop
 800509a:	3718      	adds	r7, #24
 800509c:	46bd      	mov	sp, r7
 800509e:	bd80      	pop	{r7, pc}
 80050a0:	2000152c 	.word	0x2000152c
 80050a4:	20001524 	.word	0x20001524

080050a8 <prvHeapInit>:
 80050a8:	b480      	push	{r7}
 80050aa:	b085      	sub	sp, #20
 80050ac:	af00      	add	r7, sp, #0
 80050ae:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80050b2:	60bb      	str	r3, [r7, #8]
 80050b4:	4b27      	ldr	r3, [pc, #156]	; (8005154 <prvHeapInit+0xac>)
 80050b6:	60fb      	str	r3, [r7, #12]
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	f003 0307 	and.w	r3, r3, #7
 80050be:	2b00      	cmp	r3, #0
 80050c0:	d00c      	beq.n	80050dc <prvHeapInit+0x34>
 80050c2:	68fb      	ldr	r3, [r7, #12]
 80050c4:	3307      	adds	r3, #7
 80050c6:	60fb      	str	r3, [r7, #12]
 80050c8:	68fb      	ldr	r3, [r7, #12]
 80050ca:	f023 0307 	bic.w	r3, r3, #7
 80050ce:	60fb      	str	r3, [r7, #12]
 80050d0:	68ba      	ldr	r2, [r7, #8]
 80050d2:	68fb      	ldr	r3, [r7, #12]
 80050d4:	1ad3      	subs	r3, r2, r3
 80050d6:	4a1f      	ldr	r2, [pc, #124]	; (8005154 <prvHeapInit+0xac>)
 80050d8:	4413      	add	r3, r2
 80050da:	60bb      	str	r3, [r7, #8]
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	607b      	str	r3, [r7, #4]
 80050e0:	4a1d      	ldr	r2, [pc, #116]	; (8005158 <prvHeapInit+0xb0>)
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	6013      	str	r3, [r2, #0]
 80050e6:	4b1c      	ldr	r3, [pc, #112]	; (8005158 <prvHeapInit+0xb0>)
 80050e8:	2200      	movs	r2, #0
 80050ea:	605a      	str	r2, [r3, #4]
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	68ba      	ldr	r2, [r7, #8]
 80050f0:	4413      	add	r3, r2
 80050f2:	60fb      	str	r3, [r7, #12]
 80050f4:	2208      	movs	r2, #8
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	1a9b      	subs	r3, r3, r2
 80050fa:	60fb      	str	r3, [r7, #12]
 80050fc:	68fb      	ldr	r3, [r7, #12]
 80050fe:	f023 0307 	bic.w	r3, r3, #7
 8005102:	60fb      	str	r3, [r7, #12]
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	4a15      	ldr	r2, [pc, #84]	; (800515c <prvHeapInit+0xb4>)
 8005108:	6013      	str	r3, [r2, #0]
 800510a:	4b14      	ldr	r3, [pc, #80]	; (800515c <prvHeapInit+0xb4>)
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	2200      	movs	r2, #0
 8005110:	605a      	str	r2, [r3, #4]
 8005112:	4b12      	ldr	r3, [pc, #72]	; (800515c <prvHeapInit+0xb4>)
 8005114:	681b      	ldr	r3, [r3, #0]
 8005116:	2200      	movs	r2, #0
 8005118:	601a      	str	r2, [r3, #0]
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	603b      	str	r3, [r7, #0]
 800511e:	683b      	ldr	r3, [r7, #0]
 8005120:	68fa      	ldr	r2, [r7, #12]
 8005122:	1ad2      	subs	r2, r2, r3
 8005124:	683b      	ldr	r3, [r7, #0]
 8005126:	605a      	str	r2, [r3, #4]
 8005128:	4b0c      	ldr	r3, [pc, #48]	; (800515c <prvHeapInit+0xb4>)
 800512a:	681a      	ldr	r2, [r3, #0]
 800512c:	683b      	ldr	r3, [r7, #0]
 800512e:	601a      	str	r2, [r3, #0]
 8005130:	683b      	ldr	r3, [r7, #0]
 8005132:	685b      	ldr	r3, [r3, #4]
 8005134:	4a0a      	ldr	r2, [pc, #40]	; (8005160 <prvHeapInit+0xb8>)
 8005136:	6013      	str	r3, [r2, #0]
 8005138:	683b      	ldr	r3, [r7, #0]
 800513a:	685b      	ldr	r3, [r3, #4]
 800513c:	4a09      	ldr	r2, [pc, #36]	; (8005164 <prvHeapInit+0xbc>)
 800513e:	6013      	str	r3, [r2, #0]
 8005140:	4b09      	ldr	r3, [pc, #36]	; (8005168 <prvHeapInit+0xc0>)
 8005142:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8005146:	601a      	str	r2, [r3, #0]
 8005148:	bf00      	nop
 800514a:	3714      	adds	r7, #20
 800514c:	46bd      	mov	sp, r7
 800514e:	bc80      	pop	{r7}
 8005150:	4770      	bx	lr
 8005152:	bf00      	nop
 8005154:	20000918 	.word	0x20000918
 8005158:	20001518 	.word	0x20001518
 800515c:	20001520 	.word	0x20001520
 8005160:	20001528 	.word	0x20001528
 8005164:	20001524 	.word	0x20001524
 8005168:	2000152c 	.word	0x2000152c

0800516c <prvInsertBlockIntoFreeList>:
 800516c:	b480      	push	{r7}
 800516e:	b085      	sub	sp, #20
 8005170:	af00      	add	r7, sp, #0
 8005172:	6078      	str	r0, [r7, #4]
 8005174:	4b27      	ldr	r3, [pc, #156]	; (8005214 <prvInsertBlockIntoFreeList+0xa8>)
 8005176:	60fb      	str	r3, [r7, #12]
 8005178:	e002      	b.n	8005180 <prvInsertBlockIntoFreeList+0x14>
 800517a:	68fb      	ldr	r3, [r7, #12]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	60fb      	str	r3, [r7, #12]
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	687a      	ldr	r2, [r7, #4]
 8005186:	429a      	cmp	r2, r3
 8005188:	d8f7      	bhi.n	800517a <prvInsertBlockIntoFreeList+0xe>
 800518a:	68fb      	ldr	r3, [r7, #12]
 800518c:	60bb      	str	r3, [r7, #8]
 800518e:	68fb      	ldr	r3, [r7, #12]
 8005190:	685b      	ldr	r3, [r3, #4]
 8005192:	68ba      	ldr	r2, [r7, #8]
 8005194:	4413      	add	r3, r2
 8005196:	687a      	ldr	r2, [r7, #4]
 8005198:	429a      	cmp	r2, r3
 800519a:	d108      	bne.n	80051ae <prvInsertBlockIntoFreeList+0x42>
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	685a      	ldr	r2, [r3, #4]
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	685b      	ldr	r3, [r3, #4]
 80051a4:	441a      	add	r2, r3
 80051a6:	68fb      	ldr	r3, [r7, #12]
 80051a8:	605a      	str	r2, [r3, #4]
 80051aa:	68fb      	ldr	r3, [r7, #12]
 80051ac:	607b      	str	r3, [r7, #4]
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	60bb      	str	r3, [r7, #8]
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	685b      	ldr	r3, [r3, #4]
 80051b6:	68ba      	ldr	r2, [r7, #8]
 80051b8:	441a      	add	r2, r3
 80051ba:	68fb      	ldr	r3, [r7, #12]
 80051bc:	681b      	ldr	r3, [r3, #0]
 80051be:	429a      	cmp	r2, r3
 80051c0:	d118      	bne.n	80051f4 <prvInsertBlockIntoFreeList+0x88>
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	681a      	ldr	r2, [r3, #0]
 80051c6:	4b14      	ldr	r3, [pc, #80]	; (8005218 <prvInsertBlockIntoFreeList+0xac>)
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	429a      	cmp	r2, r3
 80051cc:	d00d      	beq.n	80051ea <prvInsertBlockIntoFreeList+0x7e>
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	685a      	ldr	r2, [r3, #4]
 80051d2:	68fb      	ldr	r3, [r7, #12]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	685b      	ldr	r3, [r3, #4]
 80051d8:	441a      	add	r2, r3
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	605a      	str	r2, [r3, #4]
 80051de:	68fb      	ldr	r3, [r7, #12]
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	681a      	ldr	r2, [r3, #0]
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	601a      	str	r2, [r3, #0]
 80051e8:	e008      	b.n	80051fc <prvInsertBlockIntoFreeList+0x90>
 80051ea:	4b0b      	ldr	r3, [pc, #44]	; (8005218 <prvInsertBlockIntoFreeList+0xac>)
 80051ec:	681a      	ldr	r2, [r3, #0]
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	601a      	str	r2, [r3, #0]
 80051f2:	e003      	b.n	80051fc <prvInsertBlockIntoFreeList+0x90>
 80051f4:	68fb      	ldr	r3, [r7, #12]
 80051f6:	681a      	ldr	r2, [r3, #0]
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	601a      	str	r2, [r3, #0]
 80051fc:	68fa      	ldr	r2, [r7, #12]
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	429a      	cmp	r2, r3
 8005202:	d002      	beq.n	800520a <prvInsertBlockIntoFreeList+0x9e>
 8005204:	68fb      	ldr	r3, [r7, #12]
 8005206:	687a      	ldr	r2, [r7, #4]
 8005208:	601a      	str	r2, [r3, #0]
 800520a:	bf00      	nop
 800520c:	3714      	adds	r7, #20
 800520e:	46bd      	mov	sp, r7
 8005210:	bc80      	pop	{r7}
 8005212:	4770      	bx	lr
 8005214:	20001518 	.word	0x20001518
 8005218:	20001520 	.word	0x20001520

0800521c <std>:
 800521c:	2300      	movs	r3, #0
 800521e:	b510      	push	{r4, lr}
 8005220:	4604      	mov	r4, r0
 8005222:	e9c0 3300 	strd	r3, r3, [r0]
 8005226:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800522a:	6083      	str	r3, [r0, #8]
 800522c:	8181      	strh	r1, [r0, #12]
 800522e:	6643      	str	r3, [r0, #100]	; 0x64
 8005230:	81c2      	strh	r2, [r0, #14]
 8005232:	6183      	str	r3, [r0, #24]
 8005234:	4619      	mov	r1, r3
 8005236:	2208      	movs	r2, #8
 8005238:	305c      	adds	r0, #92	; 0x5c
 800523a:	f000 f9f7 	bl	800562c <memset>
 800523e:	4b0d      	ldr	r3, [pc, #52]	; (8005274 <std+0x58>)
 8005240:	6224      	str	r4, [r4, #32]
 8005242:	6263      	str	r3, [r4, #36]	; 0x24
 8005244:	4b0c      	ldr	r3, [pc, #48]	; (8005278 <std+0x5c>)
 8005246:	62a3      	str	r3, [r4, #40]	; 0x28
 8005248:	4b0c      	ldr	r3, [pc, #48]	; (800527c <std+0x60>)
 800524a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800524c:	4b0c      	ldr	r3, [pc, #48]	; (8005280 <std+0x64>)
 800524e:	6323      	str	r3, [r4, #48]	; 0x30
 8005250:	4b0c      	ldr	r3, [pc, #48]	; (8005284 <std+0x68>)
 8005252:	429c      	cmp	r4, r3
 8005254:	d006      	beq.n	8005264 <std+0x48>
 8005256:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800525a:	4294      	cmp	r4, r2
 800525c:	d002      	beq.n	8005264 <std+0x48>
 800525e:	33d0      	adds	r3, #208	; 0xd0
 8005260:	429c      	cmp	r4, r3
 8005262:	d105      	bne.n	8005270 <std+0x54>
 8005264:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8005268:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800526c:	f000 ba56 	b.w	800571c <__retarget_lock_init_recursive>
 8005270:	bd10      	pop	{r4, pc}
 8005272:	bf00      	nop
 8005274:	0800547d 	.word	0x0800547d
 8005278:	0800549f 	.word	0x0800549f
 800527c:	080054d7 	.word	0x080054d7
 8005280:	080054fb 	.word	0x080054fb
 8005284:	20001530 	.word	0x20001530

08005288 <stdio_exit_handler>:
 8005288:	4a02      	ldr	r2, [pc, #8]	; (8005294 <stdio_exit_handler+0xc>)
 800528a:	4903      	ldr	r1, [pc, #12]	; (8005298 <stdio_exit_handler+0x10>)
 800528c:	4803      	ldr	r0, [pc, #12]	; (800529c <stdio_exit_handler+0x14>)
 800528e:	f000 b869 	b.w	8005364 <_fwalk_sglue>
 8005292:	bf00      	nop
 8005294:	20000018 	.word	0x20000018
 8005298:	08005fd9 	.word	0x08005fd9
 800529c:	20000024 	.word	0x20000024

080052a0 <cleanup_stdio>:
 80052a0:	6841      	ldr	r1, [r0, #4]
 80052a2:	4b0c      	ldr	r3, [pc, #48]	; (80052d4 <cleanup_stdio+0x34>)
 80052a4:	b510      	push	{r4, lr}
 80052a6:	4299      	cmp	r1, r3
 80052a8:	4604      	mov	r4, r0
 80052aa:	d001      	beq.n	80052b0 <cleanup_stdio+0x10>
 80052ac:	f000 fe94 	bl	8005fd8 <_fflush_r>
 80052b0:	68a1      	ldr	r1, [r4, #8]
 80052b2:	4b09      	ldr	r3, [pc, #36]	; (80052d8 <cleanup_stdio+0x38>)
 80052b4:	4299      	cmp	r1, r3
 80052b6:	d002      	beq.n	80052be <cleanup_stdio+0x1e>
 80052b8:	4620      	mov	r0, r4
 80052ba:	f000 fe8d 	bl	8005fd8 <_fflush_r>
 80052be:	68e1      	ldr	r1, [r4, #12]
 80052c0:	4b06      	ldr	r3, [pc, #24]	; (80052dc <cleanup_stdio+0x3c>)
 80052c2:	4299      	cmp	r1, r3
 80052c4:	d004      	beq.n	80052d0 <cleanup_stdio+0x30>
 80052c6:	4620      	mov	r0, r4
 80052c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80052cc:	f000 be84 	b.w	8005fd8 <_fflush_r>
 80052d0:	bd10      	pop	{r4, pc}
 80052d2:	bf00      	nop
 80052d4:	20001530 	.word	0x20001530
 80052d8:	20001598 	.word	0x20001598
 80052dc:	20001600 	.word	0x20001600

080052e0 <global_stdio_init.part.0>:
 80052e0:	b510      	push	{r4, lr}
 80052e2:	4b0b      	ldr	r3, [pc, #44]	; (8005310 <global_stdio_init.part.0+0x30>)
 80052e4:	4c0b      	ldr	r4, [pc, #44]	; (8005314 <global_stdio_init.part.0+0x34>)
 80052e6:	4a0c      	ldr	r2, [pc, #48]	; (8005318 <global_stdio_init.part.0+0x38>)
 80052e8:	4620      	mov	r0, r4
 80052ea:	601a      	str	r2, [r3, #0]
 80052ec:	2104      	movs	r1, #4
 80052ee:	2200      	movs	r2, #0
 80052f0:	f7ff ff94 	bl	800521c <std>
 80052f4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80052f8:	2201      	movs	r2, #1
 80052fa:	2109      	movs	r1, #9
 80052fc:	f7ff ff8e 	bl	800521c <std>
 8005300:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8005304:	2202      	movs	r2, #2
 8005306:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800530a:	2112      	movs	r1, #18
 800530c:	f7ff bf86 	b.w	800521c <std>
 8005310:	20001668 	.word	0x20001668
 8005314:	20001530 	.word	0x20001530
 8005318:	08005289 	.word	0x08005289

0800531c <__sfp_lock_acquire>:
 800531c:	4801      	ldr	r0, [pc, #4]	; (8005324 <__sfp_lock_acquire+0x8>)
 800531e:	f000 b9fe 	b.w	800571e <__retarget_lock_acquire_recursive>
 8005322:	bf00      	nop
 8005324:	20001671 	.word	0x20001671

08005328 <__sfp_lock_release>:
 8005328:	4801      	ldr	r0, [pc, #4]	; (8005330 <__sfp_lock_release+0x8>)
 800532a:	f000 b9f9 	b.w	8005720 <__retarget_lock_release_recursive>
 800532e:	bf00      	nop
 8005330:	20001671 	.word	0x20001671

08005334 <__sinit>:
 8005334:	b510      	push	{r4, lr}
 8005336:	4604      	mov	r4, r0
 8005338:	f7ff fff0 	bl	800531c <__sfp_lock_acquire>
 800533c:	6a23      	ldr	r3, [r4, #32]
 800533e:	b11b      	cbz	r3, 8005348 <__sinit+0x14>
 8005340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005344:	f7ff bff0 	b.w	8005328 <__sfp_lock_release>
 8005348:	4b04      	ldr	r3, [pc, #16]	; (800535c <__sinit+0x28>)
 800534a:	6223      	str	r3, [r4, #32]
 800534c:	4b04      	ldr	r3, [pc, #16]	; (8005360 <__sinit+0x2c>)
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	2b00      	cmp	r3, #0
 8005352:	d1f5      	bne.n	8005340 <__sinit+0xc>
 8005354:	f7ff ffc4 	bl	80052e0 <global_stdio_init.part.0>
 8005358:	e7f2      	b.n	8005340 <__sinit+0xc>
 800535a:	bf00      	nop
 800535c:	080052a1 	.word	0x080052a1
 8005360:	20001668 	.word	0x20001668

08005364 <_fwalk_sglue>:
 8005364:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005368:	4607      	mov	r7, r0
 800536a:	4688      	mov	r8, r1
 800536c:	4614      	mov	r4, r2
 800536e:	2600      	movs	r6, #0
 8005370:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005374:	f1b9 0901 	subs.w	r9, r9, #1
 8005378:	d505      	bpl.n	8005386 <_fwalk_sglue+0x22>
 800537a:	6824      	ldr	r4, [r4, #0]
 800537c:	2c00      	cmp	r4, #0
 800537e:	d1f7      	bne.n	8005370 <_fwalk_sglue+0xc>
 8005380:	4630      	mov	r0, r6
 8005382:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005386:	89ab      	ldrh	r3, [r5, #12]
 8005388:	2b01      	cmp	r3, #1
 800538a:	d907      	bls.n	800539c <_fwalk_sglue+0x38>
 800538c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005390:	3301      	adds	r3, #1
 8005392:	d003      	beq.n	800539c <_fwalk_sglue+0x38>
 8005394:	4629      	mov	r1, r5
 8005396:	4638      	mov	r0, r7
 8005398:	47c0      	blx	r8
 800539a:	4306      	orrs	r6, r0
 800539c:	3568      	adds	r5, #104	; 0x68
 800539e:	e7e9      	b.n	8005374 <_fwalk_sglue+0x10>

080053a0 <iprintf>:
 80053a0:	b40f      	push	{r0, r1, r2, r3}
 80053a2:	b507      	push	{r0, r1, r2, lr}
 80053a4:	4906      	ldr	r1, [pc, #24]	; (80053c0 <iprintf+0x20>)
 80053a6:	ab04      	add	r3, sp, #16
 80053a8:	6808      	ldr	r0, [r1, #0]
 80053aa:	f853 2b04 	ldr.w	r2, [r3], #4
 80053ae:	6881      	ldr	r1, [r0, #8]
 80053b0:	9301      	str	r3, [sp, #4]
 80053b2:	f000 fae1 	bl	8005978 <_vfiprintf_r>
 80053b6:	b003      	add	sp, #12
 80053b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80053bc:	b004      	add	sp, #16
 80053be:	4770      	bx	lr
 80053c0:	20000070 	.word	0x20000070

080053c4 <_puts_r>:
 80053c4:	6a03      	ldr	r3, [r0, #32]
 80053c6:	b570      	push	{r4, r5, r6, lr}
 80053c8:	4605      	mov	r5, r0
 80053ca:	460e      	mov	r6, r1
 80053cc:	6884      	ldr	r4, [r0, #8]
 80053ce:	b90b      	cbnz	r3, 80053d4 <_puts_r+0x10>
 80053d0:	f7ff ffb0 	bl	8005334 <__sinit>
 80053d4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80053d6:	07db      	lsls	r3, r3, #31
 80053d8:	d405      	bmi.n	80053e6 <_puts_r+0x22>
 80053da:	89a3      	ldrh	r3, [r4, #12]
 80053dc:	0598      	lsls	r0, r3, #22
 80053de:	d402      	bmi.n	80053e6 <_puts_r+0x22>
 80053e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80053e2:	f000 f99c 	bl	800571e <__retarget_lock_acquire_recursive>
 80053e6:	89a3      	ldrh	r3, [r4, #12]
 80053e8:	0719      	lsls	r1, r3, #28
 80053ea:	d513      	bpl.n	8005414 <_puts_r+0x50>
 80053ec:	6923      	ldr	r3, [r4, #16]
 80053ee:	b18b      	cbz	r3, 8005414 <_puts_r+0x50>
 80053f0:	3e01      	subs	r6, #1
 80053f2:	68a3      	ldr	r3, [r4, #8]
 80053f4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80053f8:	3b01      	subs	r3, #1
 80053fa:	60a3      	str	r3, [r4, #8]
 80053fc:	b9e9      	cbnz	r1, 800543a <_puts_r+0x76>
 80053fe:	2b00      	cmp	r3, #0
 8005400:	da2e      	bge.n	8005460 <_puts_r+0x9c>
 8005402:	4622      	mov	r2, r4
 8005404:	210a      	movs	r1, #10
 8005406:	4628      	mov	r0, r5
 8005408:	f000 f87b 	bl	8005502 <__swbuf_r>
 800540c:	3001      	adds	r0, #1
 800540e:	d007      	beq.n	8005420 <_puts_r+0x5c>
 8005410:	250a      	movs	r5, #10
 8005412:	e007      	b.n	8005424 <_puts_r+0x60>
 8005414:	4621      	mov	r1, r4
 8005416:	4628      	mov	r0, r5
 8005418:	f000 f8b0 	bl	800557c <__swsetup_r>
 800541c:	2800      	cmp	r0, #0
 800541e:	d0e7      	beq.n	80053f0 <_puts_r+0x2c>
 8005420:	f04f 35ff 	mov.w	r5, #4294967295
 8005424:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005426:	07da      	lsls	r2, r3, #31
 8005428:	d405      	bmi.n	8005436 <_puts_r+0x72>
 800542a:	89a3      	ldrh	r3, [r4, #12]
 800542c:	059b      	lsls	r3, r3, #22
 800542e:	d402      	bmi.n	8005436 <_puts_r+0x72>
 8005430:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005432:	f000 f975 	bl	8005720 <__retarget_lock_release_recursive>
 8005436:	4628      	mov	r0, r5
 8005438:	bd70      	pop	{r4, r5, r6, pc}
 800543a:	2b00      	cmp	r3, #0
 800543c:	da04      	bge.n	8005448 <_puts_r+0x84>
 800543e:	69a2      	ldr	r2, [r4, #24]
 8005440:	429a      	cmp	r2, r3
 8005442:	dc06      	bgt.n	8005452 <_puts_r+0x8e>
 8005444:	290a      	cmp	r1, #10
 8005446:	d004      	beq.n	8005452 <_puts_r+0x8e>
 8005448:	6823      	ldr	r3, [r4, #0]
 800544a:	1c5a      	adds	r2, r3, #1
 800544c:	6022      	str	r2, [r4, #0]
 800544e:	7019      	strb	r1, [r3, #0]
 8005450:	e7cf      	b.n	80053f2 <_puts_r+0x2e>
 8005452:	4622      	mov	r2, r4
 8005454:	4628      	mov	r0, r5
 8005456:	f000 f854 	bl	8005502 <__swbuf_r>
 800545a:	3001      	adds	r0, #1
 800545c:	d1c9      	bne.n	80053f2 <_puts_r+0x2e>
 800545e:	e7df      	b.n	8005420 <_puts_r+0x5c>
 8005460:	250a      	movs	r5, #10
 8005462:	6823      	ldr	r3, [r4, #0]
 8005464:	1c5a      	adds	r2, r3, #1
 8005466:	6022      	str	r2, [r4, #0]
 8005468:	701d      	strb	r5, [r3, #0]
 800546a:	e7db      	b.n	8005424 <_puts_r+0x60>

0800546c <puts>:
 800546c:	4b02      	ldr	r3, [pc, #8]	; (8005478 <puts+0xc>)
 800546e:	4601      	mov	r1, r0
 8005470:	6818      	ldr	r0, [r3, #0]
 8005472:	f7ff bfa7 	b.w	80053c4 <_puts_r>
 8005476:	bf00      	nop
 8005478:	20000070 	.word	0x20000070

0800547c <__sread>:
 800547c:	b510      	push	{r4, lr}
 800547e:	460c      	mov	r4, r1
 8005480:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005484:	f000 f8fc 	bl	8005680 <_read_r>
 8005488:	2800      	cmp	r0, #0
 800548a:	bfab      	itete	ge
 800548c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800548e:	89a3      	ldrhlt	r3, [r4, #12]
 8005490:	181b      	addge	r3, r3, r0
 8005492:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005496:	bfac      	ite	ge
 8005498:	6563      	strge	r3, [r4, #84]	; 0x54
 800549a:	81a3      	strhlt	r3, [r4, #12]
 800549c:	bd10      	pop	{r4, pc}

0800549e <__swrite>:
 800549e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054a2:	461f      	mov	r7, r3
 80054a4:	898b      	ldrh	r3, [r1, #12]
 80054a6:	4605      	mov	r5, r0
 80054a8:	05db      	lsls	r3, r3, #23
 80054aa:	460c      	mov	r4, r1
 80054ac:	4616      	mov	r6, r2
 80054ae:	d505      	bpl.n	80054bc <__swrite+0x1e>
 80054b0:	2302      	movs	r3, #2
 80054b2:	2200      	movs	r2, #0
 80054b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054b8:	f000 f8d0 	bl	800565c <_lseek_r>
 80054bc:	89a3      	ldrh	r3, [r4, #12]
 80054be:	4632      	mov	r2, r6
 80054c0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80054c4:	81a3      	strh	r3, [r4, #12]
 80054c6:	4628      	mov	r0, r5
 80054c8:	463b      	mov	r3, r7
 80054ca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80054ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80054d2:	f000 b8e7 	b.w	80056a4 <_write_r>

080054d6 <__sseek>:
 80054d6:	b510      	push	{r4, lr}
 80054d8:	460c      	mov	r4, r1
 80054da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054de:	f000 f8bd 	bl	800565c <_lseek_r>
 80054e2:	1c43      	adds	r3, r0, #1
 80054e4:	89a3      	ldrh	r3, [r4, #12]
 80054e6:	bf15      	itete	ne
 80054e8:	6560      	strne	r0, [r4, #84]	; 0x54
 80054ea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80054ee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80054f2:	81a3      	strheq	r3, [r4, #12]
 80054f4:	bf18      	it	ne
 80054f6:	81a3      	strhne	r3, [r4, #12]
 80054f8:	bd10      	pop	{r4, pc}

080054fa <__sclose>:
 80054fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054fe:	f000 b89d 	b.w	800563c <_close_r>

08005502 <__swbuf_r>:
 8005502:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005504:	460e      	mov	r6, r1
 8005506:	4614      	mov	r4, r2
 8005508:	4605      	mov	r5, r0
 800550a:	b118      	cbz	r0, 8005514 <__swbuf_r+0x12>
 800550c:	6a03      	ldr	r3, [r0, #32]
 800550e:	b90b      	cbnz	r3, 8005514 <__swbuf_r+0x12>
 8005510:	f7ff ff10 	bl	8005334 <__sinit>
 8005514:	69a3      	ldr	r3, [r4, #24]
 8005516:	60a3      	str	r3, [r4, #8]
 8005518:	89a3      	ldrh	r3, [r4, #12]
 800551a:	071a      	lsls	r2, r3, #28
 800551c:	d525      	bpl.n	800556a <__swbuf_r+0x68>
 800551e:	6923      	ldr	r3, [r4, #16]
 8005520:	b31b      	cbz	r3, 800556a <__swbuf_r+0x68>
 8005522:	6823      	ldr	r3, [r4, #0]
 8005524:	6922      	ldr	r2, [r4, #16]
 8005526:	b2f6      	uxtb	r6, r6
 8005528:	1a98      	subs	r0, r3, r2
 800552a:	6963      	ldr	r3, [r4, #20]
 800552c:	4637      	mov	r7, r6
 800552e:	4283      	cmp	r3, r0
 8005530:	dc04      	bgt.n	800553c <__swbuf_r+0x3a>
 8005532:	4621      	mov	r1, r4
 8005534:	4628      	mov	r0, r5
 8005536:	f000 fd4f 	bl	8005fd8 <_fflush_r>
 800553a:	b9e0      	cbnz	r0, 8005576 <__swbuf_r+0x74>
 800553c:	68a3      	ldr	r3, [r4, #8]
 800553e:	3b01      	subs	r3, #1
 8005540:	60a3      	str	r3, [r4, #8]
 8005542:	6823      	ldr	r3, [r4, #0]
 8005544:	1c5a      	adds	r2, r3, #1
 8005546:	6022      	str	r2, [r4, #0]
 8005548:	701e      	strb	r6, [r3, #0]
 800554a:	6962      	ldr	r2, [r4, #20]
 800554c:	1c43      	adds	r3, r0, #1
 800554e:	429a      	cmp	r2, r3
 8005550:	d004      	beq.n	800555c <__swbuf_r+0x5a>
 8005552:	89a3      	ldrh	r3, [r4, #12]
 8005554:	07db      	lsls	r3, r3, #31
 8005556:	d506      	bpl.n	8005566 <__swbuf_r+0x64>
 8005558:	2e0a      	cmp	r6, #10
 800555a:	d104      	bne.n	8005566 <__swbuf_r+0x64>
 800555c:	4621      	mov	r1, r4
 800555e:	4628      	mov	r0, r5
 8005560:	f000 fd3a 	bl	8005fd8 <_fflush_r>
 8005564:	b938      	cbnz	r0, 8005576 <__swbuf_r+0x74>
 8005566:	4638      	mov	r0, r7
 8005568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800556a:	4621      	mov	r1, r4
 800556c:	4628      	mov	r0, r5
 800556e:	f000 f805 	bl	800557c <__swsetup_r>
 8005572:	2800      	cmp	r0, #0
 8005574:	d0d5      	beq.n	8005522 <__swbuf_r+0x20>
 8005576:	f04f 37ff 	mov.w	r7, #4294967295
 800557a:	e7f4      	b.n	8005566 <__swbuf_r+0x64>

0800557c <__swsetup_r>:
 800557c:	b538      	push	{r3, r4, r5, lr}
 800557e:	4b2a      	ldr	r3, [pc, #168]	; (8005628 <__swsetup_r+0xac>)
 8005580:	4605      	mov	r5, r0
 8005582:	6818      	ldr	r0, [r3, #0]
 8005584:	460c      	mov	r4, r1
 8005586:	b118      	cbz	r0, 8005590 <__swsetup_r+0x14>
 8005588:	6a03      	ldr	r3, [r0, #32]
 800558a:	b90b      	cbnz	r3, 8005590 <__swsetup_r+0x14>
 800558c:	f7ff fed2 	bl	8005334 <__sinit>
 8005590:	89a3      	ldrh	r3, [r4, #12]
 8005592:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005596:	0718      	lsls	r0, r3, #28
 8005598:	d422      	bmi.n	80055e0 <__swsetup_r+0x64>
 800559a:	06d9      	lsls	r1, r3, #27
 800559c:	d407      	bmi.n	80055ae <__swsetup_r+0x32>
 800559e:	2309      	movs	r3, #9
 80055a0:	602b      	str	r3, [r5, #0]
 80055a2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80055a6:	f04f 30ff 	mov.w	r0, #4294967295
 80055aa:	81a3      	strh	r3, [r4, #12]
 80055ac:	e034      	b.n	8005618 <__swsetup_r+0x9c>
 80055ae:	0758      	lsls	r0, r3, #29
 80055b0:	d512      	bpl.n	80055d8 <__swsetup_r+0x5c>
 80055b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80055b4:	b141      	cbz	r1, 80055c8 <__swsetup_r+0x4c>
 80055b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80055ba:	4299      	cmp	r1, r3
 80055bc:	d002      	beq.n	80055c4 <__swsetup_r+0x48>
 80055be:	4628      	mov	r0, r5
 80055c0:	f000 f8be 	bl	8005740 <_free_r>
 80055c4:	2300      	movs	r3, #0
 80055c6:	6363      	str	r3, [r4, #52]	; 0x34
 80055c8:	89a3      	ldrh	r3, [r4, #12]
 80055ca:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80055ce:	81a3      	strh	r3, [r4, #12]
 80055d0:	2300      	movs	r3, #0
 80055d2:	6063      	str	r3, [r4, #4]
 80055d4:	6923      	ldr	r3, [r4, #16]
 80055d6:	6023      	str	r3, [r4, #0]
 80055d8:	89a3      	ldrh	r3, [r4, #12]
 80055da:	f043 0308 	orr.w	r3, r3, #8
 80055de:	81a3      	strh	r3, [r4, #12]
 80055e0:	6923      	ldr	r3, [r4, #16]
 80055e2:	b94b      	cbnz	r3, 80055f8 <__swsetup_r+0x7c>
 80055e4:	89a3      	ldrh	r3, [r4, #12]
 80055e6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80055ea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80055ee:	d003      	beq.n	80055f8 <__swsetup_r+0x7c>
 80055f0:	4621      	mov	r1, r4
 80055f2:	4628      	mov	r0, r5
 80055f4:	f000 fd3d 	bl	8006072 <__smakebuf_r>
 80055f8:	89a0      	ldrh	r0, [r4, #12]
 80055fa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80055fe:	f010 0301 	ands.w	r3, r0, #1
 8005602:	d00a      	beq.n	800561a <__swsetup_r+0x9e>
 8005604:	2300      	movs	r3, #0
 8005606:	60a3      	str	r3, [r4, #8]
 8005608:	6963      	ldr	r3, [r4, #20]
 800560a:	425b      	negs	r3, r3
 800560c:	61a3      	str	r3, [r4, #24]
 800560e:	6923      	ldr	r3, [r4, #16]
 8005610:	b943      	cbnz	r3, 8005624 <__swsetup_r+0xa8>
 8005612:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8005616:	d1c4      	bne.n	80055a2 <__swsetup_r+0x26>
 8005618:	bd38      	pop	{r3, r4, r5, pc}
 800561a:	0781      	lsls	r1, r0, #30
 800561c:	bf58      	it	pl
 800561e:	6963      	ldrpl	r3, [r4, #20]
 8005620:	60a3      	str	r3, [r4, #8]
 8005622:	e7f4      	b.n	800560e <__swsetup_r+0x92>
 8005624:	2000      	movs	r0, #0
 8005626:	e7f7      	b.n	8005618 <__swsetup_r+0x9c>
 8005628:	20000070 	.word	0x20000070

0800562c <memset>:
 800562c:	4603      	mov	r3, r0
 800562e:	4402      	add	r2, r0
 8005630:	4293      	cmp	r3, r2
 8005632:	d100      	bne.n	8005636 <memset+0xa>
 8005634:	4770      	bx	lr
 8005636:	f803 1b01 	strb.w	r1, [r3], #1
 800563a:	e7f9      	b.n	8005630 <memset+0x4>

0800563c <_close_r>:
 800563c:	b538      	push	{r3, r4, r5, lr}
 800563e:	2300      	movs	r3, #0
 8005640:	4d05      	ldr	r5, [pc, #20]	; (8005658 <_close_r+0x1c>)
 8005642:	4604      	mov	r4, r0
 8005644:	4608      	mov	r0, r1
 8005646:	602b      	str	r3, [r5, #0]
 8005648:	f7fb fa07 	bl	8000a5a <_close>
 800564c:	1c43      	adds	r3, r0, #1
 800564e:	d102      	bne.n	8005656 <_close_r+0x1a>
 8005650:	682b      	ldr	r3, [r5, #0]
 8005652:	b103      	cbz	r3, 8005656 <_close_r+0x1a>
 8005654:	6023      	str	r3, [r4, #0]
 8005656:	bd38      	pop	{r3, r4, r5, pc}
 8005658:	2000166c 	.word	0x2000166c

0800565c <_lseek_r>:
 800565c:	b538      	push	{r3, r4, r5, lr}
 800565e:	4604      	mov	r4, r0
 8005660:	4608      	mov	r0, r1
 8005662:	4611      	mov	r1, r2
 8005664:	2200      	movs	r2, #0
 8005666:	4d05      	ldr	r5, [pc, #20]	; (800567c <_lseek_r+0x20>)
 8005668:	602a      	str	r2, [r5, #0]
 800566a:	461a      	mov	r2, r3
 800566c:	f7fb fa19 	bl	8000aa2 <_lseek>
 8005670:	1c43      	adds	r3, r0, #1
 8005672:	d102      	bne.n	800567a <_lseek_r+0x1e>
 8005674:	682b      	ldr	r3, [r5, #0]
 8005676:	b103      	cbz	r3, 800567a <_lseek_r+0x1e>
 8005678:	6023      	str	r3, [r4, #0]
 800567a:	bd38      	pop	{r3, r4, r5, pc}
 800567c:	2000166c 	.word	0x2000166c

08005680 <_read_r>:
 8005680:	b538      	push	{r3, r4, r5, lr}
 8005682:	4604      	mov	r4, r0
 8005684:	4608      	mov	r0, r1
 8005686:	4611      	mov	r1, r2
 8005688:	2200      	movs	r2, #0
 800568a:	4d05      	ldr	r5, [pc, #20]	; (80056a0 <_read_r+0x20>)
 800568c:	602a      	str	r2, [r5, #0]
 800568e:	461a      	mov	r2, r3
 8005690:	f7fb f9c6 	bl	8000a20 <_read>
 8005694:	1c43      	adds	r3, r0, #1
 8005696:	d102      	bne.n	800569e <_read_r+0x1e>
 8005698:	682b      	ldr	r3, [r5, #0]
 800569a:	b103      	cbz	r3, 800569e <_read_r+0x1e>
 800569c:	6023      	str	r3, [r4, #0]
 800569e:	bd38      	pop	{r3, r4, r5, pc}
 80056a0:	2000166c 	.word	0x2000166c

080056a4 <_write_r>:
 80056a4:	b538      	push	{r3, r4, r5, lr}
 80056a6:	4604      	mov	r4, r0
 80056a8:	4608      	mov	r0, r1
 80056aa:	4611      	mov	r1, r2
 80056ac:	2200      	movs	r2, #0
 80056ae:	4d05      	ldr	r5, [pc, #20]	; (80056c4 <_write_r+0x20>)
 80056b0:	602a      	str	r2, [r5, #0]
 80056b2:	461a      	mov	r2, r3
 80056b4:	f7fa fd74 	bl	80001a0 <_write>
 80056b8:	1c43      	adds	r3, r0, #1
 80056ba:	d102      	bne.n	80056c2 <_write_r+0x1e>
 80056bc:	682b      	ldr	r3, [r5, #0]
 80056be:	b103      	cbz	r3, 80056c2 <_write_r+0x1e>
 80056c0:	6023      	str	r3, [r4, #0]
 80056c2:	bd38      	pop	{r3, r4, r5, pc}
 80056c4:	2000166c 	.word	0x2000166c

080056c8 <__errno>:
 80056c8:	4b01      	ldr	r3, [pc, #4]	; (80056d0 <__errno+0x8>)
 80056ca:	6818      	ldr	r0, [r3, #0]
 80056cc:	4770      	bx	lr
 80056ce:	bf00      	nop
 80056d0:	20000070 	.word	0x20000070

080056d4 <__libc_init_array>:
 80056d4:	b570      	push	{r4, r5, r6, lr}
 80056d6:	2600      	movs	r6, #0
 80056d8:	4d0c      	ldr	r5, [pc, #48]	; (800570c <__libc_init_array+0x38>)
 80056da:	4c0d      	ldr	r4, [pc, #52]	; (8005710 <__libc_init_array+0x3c>)
 80056dc:	1b64      	subs	r4, r4, r5
 80056de:	10a4      	asrs	r4, r4, #2
 80056e0:	42a6      	cmp	r6, r4
 80056e2:	d109      	bne.n	80056f8 <__libc_init_array+0x24>
 80056e4:	f000 fd42 	bl	800616c <_init>
 80056e8:	2600      	movs	r6, #0
 80056ea:	4d0a      	ldr	r5, [pc, #40]	; (8005714 <__libc_init_array+0x40>)
 80056ec:	4c0a      	ldr	r4, [pc, #40]	; (8005718 <__libc_init_array+0x44>)
 80056ee:	1b64      	subs	r4, r4, r5
 80056f0:	10a4      	asrs	r4, r4, #2
 80056f2:	42a6      	cmp	r6, r4
 80056f4:	d105      	bne.n	8005702 <__libc_init_array+0x2e>
 80056f6:	bd70      	pop	{r4, r5, r6, pc}
 80056f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80056fc:	4798      	blx	r3
 80056fe:	3601      	adds	r6, #1
 8005700:	e7ee      	b.n	80056e0 <__libc_init_array+0xc>
 8005702:	f855 3b04 	ldr.w	r3, [r5], #4
 8005706:	4798      	blx	r3
 8005708:	3601      	adds	r6, #1
 800570a:	e7f2      	b.n	80056f2 <__libc_init_array+0x1e>
 800570c:	08007040 	.word	0x08007040
 8005710:	08007040 	.word	0x08007040
 8005714:	08007040 	.word	0x08007040
 8005718:	08007044 	.word	0x08007044

0800571c <__retarget_lock_init_recursive>:
 800571c:	4770      	bx	lr

0800571e <__retarget_lock_acquire_recursive>:
 800571e:	4770      	bx	lr

08005720 <__retarget_lock_release_recursive>:
 8005720:	4770      	bx	lr

08005722 <memcpy>:
 8005722:	440a      	add	r2, r1
 8005724:	4291      	cmp	r1, r2
 8005726:	f100 33ff 	add.w	r3, r0, #4294967295
 800572a:	d100      	bne.n	800572e <memcpy+0xc>
 800572c:	4770      	bx	lr
 800572e:	b510      	push	{r4, lr}
 8005730:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005734:	4291      	cmp	r1, r2
 8005736:	f803 4f01 	strb.w	r4, [r3, #1]!
 800573a:	d1f9      	bne.n	8005730 <memcpy+0xe>
 800573c:	bd10      	pop	{r4, pc}
	...

08005740 <_free_r>:
 8005740:	b538      	push	{r3, r4, r5, lr}
 8005742:	4605      	mov	r5, r0
 8005744:	2900      	cmp	r1, #0
 8005746:	d040      	beq.n	80057ca <_free_r+0x8a>
 8005748:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800574c:	1f0c      	subs	r4, r1, #4
 800574e:	2b00      	cmp	r3, #0
 8005750:	bfb8      	it	lt
 8005752:	18e4      	addlt	r4, r4, r3
 8005754:	f000 f8dc 	bl	8005910 <__malloc_lock>
 8005758:	4a1c      	ldr	r2, [pc, #112]	; (80057cc <_free_r+0x8c>)
 800575a:	6813      	ldr	r3, [r2, #0]
 800575c:	b933      	cbnz	r3, 800576c <_free_r+0x2c>
 800575e:	6063      	str	r3, [r4, #4]
 8005760:	6014      	str	r4, [r2, #0]
 8005762:	4628      	mov	r0, r5
 8005764:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005768:	f000 b8d8 	b.w	800591c <__malloc_unlock>
 800576c:	42a3      	cmp	r3, r4
 800576e:	d908      	bls.n	8005782 <_free_r+0x42>
 8005770:	6820      	ldr	r0, [r4, #0]
 8005772:	1821      	adds	r1, r4, r0
 8005774:	428b      	cmp	r3, r1
 8005776:	bf01      	itttt	eq
 8005778:	6819      	ldreq	r1, [r3, #0]
 800577a:	685b      	ldreq	r3, [r3, #4]
 800577c:	1809      	addeq	r1, r1, r0
 800577e:	6021      	streq	r1, [r4, #0]
 8005780:	e7ed      	b.n	800575e <_free_r+0x1e>
 8005782:	461a      	mov	r2, r3
 8005784:	685b      	ldr	r3, [r3, #4]
 8005786:	b10b      	cbz	r3, 800578c <_free_r+0x4c>
 8005788:	42a3      	cmp	r3, r4
 800578a:	d9fa      	bls.n	8005782 <_free_r+0x42>
 800578c:	6811      	ldr	r1, [r2, #0]
 800578e:	1850      	adds	r0, r2, r1
 8005790:	42a0      	cmp	r0, r4
 8005792:	d10b      	bne.n	80057ac <_free_r+0x6c>
 8005794:	6820      	ldr	r0, [r4, #0]
 8005796:	4401      	add	r1, r0
 8005798:	1850      	adds	r0, r2, r1
 800579a:	4283      	cmp	r3, r0
 800579c:	6011      	str	r1, [r2, #0]
 800579e:	d1e0      	bne.n	8005762 <_free_r+0x22>
 80057a0:	6818      	ldr	r0, [r3, #0]
 80057a2:	685b      	ldr	r3, [r3, #4]
 80057a4:	4408      	add	r0, r1
 80057a6:	6010      	str	r0, [r2, #0]
 80057a8:	6053      	str	r3, [r2, #4]
 80057aa:	e7da      	b.n	8005762 <_free_r+0x22>
 80057ac:	d902      	bls.n	80057b4 <_free_r+0x74>
 80057ae:	230c      	movs	r3, #12
 80057b0:	602b      	str	r3, [r5, #0]
 80057b2:	e7d6      	b.n	8005762 <_free_r+0x22>
 80057b4:	6820      	ldr	r0, [r4, #0]
 80057b6:	1821      	adds	r1, r4, r0
 80057b8:	428b      	cmp	r3, r1
 80057ba:	bf01      	itttt	eq
 80057bc:	6819      	ldreq	r1, [r3, #0]
 80057be:	685b      	ldreq	r3, [r3, #4]
 80057c0:	1809      	addeq	r1, r1, r0
 80057c2:	6021      	streq	r1, [r4, #0]
 80057c4:	6063      	str	r3, [r4, #4]
 80057c6:	6054      	str	r4, [r2, #4]
 80057c8:	e7cb      	b.n	8005762 <_free_r+0x22>
 80057ca:	bd38      	pop	{r3, r4, r5, pc}
 80057cc:	20001674 	.word	0x20001674

080057d0 <sbrk_aligned>:
 80057d0:	b570      	push	{r4, r5, r6, lr}
 80057d2:	4e0e      	ldr	r6, [pc, #56]	; (800580c <sbrk_aligned+0x3c>)
 80057d4:	460c      	mov	r4, r1
 80057d6:	6831      	ldr	r1, [r6, #0]
 80057d8:	4605      	mov	r5, r0
 80057da:	b911      	cbnz	r1, 80057e2 <sbrk_aligned+0x12>
 80057dc:	f000 fca8 	bl	8006130 <_sbrk_r>
 80057e0:	6030      	str	r0, [r6, #0]
 80057e2:	4621      	mov	r1, r4
 80057e4:	4628      	mov	r0, r5
 80057e6:	f000 fca3 	bl	8006130 <_sbrk_r>
 80057ea:	1c43      	adds	r3, r0, #1
 80057ec:	d00a      	beq.n	8005804 <sbrk_aligned+0x34>
 80057ee:	1cc4      	adds	r4, r0, #3
 80057f0:	f024 0403 	bic.w	r4, r4, #3
 80057f4:	42a0      	cmp	r0, r4
 80057f6:	d007      	beq.n	8005808 <sbrk_aligned+0x38>
 80057f8:	1a21      	subs	r1, r4, r0
 80057fa:	4628      	mov	r0, r5
 80057fc:	f000 fc98 	bl	8006130 <_sbrk_r>
 8005800:	3001      	adds	r0, #1
 8005802:	d101      	bne.n	8005808 <sbrk_aligned+0x38>
 8005804:	f04f 34ff 	mov.w	r4, #4294967295
 8005808:	4620      	mov	r0, r4
 800580a:	bd70      	pop	{r4, r5, r6, pc}
 800580c:	20001678 	.word	0x20001678

08005810 <_malloc_r>:
 8005810:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005814:	1ccd      	adds	r5, r1, #3
 8005816:	f025 0503 	bic.w	r5, r5, #3
 800581a:	3508      	adds	r5, #8
 800581c:	2d0c      	cmp	r5, #12
 800581e:	bf38      	it	cc
 8005820:	250c      	movcc	r5, #12
 8005822:	2d00      	cmp	r5, #0
 8005824:	4607      	mov	r7, r0
 8005826:	db01      	blt.n	800582c <_malloc_r+0x1c>
 8005828:	42a9      	cmp	r1, r5
 800582a:	d905      	bls.n	8005838 <_malloc_r+0x28>
 800582c:	230c      	movs	r3, #12
 800582e:	2600      	movs	r6, #0
 8005830:	603b      	str	r3, [r7, #0]
 8005832:	4630      	mov	r0, r6
 8005834:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005838:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800590c <_malloc_r+0xfc>
 800583c:	f000 f868 	bl	8005910 <__malloc_lock>
 8005840:	f8d8 3000 	ldr.w	r3, [r8]
 8005844:	461c      	mov	r4, r3
 8005846:	bb5c      	cbnz	r4, 80058a0 <_malloc_r+0x90>
 8005848:	4629      	mov	r1, r5
 800584a:	4638      	mov	r0, r7
 800584c:	f7ff ffc0 	bl	80057d0 <sbrk_aligned>
 8005850:	1c43      	adds	r3, r0, #1
 8005852:	4604      	mov	r4, r0
 8005854:	d155      	bne.n	8005902 <_malloc_r+0xf2>
 8005856:	f8d8 4000 	ldr.w	r4, [r8]
 800585a:	4626      	mov	r6, r4
 800585c:	2e00      	cmp	r6, #0
 800585e:	d145      	bne.n	80058ec <_malloc_r+0xdc>
 8005860:	2c00      	cmp	r4, #0
 8005862:	d048      	beq.n	80058f6 <_malloc_r+0xe6>
 8005864:	6823      	ldr	r3, [r4, #0]
 8005866:	4631      	mov	r1, r6
 8005868:	4638      	mov	r0, r7
 800586a:	eb04 0903 	add.w	r9, r4, r3
 800586e:	f000 fc5f 	bl	8006130 <_sbrk_r>
 8005872:	4581      	cmp	r9, r0
 8005874:	d13f      	bne.n	80058f6 <_malloc_r+0xe6>
 8005876:	6821      	ldr	r1, [r4, #0]
 8005878:	4638      	mov	r0, r7
 800587a:	1a6d      	subs	r5, r5, r1
 800587c:	4629      	mov	r1, r5
 800587e:	f7ff ffa7 	bl	80057d0 <sbrk_aligned>
 8005882:	3001      	adds	r0, #1
 8005884:	d037      	beq.n	80058f6 <_malloc_r+0xe6>
 8005886:	6823      	ldr	r3, [r4, #0]
 8005888:	442b      	add	r3, r5
 800588a:	6023      	str	r3, [r4, #0]
 800588c:	f8d8 3000 	ldr.w	r3, [r8]
 8005890:	2b00      	cmp	r3, #0
 8005892:	d038      	beq.n	8005906 <_malloc_r+0xf6>
 8005894:	685a      	ldr	r2, [r3, #4]
 8005896:	42a2      	cmp	r2, r4
 8005898:	d12b      	bne.n	80058f2 <_malloc_r+0xe2>
 800589a:	2200      	movs	r2, #0
 800589c:	605a      	str	r2, [r3, #4]
 800589e:	e00f      	b.n	80058c0 <_malloc_r+0xb0>
 80058a0:	6822      	ldr	r2, [r4, #0]
 80058a2:	1b52      	subs	r2, r2, r5
 80058a4:	d41f      	bmi.n	80058e6 <_malloc_r+0xd6>
 80058a6:	2a0b      	cmp	r2, #11
 80058a8:	d917      	bls.n	80058da <_malloc_r+0xca>
 80058aa:	1961      	adds	r1, r4, r5
 80058ac:	42a3      	cmp	r3, r4
 80058ae:	6025      	str	r5, [r4, #0]
 80058b0:	bf18      	it	ne
 80058b2:	6059      	strne	r1, [r3, #4]
 80058b4:	6863      	ldr	r3, [r4, #4]
 80058b6:	bf08      	it	eq
 80058b8:	f8c8 1000 	streq.w	r1, [r8]
 80058bc:	5162      	str	r2, [r4, r5]
 80058be:	604b      	str	r3, [r1, #4]
 80058c0:	4638      	mov	r0, r7
 80058c2:	f104 060b 	add.w	r6, r4, #11
 80058c6:	f000 f829 	bl	800591c <__malloc_unlock>
 80058ca:	f026 0607 	bic.w	r6, r6, #7
 80058ce:	1d23      	adds	r3, r4, #4
 80058d0:	1af2      	subs	r2, r6, r3
 80058d2:	d0ae      	beq.n	8005832 <_malloc_r+0x22>
 80058d4:	1b9b      	subs	r3, r3, r6
 80058d6:	50a3      	str	r3, [r4, r2]
 80058d8:	e7ab      	b.n	8005832 <_malloc_r+0x22>
 80058da:	42a3      	cmp	r3, r4
 80058dc:	6862      	ldr	r2, [r4, #4]
 80058de:	d1dd      	bne.n	800589c <_malloc_r+0x8c>
 80058e0:	f8c8 2000 	str.w	r2, [r8]
 80058e4:	e7ec      	b.n	80058c0 <_malloc_r+0xb0>
 80058e6:	4623      	mov	r3, r4
 80058e8:	6864      	ldr	r4, [r4, #4]
 80058ea:	e7ac      	b.n	8005846 <_malloc_r+0x36>
 80058ec:	4634      	mov	r4, r6
 80058ee:	6876      	ldr	r6, [r6, #4]
 80058f0:	e7b4      	b.n	800585c <_malloc_r+0x4c>
 80058f2:	4613      	mov	r3, r2
 80058f4:	e7cc      	b.n	8005890 <_malloc_r+0x80>
 80058f6:	230c      	movs	r3, #12
 80058f8:	4638      	mov	r0, r7
 80058fa:	603b      	str	r3, [r7, #0]
 80058fc:	f000 f80e 	bl	800591c <__malloc_unlock>
 8005900:	e797      	b.n	8005832 <_malloc_r+0x22>
 8005902:	6025      	str	r5, [r4, #0]
 8005904:	e7dc      	b.n	80058c0 <_malloc_r+0xb0>
 8005906:	605b      	str	r3, [r3, #4]
 8005908:	deff      	udf	#255	; 0xff
 800590a:	bf00      	nop
 800590c:	20001674 	.word	0x20001674

08005910 <__malloc_lock>:
 8005910:	4801      	ldr	r0, [pc, #4]	; (8005918 <__malloc_lock+0x8>)
 8005912:	f7ff bf04 	b.w	800571e <__retarget_lock_acquire_recursive>
 8005916:	bf00      	nop
 8005918:	20001670 	.word	0x20001670

0800591c <__malloc_unlock>:
 800591c:	4801      	ldr	r0, [pc, #4]	; (8005924 <__malloc_unlock+0x8>)
 800591e:	f7ff beff 	b.w	8005720 <__retarget_lock_release_recursive>
 8005922:	bf00      	nop
 8005924:	20001670 	.word	0x20001670

08005928 <__sfputc_r>:
 8005928:	6893      	ldr	r3, [r2, #8]
 800592a:	b410      	push	{r4}
 800592c:	3b01      	subs	r3, #1
 800592e:	2b00      	cmp	r3, #0
 8005930:	6093      	str	r3, [r2, #8]
 8005932:	da07      	bge.n	8005944 <__sfputc_r+0x1c>
 8005934:	6994      	ldr	r4, [r2, #24]
 8005936:	42a3      	cmp	r3, r4
 8005938:	db01      	blt.n	800593e <__sfputc_r+0x16>
 800593a:	290a      	cmp	r1, #10
 800593c:	d102      	bne.n	8005944 <__sfputc_r+0x1c>
 800593e:	bc10      	pop	{r4}
 8005940:	f7ff bddf 	b.w	8005502 <__swbuf_r>
 8005944:	6813      	ldr	r3, [r2, #0]
 8005946:	1c58      	adds	r0, r3, #1
 8005948:	6010      	str	r0, [r2, #0]
 800594a:	7019      	strb	r1, [r3, #0]
 800594c:	4608      	mov	r0, r1
 800594e:	bc10      	pop	{r4}
 8005950:	4770      	bx	lr

08005952 <__sfputs_r>:
 8005952:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005954:	4606      	mov	r6, r0
 8005956:	460f      	mov	r7, r1
 8005958:	4614      	mov	r4, r2
 800595a:	18d5      	adds	r5, r2, r3
 800595c:	42ac      	cmp	r4, r5
 800595e:	d101      	bne.n	8005964 <__sfputs_r+0x12>
 8005960:	2000      	movs	r0, #0
 8005962:	e007      	b.n	8005974 <__sfputs_r+0x22>
 8005964:	463a      	mov	r2, r7
 8005966:	4630      	mov	r0, r6
 8005968:	f814 1b01 	ldrb.w	r1, [r4], #1
 800596c:	f7ff ffdc 	bl	8005928 <__sfputc_r>
 8005970:	1c43      	adds	r3, r0, #1
 8005972:	d1f3      	bne.n	800595c <__sfputs_r+0xa>
 8005974:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005978 <_vfiprintf_r>:
 8005978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800597c:	460d      	mov	r5, r1
 800597e:	4614      	mov	r4, r2
 8005980:	4698      	mov	r8, r3
 8005982:	4606      	mov	r6, r0
 8005984:	b09d      	sub	sp, #116	; 0x74
 8005986:	b118      	cbz	r0, 8005990 <_vfiprintf_r+0x18>
 8005988:	6a03      	ldr	r3, [r0, #32]
 800598a:	b90b      	cbnz	r3, 8005990 <_vfiprintf_r+0x18>
 800598c:	f7ff fcd2 	bl	8005334 <__sinit>
 8005990:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005992:	07d9      	lsls	r1, r3, #31
 8005994:	d405      	bmi.n	80059a2 <_vfiprintf_r+0x2a>
 8005996:	89ab      	ldrh	r3, [r5, #12]
 8005998:	059a      	lsls	r2, r3, #22
 800599a:	d402      	bmi.n	80059a2 <_vfiprintf_r+0x2a>
 800599c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800599e:	f7ff febe 	bl	800571e <__retarget_lock_acquire_recursive>
 80059a2:	89ab      	ldrh	r3, [r5, #12]
 80059a4:	071b      	lsls	r3, r3, #28
 80059a6:	d501      	bpl.n	80059ac <_vfiprintf_r+0x34>
 80059a8:	692b      	ldr	r3, [r5, #16]
 80059aa:	b99b      	cbnz	r3, 80059d4 <_vfiprintf_r+0x5c>
 80059ac:	4629      	mov	r1, r5
 80059ae:	4630      	mov	r0, r6
 80059b0:	f7ff fde4 	bl	800557c <__swsetup_r>
 80059b4:	b170      	cbz	r0, 80059d4 <_vfiprintf_r+0x5c>
 80059b6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80059b8:	07dc      	lsls	r4, r3, #31
 80059ba:	d504      	bpl.n	80059c6 <_vfiprintf_r+0x4e>
 80059bc:	f04f 30ff 	mov.w	r0, #4294967295
 80059c0:	b01d      	add	sp, #116	; 0x74
 80059c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059c6:	89ab      	ldrh	r3, [r5, #12]
 80059c8:	0598      	lsls	r0, r3, #22
 80059ca:	d4f7      	bmi.n	80059bc <_vfiprintf_r+0x44>
 80059cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80059ce:	f7ff fea7 	bl	8005720 <__retarget_lock_release_recursive>
 80059d2:	e7f3      	b.n	80059bc <_vfiprintf_r+0x44>
 80059d4:	2300      	movs	r3, #0
 80059d6:	9309      	str	r3, [sp, #36]	; 0x24
 80059d8:	2320      	movs	r3, #32
 80059da:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80059de:	2330      	movs	r3, #48	; 0x30
 80059e0:	f04f 0901 	mov.w	r9, #1
 80059e4:	f8cd 800c 	str.w	r8, [sp, #12]
 80059e8:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8005b98 <_vfiprintf_r+0x220>
 80059ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80059f0:	4623      	mov	r3, r4
 80059f2:	469a      	mov	sl, r3
 80059f4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80059f8:	b10a      	cbz	r2, 80059fe <_vfiprintf_r+0x86>
 80059fa:	2a25      	cmp	r2, #37	; 0x25
 80059fc:	d1f9      	bne.n	80059f2 <_vfiprintf_r+0x7a>
 80059fe:	ebba 0b04 	subs.w	fp, sl, r4
 8005a02:	d00b      	beq.n	8005a1c <_vfiprintf_r+0xa4>
 8005a04:	465b      	mov	r3, fp
 8005a06:	4622      	mov	r2, r4
 8005a08:	4629      	mov	r1, r5
 8005a0a:	4630      	mov	r0, r6
 8005a0c:	f7ff ffa1 	bl	8005952 <__sfputs_r>
 8005a10:	3001      	adds	r0, #1
 8005a12:	f000 80a9 	beq.w	8005b68 <_vfiprintf_r+0x1f0>
 8005a16:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005a18:	445a      	add	r2, fp
 8005a1a:	9209      	str	r2, [sp, #36]	; 0x24
 8005a1c:	f89a 3000 	ldrb.w	r3, [sl]
 8005a20:	2b00      	cmp	r3, #0
 8005a22:	f000 80a1 	beq.w	8005b68 <_vfiprintf_r+0x1f0>
 8005a26:	2300      	movs	r3, #0
 8005a28:	f04f 32ff 	mov.w	r2, #4294967295
 8005a2c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005a30:	f10a 0a01 	add.w	sl, sl, #1
 8005a34:	9304      	str	r3, [sp, #16]
 8005a36:	9307      	str	r3, [sp, #28]
 8005a38:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005a3c:	931a      	str	r3, [sp, #104]	; 0x68
 8005a3e:	4654      	mov	r4, sl
 8005a40:	2205      	movs	r2, #5
 8005a42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005a46:	4854      	ldr	r0, [pc, #336]	; (8005b98 <_vfiprintf_r+0x220>)
 8005a48:	f000 fb82 	bl	8006150 <memchr>
 8005a4c:	9a04      	ldr	r2, [sp, #16]
 8005a4e:	b9d8      	cbnz	r0, 8005a88 <_vfiprintf_r+0x110>
 8005a50:	06d1      	lsls	r1, r2, #27
 8005a52:	bf44      	itt	mi
 8005a54:	2320      	movmi	r3, #32
 8005a56:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005a5a:	0713      	lsls	r3, r2, #28
 8005a5c:	bf44      	itt	mi
 8005a5e:	232b      	movmi	r3, #43	; 0x2b
 8005a60:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005a64:	f89a 3000 	ldrb.w	r3, [sl]
 8005a68:	2b2a      	cmp	r3, #42	; 0x2a
 8005a6a:	d015      	beq.n	8005a98 <_vfiprintf_r+0x120>
 8005a6c:	4654      	mov	r4, sl
 8005a6e:	2000      	movs	r0, #0
 8005a70:	f04f 0c0a 	mov.w	ip, #10
 8005a74:	9a07      	ldr	r2, [sp, #28]
 8005a76:	4621      	mov	r1, r4
 8005a78:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005a7c:	3b30      	subs	r3, #48	; 0x30
 8005a7e:	2b09      	cmp	r3, #9
 8005a80:	d94d      	bls.n	8005b1e <_vfiprintf_r+0x1a6>
 8005a82:	b1b0      	cbz	r0, 8005ab2 <_vfiprintf_r+0x13a>
 8005a84:	9207      	str	r2, [sp, #28]
 8005a86:	e014      	b.n	8005ab2 <_vfiprintf_r+0x13a>
 8005a88:	eba0 0308 	sub.w	r3, r0, r8
 8005a8c:	fa09 f303 	lsl.w	r3, r9, r3
 8005a90:	4313      	orrs	r3, r2
 8005a92:	46a2      	mov	sl, r4
 8005a94:	9304      	str	r3, [sp, #16]
 8005a96:	e7d2      	b.n	8005a3e <_vfiprintf_r+0xc6>
 8005a98:	9b03      	ldr	r3, [sp, #12]
 8005a9a:	1d19      	adds	r1, r3, #4
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	9103      	str	r1, [sp, #12]
 8005aa0:	2b00      	cmp	r3, #0
 8005aa2:	bfbb      	ittet	lt
 8005aa4:	425b      	neglt	r3, r3
 8005aa6:	f042 0202 	orrlt.w	r2, r2, #2
 8005aaa:	9307      	strge	r3, [sp, #28]
 8005aac:	9307      	strlt	r3, [sp, #28]
 8005aae:	bfb8      	it	lt
 8005ab0:	9204      	strlt	r2, [sp, #16]
 8005ab2:	7823      	ldrb	r3, [r4, #0]
 8005ab4:	2b2e      	cmp	r3, #46	; 0x2e
 8005ab6:	d10c      	bne.n	8005ad2 <_vfiprintf_r+0x15a>
 8005ab8:	7863      	ldrb	r3, [r4, #1]
 8005aba:	2b2a      	cmp	r3, #42	; 0x2a
 8005abc:	d134      	bne.n	8005b28 <_vfiprintf_r+0x1b0>
 8005abe:	9b03      	ldr	r3, [sp, #12]
 8005ac0:	3402      	adds	r4, #2
 8005ac2:	1d1a      	adds	r2, r3, #4
 8005ac4:	681b      	ldr	r3, [r3, #0]
 8005ac6:	9203      	str	r2, [sp, #12]
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	bfb8      	it	lt
 8005acc:	f04f 33ff 	movlt.w	r3, #4294967295
 8005ad0:	9305      	str	r3, [sp, #20]
 8005ad2:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8005b9c <_vfiprintf_r+0x224>
 8005ad6:	2203      	movs	r2, #3
 8005ad8:	4650      	mov	r0, sl
 8005ada:	7821      	ldrb	r1, [r4, #0]
 8005adc:	f000 fb38 	bl	8006150 <memchr>
 8005ae0:	b138      	cbz	r0, 8005af2 <_vfiprintf_r+0x17a>
 8005ae2:	2240      	movs	r2, #64	; 0x40
 8005ae4:	9b04      	ldr	r3, [sp, #16]
 8005ae6:	eba0 000a 	sub.w	r0, r0, sl
 8005aea:	4082      	lsls	r2, r0
 8005aec:	4313      	orrs	r3, r2
 8005aee:	3401      	adds	r4, #1
 8005af0:	9304      	str	r3, [sp, #16]
 8005af2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005af6:	2206      	movs	r2, #6
 8005af8:	4829      	ldr	r0, [pc, #164]	; (8005ba0 <_vfiprintf_r+0x228>)
 8005afa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005afe:	f000 fb27 	bl	8006150 <memchr>
 8005b02:	2800      	cmp	r0, #0
 8005b04:	d03f      	beq.n	8005b86 <_vfiprintf_r+0x20e>
 8005b06:	4b27      	ldr	r3, [pc, #156]	; (8005ba4 <_vfiprintf_r+0x22c>)
 8005b08:	bb1b      	cbnz	r3, 8005b52 <_vfiprintf_r+0x1da>
 8005b0a:	9b03      	ldr	r3, [sp, #12]
 8005b0c:	3307      	adds	r3, #7
 8005b0e:	f023 0307 	bic.w	r3, r3, #7
 8005b12:	3308      	adds	r3, #8
 8005b14:	9303      	str	r3, [sp, #12]
 8005b16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b18:	443b      	add	r3, r7
 8005b1a:	9309      	str	r3, [sp, #36]	; 0x24
 8005b1c:	e768      	b.n	80059f0 <_vfiprintf_r+0x78>
 8005b1e:	460c      	mov	r4, r1
 8005b20:	2001      	movs	r0, #1
 8005b22:	fb0c 3202 	mla	r2, ip, r2, r3
 8005b26:	e7a6      	b.n	8005a76 <_vfiprintf_r+0xfe>
 8005b28:	2300      	movs	r3, #0
 8005b2a:	f04f 0c0a 	mov.w	ip, #10
 8005b2e:	4619      	mov	r1, r3
 8005b30:	3401      	adds	r4, #1
 8005b32:	9305      	str	r3, [sp, #20]
 8005b34:	4620      	mov	r0, r4
 8005b36:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005b3a:	3a30      	subs	r2, #48	; 0x30
 8005b3c:	2a09      	cmp	r2, #9
 8005b3e:	d903      	bls.n	8005b48 <_vfiprintf_r+0x1d0>
 8005b40:	2b00      	cmp	r3, #0
 8005b42:	d0c6      	beq.n	8005ad2 <_vfiprintf_r+0x15a>
 8005b44:	9105      	str	r1, [sp, #20]
 8005b46:	e7c4      	b.n	8005ad2 <_vfiprintf_r+0x15a>
 8005b48:	4604      	mov	r4, r0
 8005b4a:	2301      	movs	r3, #1
 8005b4c:	fb0c 2101 	mla	r1, ip, r1, r2
 8005b50:	e7f0      	b.n	8005b34 <_vfiprintf_r+0x1bc>
 8005b52:	ab03      	add	r3, sp, #12
 8005b54:	9300      	str	r3, [sp, #0]
 8005b56:	462a      	mov	r2, r5
 8005b58:	4630      	mov	r0, r6
 8005b5a:	4b13      	ldr	r3, [pc, #76]	; (8005ba8 <_vfiprintf_r+0x230>)
 8005b5c:	a904      	add	r1, sp, #16
 8005b5e:	f3af 8000 	nop.w
 8005b62:	4607      	mov	r7, r0
 8005b64:	1c78      	adds	r0, r7, #1
 8005b66:	d1d6      	bne.n	8005b16 <_vfiprintf_r+0x19e>
 8005b68:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005b6a:	07d9      	lsls	r1, r3, #31
 8005b6c:	d405      	bmi.n	8005b7a <_vfiprintf_r+0x202>
 8005b6e:	89ab      	ldrh	r3, [r5, #12]
 8005b70:	059a      	lsls	r2, r3, #22
 8005b72:	d402      	bmi.n	8005b7a <_vfiprintf_r+0x202>
 8005b74:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005b76:	f7ff fdd3 	bl	8005720 <__retarget_lock_release_recursive>
 8005b7a:	89ab      	ldrh	r3, [r5, #12]
 8005b7c:	065b      	lsls	r3, r3, #25
 8005b7e:	f53f af1d 	bmi.w	80059bc <_vfiprintf_r+0x44>
 8005b82:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005b84:	e71c      	b.n	80059c0 <_vfiprintf_r+0x48>
 8005b86:	ab03      	add	r3, sp, #12
 8005b88:	9300      	str	r3, [sp, #0]
 8005b8a:	462a      	mov	r2, r5
 8005b8c:	4630      	mov	r0, r6
 8005b8e:	4b06      	ldr	r3, [pc, #24]	; (8005ba8 <_vfiprintf_r+0x230>)
 8005b90:	a904      	add	r1, sp, #16
 8005b92:	f000 f87d 	bl	8005c90 <_printf_i>
 8005b96:	e7e4      	b.n	8005b62 <_vfiprintf_r+0x1ea>
 8005b98:	0800700a 	.word	0x0800700a
 8005b9c:	08007010 	.word	0x08007010
 8005ba0:	08007014 	.word	0x08007014
 8005ba4:	00000000 	.word	0x00000000
 8005ba8:	08005953 	.word	0x08005953

08005bac <_printf_common>:
 8005bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bb0:	4616      	mov	r6, r2
 8005bb2:	4699      	mov	r9, r3
 8005bb4:	688a      	ldr	r2, [r1, #8]
 8005bb6:	690b      	ldr	r3, [r1, #16]
 8005bb8:	4607      	mov	r7, r0
 8005bba:	4293      	cmp	r3, r2
 8005bbc:	bfb8      	it	lt
 8005bbe:	4613      	movlt	r3, r2
 8005bc0:	6033      	str	r3, [r6, #0]
 8005bc2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005bc6:	460c      	mov	r4, r1
 8005bc8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005bcc:	b10a      	cbz	r2, 8005bd2 <_printf_common+0x26>
 8005bce:	3301      	adds	r3, #1
 8005bd0:	6033      	str	r3, [r6, #0]
 8005bd2:	6823      	ldr	r3, [r4, #0]
 8005bd4:	0699      	lsls	r1, r3, #26
 8005bd6:	bf42      	ittt	mi
 8005bd8:	6833      	ldrmi	r3, [r6, #0]
 8005bda:	3302      	addmi	r3, #2
 8005bdc:	6033      	strmi	r3, [r6, #0]
 8005bde:	6825      	ldr	r5, [r4, #0]
 8005be0:	f015 0506 	ands.w	r5, r5, #6
 8005be4:	d106      	bne.n	8005bf4 <_printf_common+0x48>
 8005be6:	f104 0a19 	add.w	sl, r4, #25
 8005bea:	68e3      	ldr	r3, [r4, #12]
 8005bec:	6832      	ldr	r2, [r6, #0]
 8005bee:	1a9b      	subs	r3, r3, r2
 8005bf0:	42ab      	cmp	r3, r5
 8005bf2:	dc2b      	bgt.n	8005c4c <_printf_common+0xa0>
 8005bf4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005bf8:	1e13      	subs	r3, r2, #0
 8005bfa:	6822      	ldr	r2, [r4, #0]
 8005bfc:	bf18      	it	ne
 8005bfe:	2301      	movne	r3, #1
 8005c00:	0692      	lsls	r2, r2, #26
 8005c02:	d430      	bmi.n	8005c66 <_printf_common+0xba>
 8005c04:	4649      	mov	r1, r9
 8005c06:	4638      	mov	r0, r7
 8005c08:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005c0c:	47c0      	blx	r8
 8005c0e:	3001      	adds	r0, #1
 8005c10:	d023      	beq.n	8005c5a <_printf_common+0xae>
 8005c12:	6823      	ldr	r3, [r4, #0]
 8005c14:	6922      	ldr	r2, [r4, #16]
 8005c16:	f003 0306 	and.w	r3, r3, #6
 8005c1a:	2b04      	cmp	r3, #4
 8005c1c:	bf14      	ite	ne
 8005c1e:	2500      	movne	r5, #0
 8005c20:	6833      	ldreq	r3, [r6, #0]
 8005c22:	f04f 0600 	mov.w	r6, #0
 8005c26:	bf08      	it	eq
 8005c28:	68e5      	ldreq	r5, [r4, #12]
 8005c2a:	f104 041a 	add.w	r4, r4, #26
 8005c2e:	bf08      	it	eq
 8005c30:	1aed      	subeq	r5, r5, r3
 8005c32:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8005c36:	bf08      	it	eq
 8005c38:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005c3c:	4293      	cmp	r3, r2
 8005c3e:	bfc4      	itt	gt
 8005c40:	1a9b      	subgt	r3, r3, r2
 8005c42:	18ed      	addgt	r5, r5, r3
 8005c44:	42b5      	cmp	r5, r6
 8005c46:	d11a      	bne.n	8005c7e <_printf_common+0xd2>
 8005c48:	2000      	movs	r0, #0
 8005c4a:	e008      	b.n	8005c5e <_printf_common+0xb2>
 8005c4c:	2301      	movs	r3, #1
 8005c4e:	4652      	mov	r2, sl
 8005c50:	4649      	mov	r1, r9
 8005c52:	4638      	mov	r0, r7
 8005c54:	47c0      	blx	r8
 8005c56:	3001      	adds	r0, #1
 8005c58:	d103      	bne.n	8005c62 <_printf_common+0xb6>
 8005c5a:	f04f 30ff 	mov.w	r0, #4294967295
 8005c5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c62:	3501      	adds	r5, #1
 8005c64:	e7c1      	b.n	8005bea <_printf_common+0x3e>
 8005c66:	2030      	movs	r0, #48	; 0x30
 8005c68:	18e1      	adds	r1, r4, r3
 8005c6a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005c6e:	1c5a      	adds	r2, r3, #1
 8005c70:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005c74:	4422      	add	r2, r4
 8005c76:	3302      	adds	r3, #2
 8005c78:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005c7c:	e7c2      	b.n	8005c04 <_printf_common+0x58>
 8005c7e:	2301      	movs	r3, #1
 8005c80:	4622      	mov	r2, r4
 8005c82:	4649      	mov	r1, r9
 8005c84:	4638      	mov	r0, r7
 8005c86:	47c0      	blx	r8
 8005c88:	3001      	adds	r0, #1
 8005c8a:	d0e6      	beq.n	8005c5a <_printf_common+0xae>
 8005c8c:	3601      	adds	r6, #1
 8005c8e:	e7d9      	b.n	8005c44 <_printf_common+0x98>

08005c90 <_printf_i>:
 8005c90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005c94:	7e0f      	ldrb	r7, [r1, #24]
 8005c96:	4691      	mov	r9, r2
 8005c98:	2f78      	cmp	r7, #120	; 0x78
 8005c9a:	4680      	mov	r8, r0
 8005c9c:	460c      	mov	r4, r1
 8005c9e:	469a      	mov	sl, r3
 8005ca0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005ca2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8005ca6:	d807      	bhi.n	8005cb8 <_printf_i+0x28>
 8005ca8:	2f62      	cmp	r7, #98	; 0x62
 8005caa:	d80a      	bhi.n	8005cc2 <_printf_i+0x32>
 8005cac:	2f00      	cmp	r7, #0
 8005cae:	f000 80d5 	beq.w	8005e5c <_printf_i+0x1cc>
 8005cb2:	2f58      	cmp	r7, #88	; 0x58
 8005cb4:	f000 80c1 	beq.w	8005e3a <_printf_i+0x1aa>
 8005cb8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005cbc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005cc0:	e03a      	b.n	8005d38 <_printf_i+0xa8>
 8005cc2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005cc6:	2b15      	cmp	r3, #21
 8005cc8:	d8f6      	bhi.n	8005cb8 <_printf_i+0x28>
 8005cca:	a101      	add	r1, pc, #4	; (adr r1, 8005cd0 <_printf_i+0x40>)
 8005ccc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005cd0:	08005d29 	.word	0x08005d29
 8005cd4:	08005d3d 	.word	0x08005d3d
 8005cd8:	08005cb9 	.word	0x08005cb9
 8005cdc:	08005cb9 	.word	0x08005cb9
 8005ce0:	08005cb9 	.word	0x08005cb9
 8005ce4:	08005cb9 	.word	0x08005cb9
 8005ce8:	08005d3d 	.word	0x08005d3d
 8005cec:	08005cb9 	.word	0x08005cb9
 8005cf0:	08005cb9 	.word	0x08005cb9
 8005cf4:	08005cb9 	.word	0x08005cb9
 8005cf8:	08005cb9 	.word	0x08005cb9
 8005cfc:	08005e43 	.word	0x08005e43
 8005d00:	08005d69 	.word	0x08005d69
 8005d04:	08005dfd 	.word	0x08005dfd
 8005d08:	08005cb9 	.word	0x08005cb9
 8005d0c:	08005cb9 	.word	0x08005cb9
 8005d10:	08005e65 	.word	0x08005e65
 8005d14:	08005cb9 	.word	0x08005cb9
 8005d18:	08005d69 	.word	0x08005d69
 8005d1c:	08005cb9 	.word	0x08005cb9
 8005d20:	08005cb9 	.word	0x08005cb9
 8005d24:	08005e05 	.word	0x08005e05
 8005d28:	682b      	ldr	r3, [r5, #0]
 8005d2a:	1d1a      	adds	r2, r3, #4
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	602a      	str	r2, [r5, #0]
 8005d30:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005d34:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005d38:	2301      	movs	r3, #1
 8005d3a:	e0a0      	b.n	8005e7e <_printf_i+0x1ee>
 8005d3c:	6820      	ldr	r0, [r4, #0]
 8005d3e:	682b      	ldr	r3, [r5, #0]
 8005d40:	0607      	lsls	r7, r0, #24
 8005d42:	f103 0104 	add.w	r1, r3, #4
 8005d46:	6029      	str	r1, [r5, #0]
 8005d48:	d501      	bpl.n	8005d4e <_printf_i+0xbe>
 8005d4a:	681e      	ldr	r6, [r3, #0]
 8005d4c:	e003      	b.n	8005d56 <_printf_i+0xc6>
 8005d4e:	0646      	lsls	r6, r0, #25
 8005d50:	d5fb      	bpl.n	8005d4a <_printf_i+0xba>
 8005d52:	f9b3 6000 	ldrsh.w	r6, [r3]
 8005d56:	2e00      	cmp	r6, #0
 8005d58:	da03      	bge.n	8005d62 <_printf_i+0xd2>
 8005d5a:	232d      	movs	r3, #45	; 0x2d
 8005d5c:	4276      	negs	r6, r6
 8005d5e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005d62:	230a      	movs	r3, #10
 8005d64:	4859      	ldr	r0, [pc, #356]	; (8005ecc <_printf_i+0x23c>)
 8005d66:	e012      	b.n	8005d8e <_printf_i+0xfe>
 8005d68:	682b      	ldr	r3, [r5, #0]
 8005d6a:	6820      	ldr	r0, [r4, #0]
 8005d6c:	1d19      	adds	r1, r3, #4
 8005d6e:	6029      	str	r1, [r5, #0]
 8005d70:	0605      	lsls	r5, r0, #24
 8005d72:	d501      	bpl.n	8005d78 <_printf_i+0xe8>
 8005d74:	681e      	ldr	r6, [r3, #0]
 8005d76:	e002      	b.n	8005d7e <_printf_i+0xee>
 8005d78:	0641      	lsls	r1, r0, #25
 8005d7a:	d5fb      	bpl.n	8005d74 <_printf_i+0xe4>
 8005d7c:	881e      	ldrh	r6, [r3, #0]
 8005d7e:	2f6f      	cmp	r7, #111	; 0x6f
 8005d80:	bf0c      	ite	eq
 8005d82:	2308      	moveq	r3, #8
 8005d84:	230a      	movne	r3, #10
 8005d86:	4851      	ldr	r0, [pc, #324]	; (8005ecc <_printf_i+0x23c>)
 8005d88:	2100      	movs	r1, #0
 8005d8a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005d8e:	6865      	ldr	r5, [r4, #4]
 8005d90:	2d00      	cmp	r5, #0
 8005d92:	bfa8      	it	ge
 8005d94:	6821      	ldrge	r1, [r4, #0]
 8005d96:	60a5      	str	r5, [r4, #8]
 8005d98:	bfa4      	itt	ge
 8005d9a:	f021 0104 	bicge.w	r1, r1, #4
 8005d9e:	6021      	strge	r1, [r4, #0]
 8005da0:	b90e      	cbnz	r6, 8005da6 <_printf_i+0x116>
 8005da2:	2d00      	cmp	r5, #0
 8005da4:	d04b      	beq.n	8005e3e <_printf_i+0x1ae>
 8005da6:	4615      	mov	r5, r2
 8005da8:	fbb6 f1f3 	udiv	r1, r6, r3
 8005dac:	fb03 6711 	mls	r7, r3, r1, r6
 8005db0:	5dc7      	ldrb	r7, [r0, r7]
 8005db2:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8005db6:	4637      	mov	r7, r6
 8005db8:	42bb      	cmp	r3, r7
 8005dba:	460e      	mov	r6, r1
 8005dbc:	d9f4      	bls.n	8005da8 <_printf_i+0x118>
 8005dbe:	2b08      	cmp	r3, #8
 8005dc0:	d10b      	bne.n	8005dda <_printf_i+0x14a>
 8005dc2:	6823      	ldr	r3, [r4, #0]
 8005dc4:	07de      	lsls	r6, r3, #31
 8005dc6:	d508      	bpl.n	8005dda <_printf_i+0x14a>
 8005dc8:	6923      	ldr	r3, [r4, #16]
 8005dca:	6861      	ldr	r1, [r4, #4]
 8005dcc:	4299      	cmp	r1, r3
 8005dce:	bfde      	ittt	le
 8005dd0:	2330      	movle	r3, #48	; 0x30
 8005dd2:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005dd6:	f105 35ff 	addle.w	r5, r5, #4294967295
 8005dda:	1b52      	subs	r2, r2, r5
 8005ddc:	6122      	str	r2, [r4, #16]
 8005dde:	464b      	mov	r3, r9
 8005de0:	4621      	mov	r1, r4
 8005de2:	4640      	mov	r0, r8
 8005de4:	f8cd a000 	str.w	sl, [sp]
 8005de8:	aa03      	add	r2, sp, #12
 8005dea:	f7ff fedf 	bl	8005bac <_printf_common>
 8005dee:	3001      	adds	r0, #1
 8005df0:	d14a      	bne.n	8005e88 <_printf_i+0x1f8>
 8005df2:	f04f 30ff 	mov.w	r0, #4294967295
 8005df6:	b004      	add	sp, #16
 8005df8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005dfc:	6823      	ldr	r3, [r4, #0]
 8005dfe:	f043 0320 	orr.w	r3, r3, #32
 8005e02:	6023      	str	r3, [r4, #0]
 8005e04:	2778      	movs	r7, #120	; 0x78
 8005e06:	4832      	ldr	r0, [pc, #200]	; (8005ed0 <_printf_i+0x240>)
 8005e08:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8005e0c:	6823      	ldr	r3, [r4, #0]
 8005e0e:	6829      	ldr	r1, [r5, #0]
 8005e10:	061f      	lsls	r7, r3, #24
 8005e12:	f851 6b04 	ldr.w	r6, [r1], #4
 8005e16:	d402      	bmi.n	8005e1e <_printf_i+0x18e>
 8005e18:	065f      	lsls	r7, r3, #25
 8005e1a:	bf48      	it	mi
 8005e1c:	b2b6      	uxthmi	r6, r6
 8005e1e:	07df      	lsls	r7, r3, #31
 8005e20:	bf48      	it	mi
 8005e22:	f043 0320 	orrmi.w	r3, r3, #32
 8005e26:	6029      	str	r1, [r5, #0]
 8005e28:	bf48      	it	mi
 8005e2a:	6023      	strmi	r3, [r4, #0]
 8005e2c:	b91e      	cbnz	r6, 8005e36 <_printf_i+0x1a6>
 8005e2e:	6823      	ldr	r3, [r4, #0]
 8005e30:	f023 0320 	bic.w	r3, r3, #32
 8005e34:	6023      	str	r3, [r4, #0]
 8005e36:	2310      	movs	r3, #16
 8005e38:	e7a6      	b.n	8005d88 <_printf_i+0xf8>
 8005e3a:	4824      	ldr	r0, [pc, #144]	; (8005ecc <_printf_i+0x23c>)
 8005e3c:	e7e4      	b.n	8005e08 <_printf_i+0x178>
 8005e3e:	4615      	mov	r5, r2
 8005e40:	e7bd      	b.n	8005dbe <_printf_i+0x12e>
 8005e42:	682b      	ldr	r3, [r5, #0]
 8005e44:	6826      	ldr	r6, [r4, #0]
 8005e46:	1d18      	adds	r0, r3, #4
 8005e48:	6961      	ldr	r1, [r4, #20]
 8005e4a:	6028      	str	r0, [r5, #0]
 8005e4c:	0635      	lsls	r5, r6, #24
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	d501      	bpl.n	8005e56 <_printf_i+0x1c6>
 8005e52:	6019      	str	r1, [r3, #0]
 8005e54:	e002      	b.n	8005e5c <_printf_i+0x1cc>
 8005e56:	0670      	lsls	r0, r6, #25
 8005e58:	d5fb      	bpl.n	8005e52 <_printf_i+0x1c2>
 8005e5a:	8019      	strh	r1, [r3, #0]
 8005e5c:	2300      	movs	r3, #0
 8005e5e:	4615      	mov	r5, r2
 8005e60:	6123      	str	r3, [r4, #16]
 8005e62:	e7bc      	b.n	8005dde <_printf_i+0x14e>
 8005e64:	682b      	ldr	r3, [r5, #0]
 8005e66:	2100      	movs	r1, #0
 8005e68:	1d1a      	adds	r2, r3, #4
 8005e6a:	602a      	str	r2, [r5, #0]
 8005e6c:	681d      	ldr	r5, [r3, #0]
 8005e6e:	6862      	ldr	r2, [r4, #4]
 8005e70:	4628      	mov	r0, r5
 8005e72:	f000 f96d 	bl	8006150 <memchr>
 8005e76:	b108      	cbz	r0, 8005e7c <_printf_i+0x1ec>
 8005e78:	1b40      	subs	r0, r0, r5
 8005e7a:	6060      	str	r0, [r4, #4]
 8005e7c:	6863      	ldr	r3, [r4, #4]
 8005e7e:	6123      	str	r3, [r4, #16]
 8005e80:	2300      	movs	r3, #0
 8005e82:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005e86:	e7aa      	b.n	8005dde <_printf_i+0x14e>
 8005e88:	462a      	mov	r2, r5
 8005e8a:	4649      	mov	r1, r9
 8005e8c:	4640      	mov	r0, r8
 8005e8e:	6923      	ldr	r3, [r4, #16]
 8005e90:	47d0      	blx	sl
 8005e92:	3001      	adds	r0, #1
 8005e94:	d0ad      	beq.n	8005df2 <_printf_i+0x162>
 8005e96:	6823      	ldr	r3, [r4, #0]
 8005e98:	079b      	lsls	r3, r3, #30
 8005e9a:	d413      	bmi.n	8005ec4 <_printf_i+0x234>
 8005e9c:	68e0      	ldr	r0, [r4, #12]
 8005e9e:	9b03      	ldr	r3, [sp, #12]
 8005ea0:	4298      	cmp	r0, r3
 8005ea2:	bfb8      	it	lt
 8005ea4:	4618      	movlt	r0, r3
 8005ea6:	e7a6      	b.n	8005df6 <_printf_i+0x166>
 8005ea8:	2301      	movs	r3, #1
 8005eaa:	4632      	mov	r2, r6
 8005eac:	4649      	mov	r1, r9
 8005eae:	4640      	mov	r0, r8
 8005eb0:	47d0      	blx	sl
 8005eb2:	3001      	adds	r0, #1
 8005eb4:	d09d      	beq.n	8005df2 <_printf_i+0x162>
 8005eb6:	3501      	adds	r5, #1
 8005eb8:	68e3      	ldr	r3, [r4, #12]
 8005eba:	9903      	ldr	r1, [sp, #12]
 8005ebc:	1a5b      	subs	r3, r3, r1
 8005ebe:	42ab      	cmp	r3, r5
 8005ec0:	dcf2      	bgt.n	8005ea8 <_printf_i+0x218>
 8005ec2:	e7eb      	b.n	8005e9c <_printf_i+0x20c>
 8005ec4:	2500      	movs	r5, #0
 8005ec6:	f104 0619 	add.w	r6, r4, #25
 8005eca:	e7f5      	b.n	8005eb8 <_printf_i+0x228>
 8005ecc:	0800701b 	.word	0x0800701b
 8005ed0:	0800702c 	.word	0x0800702c

08005ed4 <__sflush_r>:
 8005ed4:	898a      	ldrh	r2, [r1, #12]
 8005ed6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ed8:	4605      	mov	r5, r0
 8005eda:	0710      	lsls	r0, r2, #28
 8005edc:	460c      	mov	r4, r1
 8005ede:	d457      	bmi.n	8005f90 <__sflush_r+0xbc>
 8005ee0:	684b      	ldr	r3, [r1, #4]
 8005ee2:	2b00      	cmp	r3, #0
 8005ee4:	dc04      	bgt.n	8005ef0 <__sflush_r+0x1c>
 8005ee6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005ee8:	2b00      	cmp	r3, #0
 8005eea:	dc01      	bgt.n	8005ef0 <__sflush_r+0x1c>
 8005eec:	2000      	movs	r0, #0
 8005eee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005ef0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005ef2:	2e00      	cmp	r6, #0
 8005ef4:	d0fa      	beq.n	8005eec <__sflush_r+0x18>
 8005ef6:	2300      	movs	r3, #0
 8005ef8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005efc:	682f      	ldr	r7, [r5, #0]
 8005efe:	6a21      	ldr	r1, [r4, #32]
 8005f00:	602b      	str	r3, [r5, #0]
 8005f02:	d032      	beq.n	8005f6a <__sflush_r+0x96>
 8005f04:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005f06:	89a3      	ldrh	r3, [r4, #12]
 8005f08:	075a      	lsls	r2, r3, #29
 8005f0a:	d505      	bpl.n	8005f18 <__sflush_r+0x44>
 8005f0c:	6863      	ldr	r3, [r4, #4]
 8005f0e:	1ac0      	subs	r0, r0, r3
 8005f10:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005f12:	b10b      	cbz	r3, 8005f18 <__sflush_r+0x44>
 8005f14:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f16:	1ac0      	subs	r0, r0, r3
 8005f18:	2300      	movs	r3, #0
 8005f1a:	4602      	mov	r2, r0
 8005f1c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005f1e:	4628      	mov	r0, r5
 8005f20:	6a21      	ldr	r1, [r4, #32]
 8005f22:	47b0      	blx	r6
 8005f24:	1c43      	adds	r3, r0, #1
 8005f26:	89a3      	ldrh	r3, [r4, #12]
 8005f28:	d106      	bne.n	8005f38 <__sflush_r+0x64>
 8005f2a:	6829      	ldr	r1, [r5, #0]
 8005f2c:	291d      	cmp	r1, #29
 8005f2e:	d82b      	bhi.n	8005f88 <__sflush_r+0xb4>
 8005f30:	4a28      	ldr	r2, [pc, #160]	; (8005fd4 <__sflush_r+0x100>)
 8005f32:	410a      	asrs	r2, r1
 8005f34:	07d6      	lsls	r6, r2, #31
 8005f36:	d427      	bmi.n	8005f88 <__sflush_r+0xb4>
 8005f38:	2200      	movs	r2, #0
 8005f3a:	6062      	str	r2, [r4, #4]
 8005f3c:	6922      	ldr	r2, [r4, #16]
 8005f3e:	04d9      	lsls	r1, r3, #19
 8005f40:	6022      	str	r2, [r4, #0]
 8005f42:	d504      	bpl.n	8005f4e <__sflush_r+0x7a>
 8005f44:	1c42      	adds	r2, r0, #1
 8005f46:	d101      	bne.n	8005f4c <__sflush_r+0x78>
 8005f48:	682b      	ldr	r3, [r5, #0]
 8005f4a:	b903      	cbnz	r3, 8005f4e <__sflush_r+0x7a>
 8005f4c:	6560      	str	r0, [r4, #84]	; 0x54
 8005f4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005f50:	602f      	str	r7, [r5, #0]
 8005f52:	2900      	cmp	r1, #0
 8005f54:	d0ca      	beq.n	8005eec <__sflush_r+0x18>
 8005f56:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005f5a:	4299      	cmp	r1, r3
 8005f5c:	d002      	beq.n	8005f64 <__sflush_r+0x90>
 8005f5e:	4628      	mov	r0, r5
 8005f60:	f7ff fbee 	bl	8005740 <_free_r>
 8005f64:	2000      	movs	r0, #0
 8005f66:	6360      	str	r0, [r4, #52]	; 0x34
 8005f68:	e7c1      	b.n	8005eee <__sflush_r+0x1a>
 8005f6a:	2301      	movs	r3, #1
 8005f6c:	4628      	mov	r0, r5
 8005f6e:	47b0      	blx	r6
 8005f70:	1c41      	adds	r1, r0, #1
 8005f72:	d1c8      	bne.n	8005f06 <__sflush_r+0x32>
 8005f74:	682b      	ldr	r3, [r5, #0]
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	d0c5      	beq.n	8005f06 <__sflush_r+0x32>
 8005f7a:	2b1d      	cmp	r3, #29
 8005f7c:	d001      	beq.n	8005f82 <__sflush_r+0xae>
 8005f7e:	2b16      	cmp	r3, #22
 8005f80:	d101      	bne.n	8005f86 <__sflush_r+0xb2>
 8005f82:	602f      	str	r7, [r5, #0]
 8005f84:	e7b2      	b.n	8005eec <__sflush_r+0x18>
 8005f86:	89a3      	ldrh	r3, [r4, #12]
 8005f88:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005f8c:	81a3      	strh	r3, [r4, #12]
 8005f8e:	e7ae      	b.n	8005eee <__sflush_r+0x1a>
 8005f90:	690f      	ldr	r7, [r1, #16]
 8005f92:	2f00      	cmp	r7, #0
 8005f94:	d0aa      	beq.n	8005eec <__sflush_r+0x18>
 8005f96:	0793      	lsls	r3, r2, #30
 8005f98:	bf18      	it	ne
 8005f9a:	2300      	movne	r3, #0
 8005f9c:	680e      	ldr	r6, [r1, #0]
 8005f9e:	bf08      	it	eq
 8005fa0:	694b      	ldreq	r3, [r1, #20]
 8005fa2:	1bf6      	subs	r6, r6, r7
 8005fa4:	600f      	str	r7, [r1, #0]
 8005fa6:	608b      	str	r3, [r1, #8]
 8005fa8:	2e00      	cmp	r6, #0
 8005faa:	dd9f      	ble.n	8005eec <__sflush_r+0x18>
 8005fac:	4633      	mov	r3, r6
 8005fae:	463a      	mov	r2, r7
 8005fb0:	4628      	mov	r0, r5
 8005fb2:	6a21      	ldr	r1, [r4, #32]
 8005fb4:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8005fb8:	47e0      	blx	ip
 8005fba:	2800      	cmp	r0, #0
 8005fbc:	dc06      	bgt.n	8005fcc <__sflush_r+0xf8>
 8005fbe:	89a3      	ldrh	r3, [r4, #12]
 8005fc0:	f04f 30ff 	mov.w	r0, #4294967295
 8005fc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005fc8:	81a3      	strh	r3, [r4, #12]
 8005fca:	e790      	b.n	8005eee <__sflush_r+0x1a>
 8005fcc:	4407      	add	r7, r0
 8005fce:	1a36      	subs	r6, r6, r0
 8005fd0:	e7ea      	b.n	8005fa8 <__sflush_r+0xd4>
 8005fd2:	bf00      	nop
 8005fd4:	dfbffffe 	.word	0xdfbffffe

08005fd8 <_fflush_r>:
 8005fd8:	b538      	push	{r3, r4, r5, lr}
 8005fda:	690b      	ldr	r3, [r1, #16]
 8005fdc:	4605      	mov	r5, r0
 8005fde:	460c      	mov	r4, r1
 8005fe0:	b913      	cbnz	r3, 8005fe8 <_fflush_r+0x10>
 8005fe2:	2500      	movs	r5, #0
 8005fe4:	4628      	mov	r0, r5
 8005fe6:	bd38      	pop	{r3, r4, r5, pc}
 8005fe8:	b118      	cbz	r0, 8005ff2 <_fflush_r+0x1a>
 8005fea:	6a03      	ldr	r3, [r0, #32]
 8005fec:	b90b      	cbnz	r3, 8005ff2 <_fflush_r+0x1a>
 8005fee:	f7ff f9a1 	bl	8005334 <__sinit>
 8005ff2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005ff6:	2b00      	cmp	r3, #0
 8005ff8:	d0f3      	beq.n	8005fe2 <_fflush_r+0xa>
 8005ffa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005ffc:	07d0      	lsls	r0, r2, #31
 8005ffe:	d404      	bmi.n	800600a <_fflush_r+0x32>
 8006000:	0599      	lsls	r1, r3, #22
 8006002:	d402      	bmi.n	800600a <_fflush_r+0x32>
 8006004:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006006:	f7ff fb8a 	bl	800571e <__retarget_lock_acquire_recursive>
 800600a:	4628      	mov	r0, r5
 800600c:	4621      	mov	r1, r4
 800600e:	f7ff ff61 	bl	8005ed4 <__sflush_r>
 8006012:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006014:	4605      	mov	r5, r0
 8006016:	07da      	lsls	r2, r3, #31
 8006018:	d4e4      	bmi.n	8005fe4 <_fflush_r+0xc>
 800601a:	89a3      	ldrh	r3, [r4, #12]
 800601c:	059b      	lsls	r3, r3, #22
 800601e:	d4e1      	bmi.n	8005fe4 <_fflush_r+0xc>
 8006020:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006022:	f7ff fb7d 	bl	8005720 <__retarget_lock_release_recursive>
 8006026:	e7dd      	b.n	8005fe4 <_fflush_r+0xc>

08006028 <__swhatbuf_r>:
 8006028:	b570      	push	{r4, r5, r6, lr}
 800602a:	460c      	mov	r4, r1
 800602c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006030:	4615      	mov	r5, r2
 8006032:	2900      	cmp	r1, #0
 8006034:	461e      	mov	r6, r3
 8006036:	b096      	sub	sp, #88	; 0x58
 8006038:	da0c      	bge.n	8006054 <__swhatbuf_r+0x2c>
 800603a:	89a3      	ldrh	r3, [r4, #12]
 800603c:	2100      	movs	r1, #0
 800603e:	f013 0f80 	tst.w	r3, #128	; 0x80
 8006042:	bf0c      	ite	eq
 8006044:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8006048:	2340      	movne	r3, #64	; 0x40
 800604a:	2000      	movs	r0, #0
 800604c:	6031      	str	r1, [r6, #0]
 800604e:	602b      	str	r3, [r5, #0]
 8006050:	b016      	add	sp, #88	; 0x58
 8006052:	bd70      	pop	{r4, r5, r6, pc}
 8006054:	466a      	mov	r2, sp
 8006056:	f000 f849 	bl	80060ec <_fstat_r>
 800605a:	2800      	cmp	r0, #0
 800605c:	dbed      	blt.n	800603a <__swhatbuf_r+0x12>
 800605e:	9901      	ldr	r1, [sp, #4]
 8006060:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8006064:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8006068:	4259      	negs	r1, r3
 800606a:	4159      	adcs	r1, r3
 800606c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006070:	e7eb      	b.n	800604a <__swhatbuf_r+0x22>

08006072 <__smakebuf_r>:
 8006072:	898b      	ldrh	r3, [r1, #12]
 8006074:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006076:	079d      	lsls	r5, r3, #30
 8006078:	4606      	mov	r6, r0
 800607a:	460c      	mov	r4, r1
 800607c:	d507      	bpl.n	800608e <__smakebuf_r+0x1c>
 800607e:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006082:	6023      	str	r3, [r4, #0]
 8006084:	6123      	str	r3, [r4, #16]
 8006086:	2301      	movs	r3, #1
 8006088:	6163      	str	r3, [r4, #20]
 800608a:	b002      	add	sp, #8
 800608c:	bd70      	pop	{r4, r5, r6, pc}
 800608e:	466a      	mov	r2, sp
 8006090:	ab01      	add	r3, sp, #4
 8006092:	f7ff ffc9 	bl	8006028 <__swhatbuf_r>
 8006096:	9900      	ldr	r1, [sp, #0]
 8006098:	4605      	mov	r5, r0
 800609a:	4630      	mov	r0, r6
 800609c:	f7ff fbb8 	bl	8005810 <_malloc_r>
 80060a0:	b948      	cbnz	r0, 80060b6 <__smakebuf_r+0x44>
 80060a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80060a6:	059a      	lsls	r2, r3, #22
 80060a8:	d4ef      	bmi.n	800608a <__smakebuf_r+0x18>
 80060aa:	f023 0303 	bic.w	r3, r3, #3
 80060ae:	f043 0302 	orr.w	r3, r3, #2
 80060b2:	81a3      	strh	r3, [r4, #12]
 80060b4:	e7e3      	b.n	800607e <__smakebuf_r+0xc>
 80060b6:	89a3      	ldrh	r3, [r4, #12]
 80060b8:	6020      	str	r0, [r4, #0]
 80060ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80060be:	81a3      	strh	r3, [r4, #12]
 80060c0:	9b00      	ldr	r3, [sp, #0]
 80060c2:	6120      	str	r0, [r4, #16]
 80060c4:	6163      	str	r3, [r4, #20]
 80060c6:	9b01      	ldr	r3, [sp, #4]
 80060c8:	b15b      	cbz	r3, 80060e2 <__smakebuf_r+0x70>
 80060ca:	4630      	mov	r0, r6
 80060cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80060d0:	f000 f81e 	bl	8006110 <_isatty_r>
 80060d4:	b128      	cbz	r0, 80060e2 <__smakebuf_r+0x70>
 80060d6:	89a3      	ldrh	r3, [r4, #12]
 80060d8:	f023 0303 	bic.w	r3, r3, #3
 80060dc:	f043 0301 	orr.w	r3, r3, #1
 80060e0:	81a3      	strh	r3, [r4, #12]
 80060e2:	89a3      	ldrh	r3, [r4, #12]
 80060e4:	431d      	orrs	r5, r3
 80060e6:	81a5      	strh	r5, [r4, #12]
 80060e8:	e7cf      	b.n	800608a <__smakebuf_r+0x18>
	...

080060ec <_fstat_r>:
 80060ec:	b538      	push	{r3, r4, r5, lr}
 80060ee:	2300      	movs	r3, #0
 80060f0:	4d06      	ldr	r5, [pc, #24]	; (800610c <_fstat_r+0x20>)
 80060f2:	4604      	mov	r4, r0
 80060f4:	4608      	mov	r0, r1
 80060f6:	4611      	mov	r1, r2
 80060f8:	602b      	str	r3, [r5, #0]
 80060fa:	f7fa fcb9 	bl	8000a70 <_fstat>
 80060fe:	1c43      	adds	r3, r0, #1
 8006100:	d102      	bne.n	8006108 <_fstat_r+0x1c>
 8006102:	682b      	ldr	r3, [r5, #0]
 8006104:	b103      	cbz	r3, 8006108 <_fstat_r+0x1c>
 8006106:	6023      	str	r3, [r4, #0]
 8006108:	bd38      	pop	{r3, r4, r5, pc}
 800610a:	bf00      	nop
 800610c:	2000166c 	.word	0x2000166c

08006110 <_isatty_r>:
 8006110:	b538      	push	{r3, r4, r5, lr}
 8006112:	2300      	movs	r3, #0
 8006114:	4d05      	ldr	r5, [pc, #20]	; (800612c <_isatty_r+0x1c>)
 8006116:	4604      	mov	r4, r0
 8006118:	4608      	mov	r0, r1
 800611a:	602b      	str	r3, [r5, #0]
 800611c:	f7fa fcb7 	bl	8000a8e <_isatty>
 8006120:	1c43      	adds	r3, r0, #1
 8006122:	d102      	bne.n	800612a <_isatty_r+0x1a>
 8006124:	682b      	ldr	r3, [r5, #0]
 8006126:	b103      	cbz	r3, 800612a <_isatty_r+0x1a>
 8006128:	6023      	str	r3, [r4, #0]
 800612a:	bd38      	pop	{r3, r4, r5, pc}
 800612c:	2000166c 	.word	0x2000166c

08006130 <_sbrk_r>:
 8006130:	b538      	push	{r3, r4, r5, lr}
 8006132:	2300      	movs	r3, #0
 8006134:	4d05      	ldr	r5, [pc, #20]	; (800614c <_sbrk_r+0x1c>)
 8006136:	4604      	mov	r4, r0
 8006138:	4608      	mov	r0, r1
 800613a:	602b      	str	r3, [r5, #0]
 800613c:	f7fa fcbe 	bl	8000abc <_sbrk>
 8006140:	1c43      	adds	r3, r0, #1
 8006142:	d102      	bne.n	800614a <_sbrk_r+0x1a>
 8006144:	682b      	ldr	r3, [r5, #0]
 8006146:	b103      	cbz	r3, 800614a <_sbrk_r+0x1a>
 8006148:	6023      	str	r3, [r4, #0]
 800614a:	bd38      	pop	{r3, r4, r5, pc}
 800614c:	2000166c 	.word	0x2000166c

08006150 <memchr>:
 8006150:	4603      	mov	r3, r0
 8006152:	b510      	push	{r4, lr}
 8006154:	b2c9      	uxtb	r1, r1
 8006156:	4402      	add	r2, r0
 8006158:	4293      	cmp	r3, r2
 800615a:	4618      	mov	r0, r3
 800615c:	d101      	bne.n	8006162 <memchr+0x12>
 800615e:	2000      	movs	r0, #0
 8006160:	e003      	b.n	800616a <memchr+0x1a>
 8006162:	7804      	ldrb	r4, [r0, #0]
 8006164:	3301      	adds	r3, #1
 8006166:	428c      	cmp	r4, r1
 8006168:	d1f6      	bne.n	8006158 <memchr+0x8>
 800616a:	bd10      	pop	{r4, pc}

0800616c <_init>:
 800616c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800616e:	bf00      	nop
 8006170:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006172:	bc08      	pop	{r3}
 8006174:	469e      	mov	lr, r3
 8006176:	4770      	bx	lr

08006178 <_fini>:
 8006178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800617a:	bf00      	nop
 800617c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800617e:	bc08      	pop	{r3}
 8006180:	469e      	mov	lr, r3
 8006182:	4770      	bx	lr
